# DO NOT CHANGE the "init" and "install" sections below

# Download script file from GitHub
init:
  ps: |
        $ErrorActionPreference = "Stop"
        Invoke-WebRequest http://raw.github.com/krlmlr/r-appveyor/master/scripts/appveyor-tool.ps1 -OutFile "..\appveyor-tool.ps1"
        Import-Module '..\appveyor-tool.ps1'

install:
  - ps: Bootstrap
  - cmd: R -q -e "writeLines('options(repos = \'https://cloud.r-project.org\')', '~/.Rprofile')"
  - cmd: R -q -e "writeLines('miktex-portable-2.9.6753.exe', '.Rbuildignore')"
  - cmd: R -q -e "getOption('repos')"
  - cmd: R -q -e "if (!requireNamespace('devtools')) install.packages('devtools')"
  - cmd: R -q -e "if (!requireNamespace('curl')) install.packages('curl')"
  - cmd: R -q -e "devtools::install_github('ropenscilabs/tic'); tic::prepare_all_stages()"

cache:
  - C:\RLibrary
  - C:\Program Files\Pandoc\
  - C:\miktex -> appveyor.yml

before_build: R -q -e "tic::before_install()"
build_script: R -q -e "tic::install()"
before_test:
 - ps: >-
      if (-Not (Test-Path "C:\Program Files\Pandoc\")) {
        cinst pandoc
      }
 - ps: $env:Path += ";C:\Program Files\Pandoc\"
 # Install miktex to get pdflatex, if we don't get it from the cache
 - if not exist c:\miktex\texmfs\install\miktex\bin\pdflatex.exe appveyor DownloadFile https://miktex.org/download/ctan/systems/win32/miktex/setup/windows-x86/miktex-portable-2.9.6753.exe
 - if not exist c:\miktex\texmfs\install\miktex\bin\pdflatex.exe 7z x miktex-portable-2.9.6753.exe -oC:\miktex >NUL
 - set "PATH=%PATH%;c:\miktex\texmfs\install\miktex\bin"
 # autoinstall latex packages (0=no, 1=autoinstall, 2=ask)
 # this adds this to the registry!
 - initexmf --set-config-value "[MPM]AutoInstall=1"
 - R -q -e "tic::before_script()"
after_build: R -q -e "tic::after_install()"
test_script: R -q -e "tic::script()"
# on_success: R -q -e "try(tic::after_success(), silent = TRUE)" covr is run on travis
on_failure: R -q -e "tic::after_failure()"
before_deploy: R -q -e "tic::before_deploy()"
deploy_script: R -q -e "tic::deploy()"
after_deploy: R -q -e "tic::after_deploy()"
on_finish: R -q -e "tic::after_script()"

# Adapt as necessary starting from here

#on_failure:
#  - 7z a failure.zip *.Rcheck\*
#  - appveyor PushArtifact failure.zip

environment:
  global:
    USE_RTOOLS: true

artifacts:
  - path: '*.Rcheck\**\*.log'
    name: Logs

  - path: '*.Rcheck\**\*.out'
    name: Logs

  - path: '*.Rcheck\**\*.fail'
    name: Logs

  - path: '*.Rcheck\**\*.Rout'
    name: Logs

  - path: '\*_*.tar.gz'
    name: Bits

  - path: '\*_*.zip'
    name: Bits
