% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PredictionClassif.R
\docType{data}
\name{PredictionClassif}
\alias{PredictionClassif}
\title{Prediction Object for Classification}
\format{\link[R6:R6Class]{R6::R6Class} object inheriting from \link{Prediction}.}
\description{
This object stores the predictions returned by a learner of class \link{LearnerClassif}.
The field \code{task_type} is set to \code{"classif"}.

If probabilities are provided via construction and response is missing,
the response is calculated from the probabilities: the class label with the highest
probability is chosen. In case of ties, a label is selected randomly.

It is possible to set the probability threshold if probabilities are stored:
\itemize{
\item For binary problems only a single threshold value can be set.
If the probability exceeds the threshold, the positive class is predicted.
If the probability equals the threshold, the label is selected randomly.
\item For binary and multi-class problems, a named numeric vector of thresholds can be set.
The length and names must correspond to the number of classes and class names, respectively.
To determine the class label, the probabilities are divided by the threshold.
This results in a ratio > 1 if the probability exceeds the threshold, and a ratio < 1 otherwise.
Note that it is possible that either none or multiple ratios are greater than 1 at the same time.
Anyway, the class label with maximum ratio is determined.
In case of ties in the ratio, one of the tied class labels is selected randomly.
}
}
\section{Construction}{
\preformatted{p = PredictionClassif$new(task = NULL, response = NULL, prob = NULL)
}
\itemize{
\item \code{task} :: \link{TaskClassif}\cr
Task for which the predictions are made. Used to extract the row ids and the true
labels. Must be subsetted to test set.
\item \code{response} :: \code{factor()}\cr
Vector of predicted class labels.
One element for each observation in the test set.
\item \code{prob} :: \code{matrix()}\cr
Numeric matrix of class probabilities with one column for each class
and one row for each observation in the test set.
\item \code{threshold} :: \code{numeric(1)}\cr
Probability threshold between 0 and 1.
Assigning a value to this field modifies the stored responses.
\item \code{confusion} :: \code{matrix()}\cr
Confusion matrix resulting from the comparison of truth and response.
Truth is in columns, predicted response in rows.
}

Note that it is allowed to initialize this object without any arguments in order
to allow to manually construct \link{Prediction} objects in a piecemeal fashion.
Required are "row_ids", "truth", and "predict_type". Depending on the value of
"predict_types", also "response" and "prob" must be set.
}

\section{Fields}{



\itemize{
\item \code{row_ids} :: (\code{integer()} | \code{character()})\cr
Vector of row ids for which predictions are stored.
\item \code{truth} :: \code{any}\cr
Vector of true labels.
\item \code{response} :: \code{any}\cr
Vector of predicted labels.
\item \code{task_type} :: \code{character(1)}\cr
Stores the type of the \link{Task}.
\item \code{predict_types} :: \code{character()}\cr
Vector of predict types this object stores.
}
}

\examples{
task = mlr_tasks$get("iris")
learner = mlr_learners$get("classif.rpart")
learner$predict_type = "prob"
e = Experiment$new(task, learner)$train()$predict()
p = e$prediction
p$predict_types
head(as.data.table(p))

# confusion matrix
p$confusion

# change threshold
p$threshold = mlr3misc::set_names(c(0.05, 0.9, 0.05), task$class_names)
p$confusion
}
\seealso{
Other Prediction: \code{\link{PredictionRegr}},
  \code{\link{Prediction}}
}
\concept{Prediction}
\keyword{datasets}
