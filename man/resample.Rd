% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resample.R
\name{resample}
\alias{resample}
\title{Resample a Learner on a Task}
\usage{
resample(task, learner, resampling, ctrl = list())
}
\arguments{
\item{task}{(\link{Task}):
Object of type \link{Task}.}

\item{learner}{(\link{Learner}):
Object of type \link{Learner}.}

\item{resampling}{(\link{Resampling}):
Object of type \link{Resampling}.}

\item{ctrl}{(named \code{list()}, e.g. as returned by \code{\link[=mlr_control]{mlr_control()}}):
Object to control various parts of the execution. See \code{\link[=mlr_control]{mlr_control()}}.}
}
\value{
\link{ResampleResult}.
}
\description{
Runs a resampling (possibly in parallel).
}
\examples{
\dontshow{
   set.seed(123)
   .threshold = logger::log_threshold(namespace = "mlr3")
   logger::log_threshold(logger::WARN, namespace = "mlr3")
}
task = mlr_tasks$get("iris")
learner = mlr_learners$get("classif.rpart")
resampling = mlr_resamplings$get("cv")
rr = resample(task, learner, resampling)
print(rr, digits = 2)
rr$aggregated
rr$performance("classif.mmce")

# Repeat resampling with featureless learner and combine
# the ResampleResults into a BenchmarkResult
learner = mlr_learners$get("classif.featureless")
rr.featureless = resample(task, learner, resampling)

bmr = rr$combine(rr.featureless)
bmr$aggregated
\dontshow{
   logger::log_threshold(.threshold, namespace = "mlr3")
}
}
