% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/benchmark.R
\name{benchmark}
\alias{benchmark}
\title{Benchmark Multiple Learners on Multiple Tasks}
\usage{
benchmark(tasks, learners, resamplings, measures = NULL, ctrl = list())
}
\arguments{
\item{tasks}{(list of \link{Task}):\cr
List of objects of type \link{Task}.}

\item{learners}{(list of \link{Learner}):\cr
List of objects of type \link{Learner}.}

\item{resamplings}{(list of \link{Resampling}):\cr
List of objects of type \link{Resampling}.}

\item{measures}{(list of \link{Measure}):\cr
List of performance measures used to assess the predictive performance.
Defaults to the respective measures stored in \code{task}.}

\item{ctrl}{(named \code{list} as returned by \code{\link[=mlr_control]{mlr_control()}}):\cr
Object to control experiment execution. See \code{\link[=mlr_control]{mlr_control()}}.}
}
\value{
\link{BenchmarkResult}.
}
\description{
Runs a benchmark of the cross-product of learners, tasks, and resampling strategies (possibly in parallel).
}
\examples{
\dontshow{
   set.seed(123)
   .threshold = logger::log_threshold(namespace = "mlr3")
   logger::log_threshold(logger::WARN, namespace = "mlr3")
}
tasks = mlr_tasks$mget(c("iris", "sonar"))
learners = mlr_learners$mget(c("classif.featureless", "classif.rpart"))
resamplings = mlr_resamplings$mget(c("holdout", "cv"))
measures = mlr_measures$mget("acc")
bmr = benchmark(tasks, learners, resamplings, measures)

# performance for all conducted experiments
head(as.data.table(bmr))

# aggregated performance values
bmr$aggregated

# Overview of of resamplings that were conducted internally
rrs = bmr$resample_results
print(rrs)

# Extract first ResampleResult
rr = bmr$resample_result(hash = rrs$hash[1])
print(rr)

# Extract predictions of first experiment of this resampling
head(as.data.table(rr$experiment(1)$prediction))
\dontshow{
   logger::log_threshold(.threshold, namespace = "mlr3")
}
}
