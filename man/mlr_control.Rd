% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mlr_control.R
\name{mlr_control}
\alias{mlr_control}
\title{Execution Control Object}
\usage{
mlr_control(...)
}
\arguments{
\item{...}{:: \code{any}\cr
Named arguments to overwrite the defaults / options.
Settings may be provided in a \code{name = value} fashion, or by providing a single named \code{list()}.}
}
\value{
(named \code{list()}) of all settings.
}
\description{
This function creates a named list of settings which control the execution of a \link{Learner}.
\itemize{
\item \code{store_models} (\code{logical(1))}:\cr
If \code{FALSE} (default), models fitted during \code{\link[=resample]{resample()}} and \code{\link[=benchmark]{benchmark()}} are discarded.
Note that you will be unable to predict on new data or extract additional information like
variable importance from the learner.
\item \code{log_threshold} (\code{integer(1)}):\cr The verbosity of logging output. Numeric
values correspond to different verbosity levels. See \href{https://s-fleck.github.io/lgr/articles/lgr.html#log-levels}{the lgr vignette} for
more information. A log-level dictionary is available with
\code{getOption("lgr.log_levels")}. To change the log level for \emph{mlr3} either use
\code{lgr::get_logger("mlr3")$set_threshold("<level>")} or set it globally via
\code{options("lgr.default_threshold")}.
}

\strong{Defaults}\preformatted{$store_models
TRUE

$log_threshold
400
}
}
\examples{
# get a list of the defaults
mlr_control()
}
