% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Measure.R
\name{Measure}
\alias{Measure}
\title{Abstract measure class}
\description{
Abstraction for performance measures.

Predefined measures are stored in \link{mlr_measures}.
}
\section{Usage}{
\preformatted{m = Measure$new(id)
m$id
m$packages
m$task_type
m$calculate(experiment)
m$range
m$minimize
m$aggregate(rr)
}
}

\section{Arguments}{

\itemize{
\item \code{id} (\code{character(1)}):
identifier for this object.
\item \code{experiment} (\link{Experiment}):
Experiment to work on.
\item \code{rr} (\link{ResampleResult}):
Performance object returned by \link{resample} to be aggregated.
}
}

\section{Details}{

\code{$new()} creates a new object of class \link{Measure}.

\code{$id} (\code{character(1)}) stores the identifier of the object.

\code{$packages} (\code{character(1)}) stores the names of required packages.

\code{$task_type} (\code{character}) stores the class names of tasks this measure can operate on.

\code{$range} (\code{numeric(2)}) stores the numeric range of feasible measure values.

\code{$minimize} (\code{logical(1)}) indicates if the good values are reached via minimization.

\code{$calculate} (\code{function}) does the actual work.

\code{$aggregate} (\code{function}) aggregates multiple performance measures using the \code{aggregate} function.
Operates on a \link{ResampleResult} as returned by \link{resample}.
}

\examples{
mlr_measures$get("mmce")
}
\seealso{
Other Measure: \code{\link{mlr_measures}}
}
\concept{Measure}
\keyword{internal}
