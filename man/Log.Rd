% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Log.R
\name{Log}
\alias{Log}
\title{Learner Output Log}
\description{
Object which stores the output of the \code{train} or \code{predict} step of an \link{Experiment}.
}
\section{Usage}{
\preformatted{# Construction
l = Log$new(log = NULL)
#
l$has_condition(cl)
l$format()
l$print()
}
}

\section{Arguments}{

\itemize{
\item \code{log}:
Object as returned by \code{\link[evaluate:evaluate]{evaluate::evaluate()}}.
\item \code{cl} (\code{character(1)}):
Class of a condition. One of "output", "message", "warning", or "error".
}
}

\section{Details}{

\itemize{
\item \code{$new(log)} parses the object returned by \code{\link[evaluate:evaluate]{evaluate::evaluate()}} and creates a new \link{Log}.
\item \code{$has_condition(cl)} returns \code{TRUE} if at least on message of class \code{cl} is logged.
Possible conditions are "output", "message", "warning", and "error".
\item \code{format()} and \code{print()} are for formatting and printing via \code{\link[=format]{format()}} or \code{\link[=print]{print()}}, respectively.
}
}

\examples{
# Create a simple experiment and extract the train log:
task = mlr_tasks$get("sonar")
learner = mlr_learners$get("classif.crashtest")
learner$fallback = mlr_learners$get("classif.featureless")
e = Experiment$new(task, learner)
e$train(ctrl = mlr_control(use_evaluate = TRUE))
log = e$logs$train

log$has_condition("error")
log$print()
}
