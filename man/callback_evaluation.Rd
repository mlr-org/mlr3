% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CallbackEvaluation.R
\name{callback_evaluation}
\alias{callback_evaluation}
\title{Create Evaluation Callback}
\usage{
callback_evaluation(
  id,
  label = NA_character_,
  man = NA_character_,
  on_evaluation_begin = NULL,
  on_evaluation_before_train = NULL,
  on_evaluation_before_predict = NULL,
  on_evaluation_end = NULL
)
}
\arguments{
\item{id}{(\code{character(1)})\cr
Identifier for the new instance.}

\item{label}{(\code{character(1)})\cr
Label for the new instance.}

\item{man}{(\code{character(1)})\cr
String in the format \verb{[pkg]::[topic]} pointing to a manual page for this object.
The referenced help package can be opened via method \verb{$help()}.}

\item{on_evaluation_begin}{(\verb{function()})\cr
Stage called at the beginning of an evaluation.
Called in \code{workhorse()} (internal).}

\item{on_evaluation_before_train}{(\verb{function()})\cr
Stage called before training the learner.
Called in \code{workhorse()} (internal).}

\item{on_evaluation_before_predict}{(\verb{function()})\cr
Stage called before predicting.
Called in \code{workhorse()} (internal).}

\item{on_evaluation_end}{(\verb{function()})\cr
Stage called at the end of an evaluation.
Called in \code{workhorse()} (internal).}
}
\description{
Function to create a \link{CallbackEvaluation}.
Predefined callbacks are stored in the \link[mlr3misc:Dictionary]{dictionary} \link{mlr_callbacks} and can be retrieved with \code{\link[=clbk]{clbk()}}.

Evaluation callbacks are called at different stages of the resampling process.
Each stage is called once per resampling iteration.
The stages are prefixed with \verb{on_*}.

\if{html}{\out{<div class="sourceCode">}}\preformatted{Start Resampling Iteration on Worker
 - on_evaluation_begin
 - on_evaluation_before_train
 - on_evaluation_before_predict
 - on_evaluation_end
End Resampling Iteration on Worker
}\if{html}{\out{</div>}}

See also the section on parameters for more information on the stages.
An evaluation callback works with \link{ContextEvaluation}.
}
\details{
When implementing a callback, each function must have two arguments named \code{callback} and \code{context}.
A callback can write data to the state (\verb{$state}), e.g. settings that affect the callback itself.
Evaluation callbacks access \link{ContextEvaluation}.
Data can be stored in the \link{ResampleResult} and \link{BenchmarkResult} objects via \code{context$data_extra}.
Alternatively results can be stored in the learner state via \code{context$learner$state}.
}
\examples{
callback = callback_evaluation("selected_features",
 label = "Selected Features",

 on_evaluation_end = function(callback, context) {
    pred = as_prediction(context$pdatas$test)
    selected_features = pred$score(
      measure = msr("selected_features"),
      learner = context$learner,
      task = context$task)
    context$learner$state$selected_features = selected_features
  }
)

task = tsk("pima")
learner = lrn("classif.rpart")
resampling = rsmp("cv", folds = 3)

rr = resample(task, learner, resampling, callbacks = callback)

rr$learners[[1]]$state$selected_features
}
