% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BenchmarkResult.R
\name{BenchmarkResult}
\alias{BenchmarkResult}
\title{Container for Results of benchmark}
\description{
This is the object returned by \link{benchmark}.
}
\section{Usage}{
\preformatted{bmr$tasks
bmr$learners
bmr$resamplings
bmr$measures
bmr$performance
bmr$aggregated
bmr$resample_results
bmr$resample_result(hash)
}
}

\section{Arguments}{

\itemize{
\item \code{hash} [\code{character(1)}]:\cr
String which identifies a subgroup to extract as \link{ResampleResult}.
}
}

\section{Details}{

\itemize{
\item \code{$tasks}, \code{$learners}, \code{$resamplings} and \code{$measures} return an overview table of involved objects.
\item \code{$performance} provides a \code{\link[data.table:data.table]{data.table()}} with column \code{iteration} (integer) and a numeric column for each
performance measure (columns named using the measure ids).
\item \code{$aggregated} returns aggregated performance measures as a \code{\link[data.table:data.table]{data.table()}}.
The table is build similar to the one returned by \code{$performance}, but experiments are aggregated by their resample result group
(combination of \link{Task}, \link{Learner} and \link{Resampling}). The actual aggregation function is defined by the respective \link{Measure}.
\item \code{$resample_results} returns a \code{\link[data.table:data.table]{data.table()}} which gives an overview of the resample result groups in the benchmark.
These groups in the \link{BenchmarkResult} can be extracted as \link{ResampleResult} for further inspection.
\item \code{$resample_result()} creates the \link{ResampleResult} identified by the specified \code{hash} value.
}
}

\examples{
bmr = benchmark(
  tasks = mlr_tasks$mget("iris"),
  learners = mlr_learners$mget(c("classif.dummy", "classif.rpart")),
  resamplings = mlr_resamplings$mget("cv"),
  ctrl = exec_control(verbose = FALSE)
)

bmr$tasks
bmr$learners
bmr$resamplings
bmr$measures
bmr$performance
bmr$aggregated
rrs = bmr$resample_results
print(rrs)
rr = bmr$resample_result(rrs$hash[1])
print(rr)
rr$experiment(1)$model
}
