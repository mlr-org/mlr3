[{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://mlr3.mlr-org.com/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://mlr3.mlr-org.com/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://mlr3.mlr-org.com/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://mlr3.mlr-org.com/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement michellang@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://mlr3.mlr-org.com/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://mlr3.mlr-org.com/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://mlr3.mlr-org.com/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://mlr3.mlr-org.com/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://mlr3.mlr-org.com/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://mlr3.mlr-org.com/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://mlr3.mlr-org.com/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michel Lang. Author. Bernd Bischl. Author. Jakob Richter. Author. Patrick Schratz. Author. Giuseppe Casalicchio. Contributor. Stefan Coors. Contributor. Quay Au. Contributor. Martin Binder. Author. Florian Pfisterer. Author. Raphael Sonabend. Author. Lennart Schneider. Contributor. Marc Becker. Maintainer, author. Sebastian Fischer. Author. Lona Koers. Contributor. John Zobolas. Contributor.","code":""},{"path":"https://mlr3.mlr-org.com/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lang M, Binder M, Richter J, Schratz P, Pfisterer F, Coors S, Au Q, Casalicchio G, Kotthoff L, Bischl B (2019). “mlr3: modern object-oriented machine learning framework R.” Journal Open Source Software. doi:10.21105/joss.01903, https://joss.theoj.org/papers/10.21105/joss.01903.","code":"@Article{mlr3,   title = {{mlr3}: A modern object-oriented machine learning framework in {R}},   author = {Michel Lang and Martin Binder and Jakob Richter and Patrick Schratz and Florian Pfisterer and Stefan Coors and Quay Au and Giuseppe Casalicchio and Lars Kotthoff and Bernd Bischl},   journal = {Journal of Open Source Software},   year = {2019},   month = {dec},   doi = {10.21105/joss.01903},   url = {https://joss.theoj.org/papers/10.21105/joss.01903}, }"},{"path":"https://mlr3.mlr-org.com/dev/index.html","id":"mlr3-","dir":"","previous_headings":"","what":"Machine Learning in R - Next Generation","title":"Machine Learning in R - Next Generation","text":"Package website: release | dev Efficient, object-oriented programming building blocks machine learning. Successor mlr.","code":""},{"path":"https://mlr3.mlr-org.com/dev/index.html","id":"resources-for-users-and-developers","dir":"","previous_headings":"","what":"Resources (for users and developers)","title":"Machine Learning in R - Next Generation","text":"written book. central entry point package. mlr-org website includes example gallery case studies. Reference manual FAQ Ask questions Stackoverflow (tag mlr3) Recommended core regression, classification, survival learners mlr3learners others mlr3extralearners Use learner search get simple overview Overview cheatsheets mlr3 mlr3tuning mlr3pipelines useR2019 talk mlr3 useR2019 talk mlr3pipelines mlr3tuning useR2020 tutorial mlr3, mlr3tuning mlr3pipelines course Introduction Machine learning (I2ML) free open flipped classroom course basics machine learning. mlr3 used demos exercises. mlr3-targets: Tutorial showcasing use {mlr3} targets reproducible ML workflow automation. List extension packages mlr-outreach contains public talks slides resources. Wiki: Contains mainly information developers.","code":""},{"path":"https://mlr3.mlr-org.com/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Machine Learning in R - Next Generation","text":"Install last release CRAN: Install development version GitHub: want get started mlr3, recommend installing mlr3verse meta-package installs mlr3 important extension packages:","code":"install.packages(\"mlr3\") # install.packages(\"pak\") pak::pak(\"mlr-org/mlr3\") install.packages(\"mlr3verse\")"},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/index.html","id":"constructing-learners-and-tasks","dir":"","previous_headings":"Example","what":"Constructing Learners and Tasks","title":"Machine Learning in R - Next Generation","text":"","code":"library(mlr3)  # create learning task task_penguins = as_task_classif(species ~ ., data = palmerpenguins::penguins) task_penguins ## ## ── <TaskClassif> (344x8) ─────────────────────────────────────────────────────── ## • Target: species ## • Target classes: Adelie (44%), Gentoo (36%), Chinstrap (20%) ## • Properties: multiclass ## • Features (7): ##   • int (3): body_mass_g, flipper_length_mm, year ##   • dbl (2): bill_depth_mm, bill_length_mm ##   • fct (2): island, sex # load learner and set hyperparameter learner = lrn(\"classif.rpart\", cp = .01)"},{"path":"https://mlr3.mlr-org.com/dev/index.html","id":"basic-train--predict","dir":"","previous_headings":"Example","what":"Basic train + predict","title":"Machine Learning in R - Next Generation","text":"","code":"# train/test split split = partition(task_penguins, ratio = 0.67)  # train the model learner$train(task_penguins, split$train_set)  # predict data prediction = learner$predict(task_penguins, split$test_set)  # calculate performance prediction$confusion ##            truth ## response    Adelie Chinstrap Gentoo ##   Adelie       146         5      0 ##   Chinstrap      6        63      1 ##   Gentoo         0         0    123 measure = msr(\"classif.acc\") prediction$score(measure) ## classif.acc ##   0.9651163"},{"path":"https://mlr3.mlr-org.com/dev/index.html","id":"resample","dir":"","previous_headings":"Example","what":"Resample","title":"Machine Learning in R - Next Generation","text":"","code":"# 3-fold cross validation resampling = rsmp(\"cv\", folds = 3L)  # run experiments rr = resample(task_penguins, learner, resampling)  # access results rr$score(measure)[, .(task_id, learner_id, iteration, classif.acc)] ##                     task_id    learner_id iteration classif.acc ## 1: palmerpenguins::penguins classif.rpart         1   0.8956522 ## 2: palmerpenguins::penguins classif.rpart         2   0.9478261 ## 3: palmerpenguins::penguins classif.rpart         3   0.9649123 rr$aggregate(measure) ## classif.acc ##   0.9361302"},{"path":"https://mlr3.mlr-org.com/dev/index.html","id":"extension-packages","dir":"","previous_headings":"","what":"Extension Packages","title":"Machine Learning in R - Next Generation","text":"Consult wiki short descriptions links respective repositories. beginners, strongly recommend install load mlr3verse package better user experience.","code":""},{"path":"https://mlr3.mlr-org.com/dev/index.html","id":"why-a-rewrite","dir":"","previous_headings":"","what":"Why a rewrite?","title":"Machine Learning in R - Next Generation","text":"mlr first released CRAN 2013. core design architecture date back even . addition many features led feature creep makes mlr hard maintain hard extend. also think mlr nicely extensible parts (learners, measures, etc.), parts less easy extend outside. Also, many helpful R libraries exist time mlr created, inclusion result non-trivial API changes.","code":""},{"path":"https://mlr3.mlr-org.com/dev/index.html","id":"design-principles","dir":"","previous_headings":"","what":"Design principles","title":"Machine Learning in R - Next Generation","text":"basic building blocks machine learning implemented package. Focus computation . visualization stuff. can go extra packages. Overcome limitations R’s S3 classes help R6. Embrace R6 clean OO-design, object state-changes reference semantics. might less “traditional R”, seems fit mlr nicely. Embrace data.table fast convenient data frame computations. Combine data.table R6, make heavy use list columns data.tables. Defensive programming type safety. user input checked checkmate. Return types documented, mechanisms popular base R “simplify” result unpredictably (e.g., sapply() drop argument [.data.frame) avoided. parallelly: Helper functions parallelization. extra recursive dependencies. future.apply: Resampling benchmarking parallelized future abstraction interfacing many parallel backends. backports: Ensures backward compatibility older R releases. Developed members mlr team. recursive dependencies. checkmate: Fast argument checks. Developed members mlr team. extra recursive dependencies. mlr3misc: Miscellaneous functions used multiple mlr3 extension packages. Developed mlr team. paradox: Descriptions parameters parameter sets. Developed mlr team. extra recursive dependencies. R6: Reference class objects. recursive dependencies. data.table: Extension R’s data.frame. recursive dependencies. digest (via mlr3misc): Hash digests. recursive dependencies. uuid: Create unique string identifiers. recursive dependencies. lgr: Logging facility. extra recursive dependencies. mlr3measures: Performance measures. extra recursive dependencies. mlbench: collection machine learning data sets. dependencies. palmerpenguins: classification data set penguins, used examples provided toy task. dependencies. Reflections: Objects queryable properties capabilities, allowing program . capture output, warnings exceptions, evaluate callr can used.","code":""},{"path":"https://mlr3.mlr-org.com/dev/index.html","id":"contributing-to-mlr3","dir":"","previous_headings":"","what":"Contributing to mlr3","title":"Machine Learning in R - Next Generation","text":"R package licensed LGPL-3. encounter problems using software (lack documentation, misleading wrong documentation, unexpected behavior, bugs, …) just want suggest features, please open issue issue tracker. Pull requests welcome included discretion maintainers. Please consult wiki style guide, roxygen guide pull request guide.","code":""},{"path":"https://mlr3.mlr-org.com/dev/index.html","id":"citing-mlr3","dir":"","previous_headings":"","what":"Citing mlr3","title":"Machine Learning in R - Next Generation","text":"use mlr3, please cite JOSS article:","code":"@Article{mlr3,   title = {{mlr3}: A modern object-oriented machine learning framework in {R}},   author = {Michel Lang and Martin Binder and Jakob Richter and Patrick Schratz and Florian Pfisterer and Stefan Coors and Quay Au and Giuseppe Casalicchio and Lars Kotthoff and Bernd Bischl},   journal = {Journal of Open Source Software},   year = {2019},   month = {dec},   doi = {10.21105/joss.01903},   url = {https://joss.theoj.org/papers/10.21105/joss.01903}, }"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":null,"dir":"Reference","previous_headings":"","what":"Container for Benchmarking Results — BenchmarkResult","title":"Container for Benchmarking Results — BenchmarkResult","text":"result container object returned benchmark(). BenchmarkResult consists data multiple ResampleResults. contents BenchmarkResult ResampleResult almost identical stored ResampleResults can extracted via $resample_result() method, index performed resample experiment. allows us investigate extracted ResampleResult individual resampling iterations, well predictions models fold. BenchmarkResults can visualized via mlr3viz's autoplot() function. statistical analysis benchmark results advanced plots, see mlr3benchmark.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Container for Benchmarking Results — BenchmarkResult","text":"stored objects accessed reference. modify extracted object without cloning first.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"s-methods","dir":"Reference","previous_headings":"","what":"S3 Methods","title":"Container for Benchmarking Results — BenchmarkResult","text":".data.table(rr, ..., reassemble_learners = TRUE, convert_predictions = TRUE, predict_sets = \"test\", task_characteristics = FALSE) BenchmarkResult -> data.table::data.table() Returns tabular view internal data. c(...) (BenchmarkResult, ...) -> BenchmarkResult Combines multiple objects convertible BenchmarkResult new BenchmarkResult.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Container for Benchmarking Results — BenchmarkResult","text":"task_type (character(1)) Task type objects BenchmarkResult. stored objects (Task, Learner, Prediction) single BenchmarkResult required task type, e.g., \"classif\" \"regr\". NA empty BenchmarkResults. tasks (data.table::data.table()) Table included Tasks three columns: \"task_hash\" (character(1)), \"task_id\" (character(1)), \"task\" (Task). learners (data.table::data.table()) Table included Learners three columns: \"learner_hash\" (character(1)), \"learner_id\" (character(1)), \"learner\" (Learner). Note feasible access learned models via field, training task ambiguous. reason returned learner reset returned. Instead, select row table returned $score(). resamplings (data.table::data.table()) Table included Resamplings three columns: \"resampling_hash\" (character(1)), \"resampling_id\" (character(1)), \"resampling\" (Resampling). resample_results (data.table::data.table()) Returns table three columns: uhash (character()). resample_result (ResampleResult). n_resample_results (integer(1)) Returns total number stored ResampleResults. uhashes (character()) Set (unique) hashes included ResampleResults. uhash_table (data.table::data.table) Table columns uhash, learner_id, task_id resampling_id.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Container for Benchmarking Results — BenchmarkResult","text":"BenchmarkResult$new() BenchmarkResult$help() BenchmarkResult$format() BenchmarkResult$print() BenchmarkResult$combine() BenchmarkResult$marshal() BenchmarkResult$unmarshal() BenchmarkResult$score() BenchmarkResult$obs_loss() BenchmarkResult$aggregate() BenchmarkResult$filter() BenchmarkResult$resample_result() BenchmarkResult$discard() BenchmarkResult$set_threshold() BenchmarkResult$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Container for Benchmarking Results — BenchmarkResult","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"BenchmarkResult$new(data = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Benchmarking Results — BenchmarkResult","text":"data (ResultData) object type ResultData, either extracted another ResampleResult, another BenchmarkResult, manually constructed as_result_data().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"method-help-","dir":"Reference","previous_headings":"","what":"Method help()","title":"Container for Benchmarking Results — BenchmarkResult","text":"Opens help page object.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"BenchmarkResult$help()"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"Container for Benchmarking Results — BenchmarkResult","text":"Helper print outputs.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"BenchmarkResult$format(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Benchmarking Results — BenchmarkResult","text":"... (ignored).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Container for Benchmarking Results — BenchmarkResult","text":"Printer.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"BenchmarkResult$print()"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"method-combine-","dir":"Reference","previous_headings":"","what":"Method combine()","title":"Container for Benchmarking Results — BenchmarkResult","text":"Fuses second BenchmarkResult , mutating BenchmarkResult -place. second BenchmarkResult bmr NULL, simply returns self. Note can alternatively use combine function c() calls method internally.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"BenchmarkResult$combine(bmr)"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Benchmarking Results — BenchmarkResult","text":"bmr (BenchmarkResult) second BenchmarkResult object.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Container for Benchmarking Results — BenchmarkResult","text":"Returns object , modified reference. need explicitly $clone() object beforehand want keep object previous state.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"method-marshal-","dir":"Reference","previous_headings":"","what":"Method marshal()","title":"Container for Benchmarking Results — BenchmarkResult","text":"Marshals stored models.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"BenchmarkResult$marshal(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Benchmarking Results — BenchmarkResult","text":"... () Additional arguments passed marshal_model().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"bmr$marshal()"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"method-unmarshal-","dir":"Reference","previous_headings":"","what":"Method unmarshal()","title":"Container for Benchmarking Results — BenchmarkResult","text":"Unmarshals stored models.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"BenchmarkResult$unmarshal(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Benchmarking Results — BenchmarkResult","text":"... () Additional arguments passed unmarshal_model().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"bmr$unmarshal()"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"method-score-","dir":"Reference","previous_headings":"","what":"Method score()","title":"Container for Benchmarking Results — BenchmarkResult","text":"Returns table one row resampling iteration, including involved objects: Task, Learner, Resampling, iteration number (integer(1)), Prediction. ids set TRUE, character column extracted ids added table convenient filtering: \"task_id\", \"learner_id\", \"resampling_id\". Additionally calculates provided performance measures binds performance scores extra columns. columns named using id respective Measure.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"BenchmarkResult$score(   measures = NULL,   ids = TRUE,   conditions = FALSE,   predictions = TRUE )"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Benchmarking Results — BenchmarkResult","text":"measures (Measure | list Measure) Measure(s) calculate. ids (logical(1)) Adds object ids (\"task_id\", \"learner_id\", \"resampling_id\") extra character columns returned table. conditions (logical(1)) Adds condition messages (\"warnings\", \"errors\") extra list columns character vectors returned table predictions (logical(1)) Additionally return prediction objects, one column predict_set learners combined. Columns named \"prediction_train\", \"prediction_test\" \"prediction_internal_valid\", present.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Container for Benchmarking Results — BenchmarkResult","text":"data.table::data.table().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"bmr$score(msr(\"classif.acc\"))"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"method-obs-loss-","dir":"Reference","previous_headings":"","what":"Method obs_loss()","title":"Container for Benchmarking Results — BenchmarkResult","text":"Calculates observation-wise loss via loss function set Measure's field obs_loss. Returns data.table() columns row_ids, truth, response one additional numeric column measure, named respective measure id. observation-wise loss function measure, column filled NA values. Note measures RMSE, $obs_loss, require additional transformation aggregation, example taking square-root.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"BenchmarkResult$obs_loss(measures = NULL, predict_sets = \"test\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Benchmarking Results — BenchmarkResult","text":"measures (Measure | list Measure) Measure(s) calculate. predict_sets (character()) predict sets.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"bmr$obs_loss(msr(\"classif.acc\"))"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"method-aggregate-","dir":"Reference","previous_headings":"","what":"Method aggregate()","title":"Container for Benchmarking Results — BenchmarkResult","text":"Returns result table resampling iterations combined ResampleResults. column aggregated performance score added Measure, named id respective measure. method aggregation controlled Measure, e.g. micro aggregation, macro aggregation custom aggregation. measures default macro aggregation. Note aggregated performances just give quick impression approaches work well approaches probably underperforming. However, aggregates account variance replace statistical test. See mlr3viz get better impression via boxplots mlr3benchmark critical difference plots significance tests. convenience, different flags can set extract information returned ResampleResult.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"BenchmarkResult$aggregate(   measures = NULL,   ids = TRUE,   uhashes = FALSE,   params = FALSE,   conditions = FALSE )"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Benchmarking Results — BenchmarkResult","text":"measures (Measure | list Measure) Measure(s) calculate. ids (logical(1)) Adds object ids (\"task_id\", \"learner_id\", \"resampling_id\") extra character columns convenient subsetting. uhashes (logical(1)) Adds uhash values ResampleResult extra character column \"uhash\". params (logical(1)) Adds hyperparameter values extra list column \"params\". can unnest mlr3misc::unnest(). conditions (logical(1)) Adds number resampling iterations least one warning extra integer column \"warnings\", number resampling iterations errors extra integer column \"errors\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Container for Benchmarking Results — BenchmarkResult","text":"data.table::data.table().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"bmr$aggregate()"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"method-filter-","dir":"Reference","previous_headings":"","what":"Method filter()","title":"Container for Benchmarking Results — BenchmarkResult","text":"Subsets benchmark result. can either directly provide row IDs uhashes resample results keep, use learner_ids, task_ids resampling_ids arguments filter learner, task resampling IDs. three options mutually exclusive.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"BenchmarkResult$filter(   i = NULL,   uhashes = NULL,   learner_ids = NULL,   task_ids = NULL,   resampling_ids = NULL )"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Benchmarking Results — BenchmarkResult","text":"(integer() | NULL) iteration values filter . uhashes (character() | NULL) uhashes resample results filter . learner_ids (character() | NULL) learner IDs filter . task_ids (character() | NULL) task IDs filter . resampling_ids (character() | NULL) resampling IDs filter .","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Container for Benchmarking Results — BenchmarkResult","text":"Returns object , modified reference. need explicitly $clone() object beforehand want keeps object previous state.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"examples-5","dir":"Reference","previous_headings":"","what":"Examples","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"design = benchmark_grid(   tsks(c(\"iris\", \"sonar\")),   lrns(c(\"classif.debug\", \"classif.featureless\")),   rsmp(\"holdout\") ) bmr = benchmark(design) bmr bmr2 = bmr$clone(deep = TRUE) bmr2$filter(learner_ids = \"classif.featureless\") bmr2"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"method-resample-result-","dir":"Reference","previous_headings":"","what":"Method resample_result()","title":"Container for Benchmarking Results — BenchmarkResult","text":"Retrieve -th ResampleResult, position, unique hash uhash learner, task resampling IDs. three options mutually exclusive.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"BenchmarkResult$resample_result(   i = NULL,   uhash = NULL,   task_id = NULL,   learner_id = NULL,   resampling_id = NULL )"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Benchmarking Results — BenchmarkResult","text":"(integer(1) | NULL) iteration value filter . uhash (character(1) | NULL) unique identifier filter . task_id (character(1) | NULL) task ID filter . learner_id (character(1) | NULL) learner ID filter . resampling_id (character(1) | NULL) resampling ID filter .","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Container for Benchmarking Results — BenchmarkResult","text":"ResampleResult.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"examples-6","dir":"Reference","previous_headings":"","what":"Examples","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"design = benchmark_grid(   tsk(\"iris\"),   lrns(c(\"classif.debug\", \"classif.featureless\")),   rsmp(\"holdout\") ) bmr = benchmark(design) bmr$resample_result(learner_id = \"classif.featureless\") bmr$resample_result(i = 1) bmr$resample_result(uhash = uhashes(bmr, learner_id = \"classif.debug\"))"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"method-discard-","dir":"Reference","previous_headings":"","what":"Method discard()","title":"Container for Benchmarking Results — BenchmarkResult","text":"Shrinks BenchmarkResult discarding parts internally stored data. Note certain operations might stop work, e.g. extracting importance values learners calculating measures requiring task's data.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"BenchmarkResult$discard(backends = FALSE, models = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Benchmarking Results — BenchmarkResult","text":"backends (logical(1)) TRUE, DataBackend removed stored Tasks. models (logical(1)) TRUE, stored model removed Learners.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Container for Benchmarking Results — BenchmarkResult","text":"Returns object , modified reference. need explicitly $clone() object beforehand want keeps object previous state.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"examples-7","dir":"Reference","previous_headings":"","what":"Examples","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"bmr$discard(models = TRUE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"method-set-threshold-","dir":"Reference","previous_headings":"","what":"Method set_threshold()","title":"Container for Benchmarking Results — BenchmarkResult","text":"Sets threshold response prediction classification learners, given output probability prediction binary classification task. resample results change threshold can either specified directly via uhashes, selecting specific iterations () filtering according learner, task resampling IDs. none three options specified, threshold set resample results.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"BenchmarkResult$set_threshold(   threshold,   i = NULL,   uhashes = NULL,   learner_ids = NULL,   task_ids = NULL,   resampling_ids = NULL,   ties_method = \"random\" )"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Benchmarking Results — BenchmarkResult","text":"threshold (numeric(1)) Threshold value. (integer() | NULL) iteration values filter . uhashes (character() | NULL) unique identifiers ResampleResults threshold set. learner_ids (character() | NULL) learner IDs threshold set. task_ids (character() | NULL) task IDs threshold set. resampling_ids (character() | NULL) resampling IDs threshold set. ties_method (character(1)) Method handle ties probabilities selecting class label. Must one \"random\", \"first\" \"last\" (corresponding options max.col()). \"random\": Randomly select one tied class labels (default). \"first\": Select first class label among tied values. \"last\": Select last class label among tied values.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"examples-8","dir":"Reference","previous_headings":"","what":"Examples","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"design = benchmark_grid(   tsk(\"sonar\"),   lrns(c(\"classif.debug\", \"classif.featureless\"), predict_type = \"prob\"),   rsmp(\"holdout\") ) bmr = benchmark(design) bmr$set_threshold(0.8, learner_ids = \"classif.featureless\") bmr$set_threshold(0.3, i = 2) bmr$set_threshold(0.7, uhashes = uhashes(bmr, learner_ids = \"classif.featureless\"))"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Container for Benchmarking Results — BenchmarkResult","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"BenchmarkResult$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Benchmarking Results — BenchmarkResult","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/BenchmarkResult.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Container for Benchmarking Results — BenchmarkResult","text":"","code":"set.seed(123) learners = list(   lrn(\"classif.featureless\", predict_type = \"prob\"),   lrn(\"classif.rpart\", predict_type = \"prob\") )  design = benchmark_grid(   tasks = list(tsk(\"sonar\"), tsk(\"penguins\")),   learners = learners,   resamplings = rsmp(\"cv\", folds = 3) ) print(design) #>        task             learner resampling #>      <char>              <char>     <char> #> 1:    sonar classif.featureless         cv #> 2:    sonar       classif.rpart         cv #> 3: penguins classif.featureless         cv #> 4: penguins       classif.rpart         cv  bmr = benchmark(design) print(bmr) #>  #> ── <BenchmarkResult> of 12 rows with 4 resampling run ────────────────────────── #>  nr  task_id          learner_id resampling_id iters warnings errors #>   1    sonar classif.featureless            cv     3        0      0 #>   2    sonar       classif.rpart            cv     3        0      0 #>   3 penguins classif.featureless            cv     3        0      0 #>   4 penguins       classif.rpart            cv     3        0      0  bmr$tasks #> Key: <task_hash> #>           task_hash  task_id                   task #>              <char>   <char>                 <list> #> 1: 40bc78f17c7a5f3d penguins <TaskClassif:penguins> #> 2: f9791e97f9813150    sonar    <TaskClassif:sonar> bmr$learners #> Key: <learner_hash> #>        learner_hash          learner_id #>              <char>              <char> #> 1: 667ca7804cbe810f       classif.rpart #> 2: 918bbfdfae9c988e classif.featureless #>                                            learner #>                                             <list> #> 1:             <LearnerClassifRpart:classif.rpart> #> 2: <LearnerClassifFeatureless:classif.featureless>  # first 5 resampling iterations head(as.data.table(bmr, measures = c(\"classif.acc\", \"classif.auc\")), 5) #>                                   uhash                task #>                                  <char>              <list> #> 1: cfed624b-5249-4273-82cb-161aa7687e16 <TaskClassif:sonar> #> 2: cfed624b-5249-4273-82cb-161aa7687e16 <TaskClassif:sonar> #> 3: cfed624b-5249-4273-82cb-161aa7687e16 <TaskClassif:sonar> #> 4: 90642c68-2ba9-4ba2-9a7a-0ea4ca9062da <TaskClassif:sonar> #> 5: 90642c68-2ba9-4ba2-9a7a-0ea4ca9062da <TaskClassif:sonar> #>                                            learner     resampling iteration #>                                             <list>         <list>     <int> #> 1: <LearnerClassifFeatureless:classif.featureless> <ResamplingCV>         1 #> 2: <LearnerClassifFeatureless:classif.featureless> <ResamplingCV>         2 #> 3: <LearnerClassifFeatureless:classif.featureless> <ResamplingCV>         3 #> 4:             <LearnerClassifRpart:classif.rpart> <ResamplingCV>         1 #> 5:             <LearnerClassifRpart:classif.rpart> <ResamplingCV>         2 #>             prediction task_id          learner_id resampling_id #>                 <list>  <char>              <char>        <char> #> 1: <PredictionClassif>   sonar classif.featureless            cv #> 2: <PredictionClassif>   sonar classif.featureless            cv #> 3: <PredictionClassif>   sonar classif.featureless            cv #> 4: <PredictionClassif>   sonar       classif.rpart            cv #> 5: <PredictionClassif>   sonar       classif.rpart            cv  # aggregate results bmr$aggregate() #>       nr  task_id          learner_id resampling_id iters classif.ce #>    <int>   <char>              <char>        <char> <int>      <num> #> 1:     1    sonar classif.featureless            cv     3 0.46604555 #> 2:     2    sonar       classif.rpart            cv     3 0.27391304 #> 3:     3 penguins classif.featureless            cv     3 0.55814900 #> 4:     4 penguins       classif.rpart            cv     3 0.05812357 #> Hidden columns: resample_result  # aggregate results with hyperparameters as separate columns mlr3misc::unnest(bmr$aggregate(params = TRUE), \"params\") #>       nr  task_id          learner_id resampling_id iters classif.ce method #>    <int>   <char>              <char>        <char> <int>      <num> <char> #> 1:     1    sonar classif.featureless            cv     3 0.46604555   mode #> 2:     2    sonar       classif.rpart            cv     3 0.27391304   <NA> #> 3:     3 penguins classif.featureless            cv     3 0.55814900   mode #> 4:     4 penguins       classif.rpart            cv     3 0.05812357   <NA> #>     xval #>    <int> #> 1:    NA #> 2:     0 #> 3:    NA #> 4:     0 #> Hidden columns: resample_result  # extract resample result for classif.rpart rr = bmr$aggregate()[learner_id == \"classif.rpart\", resample_result][[1]] print(rr) #>  #> ── <ResampleResult> with 3 resampling iterations ─────────────────────────────── #>  task_id    learner_id resampling_id iteration     prediction_test warnings #>    sonar classif.rpart            cv         1 <PredictionClassif>        0 #>    sonar classif.rpart            cv         2 <PredictionClassif>        0 #>    sonar classif.rpart            cv         3 <PredictionClassif>        0 #>  errors #>       0 #>       0 #>       0  # access the confusion matrix of the first resampling iteration rr$predictions()[[1]]$confusion #>         truth #> response  M  R #>        M 30 18 #>        R  3 19  # reduce to subset with task id \"sonar\" bmr$filter(task_ids = \"sonar\") print(bmr) #>  #> ── <BenchmarkResult> of 6 rows with 2 resampling run ─────────────────────────── #>  nr task_id          learner_id resampling_id iters warnings errors #>   1   sonar classif.featureless            cv     3        0      0 #>   2   sonar       classif.rpart            cv     3        0      0  ## ------------------------------------------------ ## Method `BenchmarkResult$marshal` ## ------------------------------------------------  bmr$marshal()  ## ------------------------------------------------ ## Method `BenchmarkResult$unmarshal` ## ------------------------------------------------  bmr$unmarshal()  ## ------------------------------------------------ ## Method `BenchmarkResult$score` ## ------------------------------------------------  bmr$score(msr(\"classif.acc\")) #>       nr task_id          learner_id resampling_id iteration #>    <int>  <char>              <char>        <char>     <int> #> 1:     1   sonar classif.featureless            cv         1 #> 2:     1   sonar classif.featureless            cv         2 #> 3:     1   sonar classif.featureless            cv         3 #> 4:     2   sonar       classif.rpart            cv         1 #> 5:     2   sonar       classif.rpart            cv         2 #> 6:     2   sonar       classif.rpart            cv         3 #>        prediction_test classif.acc #>                 <list>       <num> #> 1: <PredictionClassif>   0.4714286 #> 2: <PredictionClassif>   0.5652174 #> 3: <PredictionClassif>   0.5652174 #> 4: <PredictionClassif>   0.7000000 #> 5: <PredictionClassif>   0.7536232 #> 6: <PredictionClassif>   0.7246377 #> Hidden columns: uhash, task, learner, resampling  ## ------------------------------------------------ ## Method `BenchmarkResult$obs_loss` ## ------------------------------------------------  bmr$obs_loss(msr(\"classif.acc\")) #>      resample_result iteration row_ids  truth response    prob.M    prob.R #>                <int>     <int>   <int> <fctr>   <fctr>     <num>     <num> #>   1:               1         1       8      R        M 0.5652174 0.4347826 #>   2:               1         1       9      R        M 0.5652174 0.4347826 #>   3:               1         1      10      R        M 0.5652174 0.4347826 #>   4:               1         1      14      R        M 0.5652174 0.4347826 #>   5:               1         1      22      R        M 0.5652174 0.4347826 #>  ---                                                                       #> 412:               2         3     198      M        M 0.9500000 0.0500000 #> 413:               2         3     199      M        M 0.9500000 0.0500000 #> 414:               2         3     203      M        M 0.9500000 0.0500000 #> 415:               2         3     204      M        M 0.9500000 0.0500000 #> 416:               2         3     208      M        M 0.9500000 0.0500000 #>      classif.acc #>            <int> #>   1:           0 #>   2:           0 #>   3:           0 #>   4:           0 #>   5:           0 #>  ---             #> 412:           1 #> 413:           1 #> 414:           1 #> 415:           1 #> 416:           1  ## ------------------------------------------------ ## Method `BenchmarkResult$aggregate` ## ------------------------------------------------  bmr$aggregate() #>       nr task_id          learner_id resampling_id iters classif.ce #>    <int>  <char>              <char>        <char> <int>      <num> #> 1:     1   sonar classif.featureless            cv     3  0.4660455 #> 2:     2   sonar       classif.rpart            cv     3  0.2739130 #> Hidden columns: resample_result  ## ------------------------------------------------ ## Method `BenchmarkResult$filter` ## ------------------------------------------------  design = benchmark_grid(   tsks(c(\"iris\", \"sonar\")),   lrns(c(\"classif.debug\", \"classif.featureless\")),   rsmp(\"holdout\") ) bmr = benchmark(design) bmr #>  #> ── <BenchmarkResult> of 4 rows with 4 resampling run ─────────────────────────── #>  nr task_id          learner_id resampling_id iters warnings errors #>   1    iris       classif.debug       holdout     1        0      0 #>   2    iris classif.featureless       holdout     1        0      0 #>   3   sonar       classif.debug       holdout     1        0      0 #>   4   sonar classif.featureless       holdout     1        0      0 bmr2 = bmr$clone(deep = TRUE) bmr2$filter(learner_ids = \"classif.featureless\") bmr2 #>  #> ── <BenchmarkResult> of 2 rows with 2 resampling run ─────────────────────────── #>  nr task_id          learner_id resampling_id iters warnings errors #>   1    iris classif.featureless       holdout     1        0      0 #>   2   sonar classif.featureless       holdout     1        0      0  ## ------------------------------------------------ ## Method `BenchmarkResult$resample_result` ## ------------------------------------------------  design = benchmark_grid(   tsk(\"iris\"),   lrns(c(\"classif.debug\", \"classif.featureless\")),   rsmp(\"holdout\") ) bmr = benchmark(design) bmr$resample_result(learner_id = \"classif.featureless\") #>  #> ── <ResampleResult> with 1 resampling iterations ─────────────────────────────── #>  task_id          learner_id resampling_id iteration     prediction_test #>     iris classif.featureless       holdout         1 <PredictionClassif> #>  warnings errors #>         0      0 bmr$resample_result(i = 1) #>  #> ── <ResampleResult> with 1 resampling iterations ─────────────────────────────── #>  task_id    learner_id resampling_id iteration     prediction_test warnings #>     iris classif.debug       holdout         1 <PredictionClassif>        0 #>  errors #>       0 bmr$resample_result(uhash = uhashes(bmr, learner_id = \"classif.debug\")) #>  #> ── <ResampleResult> with 1 resampling iterations ─────────────────────────────── #>  task_id    learner_id resampling_id iteration     prediction_test warnings #>     iris classif.debug       holdout         1 <PredictionClassif>        0 #>  errors #>       0  ## ------------------------------------------------ ## Method `BenchmarkResult$discard` ## ------------------------------------------------  bmr$discard(models = TRUE)  ## ------------------------------------------------ ## Method `BenchmarkResult$set_threshold` ## ------------------------------------------------  design = benchmark_grid(   tsk(\"sonar\"),   lrns(c(\"classif.debug\", \"classif.featureless\"), predict_type = \"prob\"),   rsmp(\"holdout\") ) bmr = benchmark(design) bmr$set_threshold(0.8, learner_ids = \"classif.featureless\") #> Key: <uhash, iteration> #>                                   uhash iteration      learner_state prediction #>                                  <char>     <int>             <list>     <list> #> 1: 0a47d6c8-7df1-483f-a47e-221ed16a3629         1 <learner_state[8]>  <list[1]> #> 2: 42f0a68e-06b8-4bc9-af62-a4e2e77b56eb         1 <learner_state[9]>  <list[1]> #>        learner_hash        task_hash    learner_phash  resampling_hash #>              <char>           <char>           <char>           <char> #> 1: 918bbfdfae9c988e f9791e97f9813150 53c7d4b30df61d77 35db3d2bb507d357 #> 2: c7c9e936a7ad47c2 f9791e97f9813150 02fee2b4eac6c687 35db3d2bb507d357 bmr$set_threshold(0.3, i = 2) #> Key: <uhash, iteration> #>                                   uhash iteration      learner_state prediction #>                                  <char>     <int>             <list>     <list> #> 1: 0a47d6c8-7df1-483f-a47e-221ed16a3629         1 <learner_state[8]>  <list[1]> #> 2: 42f0a68e-06b8-4bc9-af62-a4e2e77b56eb         1 <learner_state[9]>  <list[1]> #>        learner_hash        task_hash    learner_phash  resampling_hash #>              <char>           <char>           <char>           <char> #> 1: 918bbfdfae9c988e f9791e97f9813150 53c7d4b30df61d77 35db3d2bb507d357 #> 2: c7c9e936a7ad47c2 f9791e97f9813150 02fee2b4eac6c687 35db3d2bb507d357 bmr$set_threshold(0.7, uhashes = uhashes(bmr, learner_ids = \"classif.featureless\")) #> Key: <uhash, iteration> #>                                   uhash iteration      learner_state prediction #>                                  <char>     <int>             <list>     <list> #> 1: 0a47d6c8-7df1-483f-a47e-221ed16a3629         1 <learner_state[8]>  <list[1]> #> 2: 42f0a68e-06b8-4bc9-af62-a4e2e77b56eb         1 <learner_state[9]>  <list[1]> #>        learner_hash        task_hash    learner_phash  resampling_hash #>              <char>           <char>           <char>           <char> #> 1: 918bbfdfae9c988e f9791e97f9813150 53c7d4b30df61d77 35db3d2bb507d357 #> 2: c7c9e936a7ad47c2 f9791e97f9813150 02fee2b4eac6c687 35db3d2bb507d357"},{"path":"https://mlr3.mlr-org.com/dev/reference/CallbackResample.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample Callback — CallbackResample","title":"Resample Callback — CallbackResample","text":"Specialized mlr3misc::Callback customize behavior resample() benchmark() mlr3. example, callbacks can used extract information models worker store intermediate results disk. callback_resample() function used create instances class. Predefined callbacks stored dictionary mlr_callbacks can retrieved clbk(). information callbacks, see callback_resample() documentation.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/CallbackResample.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Resample Callback — CallbackResample","text":"mlr3misc::Callback -> CallbackResample","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/CallbackResample.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Resample Callback — CallbackResample","text":"on_resample_begin (function()) Stage called beginning resampling iteration. Called workhorse() (internal). on_resample_before_train (function()) Stage called training learner. Called workhorse() (internal). on_resample_before_predict (function()) Stage called predicting. Called workhorse() (internal). on_resample_end (function()) Stage called end resample iteration. Called workhorse() (internal).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/CallbackResample.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Resample Callback — CallbackResample","text":"mlr3misc::Callback$call() mlr3misc::Callback$format() mlr3misc::Callback$help() mlr3misc::Callback$initialize() mlr3misc::Callback$print()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/CallbackResample.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Resample Callback — CallbackResample","text":"CallbackResample$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/CallbackResample.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Resample Callback — CallbackResample","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/CallbackResample.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample Callback — CallbackResample","text":"","code":"CallbackResample$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/CallbackResample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample Callback — CallbackResample","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ContextResample.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample Context — ContextResample","title":"Resample Context — ContextResample","text":"CallbackResample accesses modifies data resample() benchmark() via ContextResample. See section fields list modifiable objects. See callback_resample() list stages access ContextResample.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ContextResample.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Resample Context — ContextResample","text":"mlr3misc::Context -> ContextResample","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ContextResample.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Resample Context — ContextResample","text":"task (Task) task evaluated. task unchanged evaluation. task read-. learner (Learner) learner evaluated. learner contains models stage on_resample_before_train. resampling Resampling resampling strategy used. resampling unchanged evaluation. resampling read-. iteration (integer()) current iteration. iteration read-. pdatas (List PredictionData) prediction data. data available stage on_resample_end. data_extra (list()) Data saved ResampleResult BenchmarkResult. Use field save results. Must list().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ContextResample.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Resample Context — ContextResample","text":"mlr3misc::Context$format() mlr3misc::Context$print()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ContextResample.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Resample Context — ContextResample","text":"ContextResample$new() ContextResample$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ContextResample.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Resample Context — ContextResample","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ContextResample.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample Context — ContextResample","text":"","code":"ContextResample$new(task, learner, resampling, iteration)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ContextResample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample Context — ContextResample","text":"task (Task) task evaluated. learner (Learner) learner evaluated. resampling (Resampling) resampling strategy used. iteration (integer()) current iteration.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ContextResample.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Resample Context — ContextResample","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ContextResample.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample Context — ContextResample","text":"","code":"ContextResample$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ContextResample.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample Context — ContextResample","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackend.html","id":null,"dir":"Reference","previous_headings":"","what":"DataBackend — DataBackend","title":"DataBackend — DataBackend","text":"abstract base class data backends. Data backends provide layer abstraction various data storage systems. recommended work directly DataBackend. Instead, data access handled transparently via Task. package comes two implementations backends: DataBackendDataTable stores data data.table::data.table(). DataBackendMatrix stores data sparse Matrix::sparseMatrix(). connect --memory database management systems SQL servers, see extension package mlr3db.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackend.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DataBackend — DataBackend","text":"required set fields methods implement custom DataBackend listed respective sections (see DataBackendDataTable DataBackendMatrix exemplary implementations interface).","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackend.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"DataBackend — DataBackend","text":"primary_key (character(1)) Column name primary key column positive unique integer row ids.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackend.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"DataBackend — DataBackend","text":"data_formats (character()) Supported data format. Always \"data.table\".. deprecated removed future. hash (character(1)) Hash (unique identifier) object. col_hashes (named character) Hash (unique identifier) columns except primary_key: character vector, named columns element refers . Columns different Tasks DataBackends agreeing col_hashes always represent data, given rows selected. reverse necessarily true: can columns content different col_hashes.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackend.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"DataBackend — DataBackend","text":"DataBackend$new() DataBackend$format() DataBackend$print()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackend.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"DataBackend — DataBackend","text":"Creates new instance R6 class. Note: object typically constructed via derived classes, e.g. DataBackendDataTable DataBackendMatrix, via S3 method as_data_backend().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackend.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend — DataBackend","text":"","code":"DataBackend$new(data, primary_key, data_formats)"},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend — DataBackend","text":"data () format input data depends specialization. E.g., DataBackendDataTable expects data.table::data.table() DataBackendMatrix expects Matrix::Matrix() Matrix. primary_key (character(1)) DataBackend needs way address rows, done via column unique integer values, referenced primary_key. use variable may differ backends. data_formats (character()) Deprecated: ignored, removed future.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackend.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"DataBackend — DataBackend","text":"Helper print outputs.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackend.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend — DataBackend","text":"","code":"DataBackend$format(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackend.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend — DataBackend","text":"... (ignored).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackend.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"DataBackend — DataBackend","text":"Printer.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackend.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend — DataBackend","text":"","code":"DataBackend$print()"},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DataBackend — DataBackend","text":"","code":"data = data.table::data.table(id = 1:5, x = runif(5),   y = sample(letters[1:3], 5, replace = TRUE))  b = DataBackendDataTable$new(data, primary_key = \"id\") print(b) #>  #> ── <DataBackendDataTable> (5x3) ──────────────────────────────────────────────── #>     id          x      y #>  <int>      <num> <char> #>      1 0.74678791      a #>      2 0.41931352      b #>      3 0.58214390      a #>      4 0.83073406      a #>      5 0.01353063      a b$head(2) #> Key: <id> #>       id         x      y #>    <int>     <num> <char> #> 1:     1 0.7467879      a #> 2:     2 0.4193135      b b$data(rows = 1:2, cols = \"x\") #>            x #>        <num> #> 1: 0.7467879 #> 2: 0.4193135 b$distinct(rows = b$rownames, \"y\") #> $y #> [1] \"a\" \"b\" #>  b$missings(rows = b$rownames, cols = names(data)) #> id  x  y  #>  0  0  0"},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":null,"dir":"Reference","previous_headings":"","what":"DataBackend for data.table — DataBackendDataTable","title":"DataBackend for data.table — DataBackendDataTable","text":"DataBackend data.table serves efficient -memory data base.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"DataBackend for data.table — DataBackendDataTable","text":"mlr3::DataBackend -> DataBackendDataTable","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"DataBackend for data.table — DataBackendDataTable","text":"compact_seq logical(1) TRUE, row ids natural sequence 1 nrow(data) (determined internally). case, row lookup uses faster positional indices instead equi joins.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"DataBackend for data.table — DataBackendDataTable","text":"rownames (integer()) Returns vector distinct row identifiers, .e. contents primary key column. colnames (character()) Returns vector column names, including primary key column. nrow (integer(1)) Number rows (observations). ncol (integer(1)) Number columns (variables), including primary key column.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"DataBackend for data.table — DataBackendDataTable","text":"mlr3::DataBackend$format() mlr3::DataBackend$print()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"DataBackend for data.table — DataBackendDataTable","text":"DataBackendDataTable$new() DataBackendDataTable$data() DataBackendDataTable$head() DataBackendDataTable$distinct() DataBackendDataTable$missings()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"DataBackend for data.table — DataBackendDataTable","text":"Creates new instance R6 class. Note DataBackendDataTable copy input data, as_data_backend() calls data.table::copy(). as_data_backend() also takes care casting data.table() adds primary key column necessary.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for data.table — DataBackendDataTable","text":"","code":"DataBackendDataTable$new(data, primary_key)"},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for data.table — DataBackendDataTable","text":"data (data.table::data.table()) input data.table(). primary_key (character(1) | integer()) Name primary key column, integer vector row ids.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"method-data-","dir":"Reference","previous_headings":"","what":"Method data()","title":"DataBackend for data.table — DataBackendDataTable","text":"Returns slice data specified format. Currently, supported formats \"data.table\" \"Matrix\". rows must addressed vector primary key values, columns must referred via column names. Queries rows matching row id queries columns matching column name silently ignored. Rows guaranteed returned order rows, columns may returned arbitrary order. Duplicated row ids result duplicated rows, duplicated column names lead exception.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for data.table — DataBackendDataTable","text":"","code":"DataBackendDataTable$data(rows, cols, data_format)"},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for data.table — DataBackendDataTable","text":"rows (positive integer()) Vector row indices. Always refers complete data set, even filtering. cols (character()) Vector column names. data_format (character(1)) Deprecated. Ignored, removed future.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"method-head-","dir":"Reference","previous_headings":"","what":"Method head()","title":"DataBackend for data.table — DataBackendDataTable","text":"Retrieve first n rows.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for data.table — DataBackendDataTable","text":"","code":"DataBackendDataTable$head(n = 6L)"},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for data.table — DataBackendDataTable","text":"n (integer(1)) Number rows.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"DataBackend for data.table — DataBackendDataTable","text":"data.table::data.table() first n rows.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"method-distinct-","dir":"Reference","previous_headings":"","what":"Method distinct()","title":"DataBackend for data.table — DataBackendDataTable","text":"Returns named list vectors distinct values column specified. na_rm TRUE, missing values removed returned vectors distinct values. Non-existing rows columns silently ignored.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for data.table — DataBackendDataTable","text":"","code":"DataBackendDataTable$distinct(rows, cols, na_rm = TRUE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for data.table — DataBackendDataTable","text":"rows (positive integer()) Vector row indices. Always refers complete data set, even filtering. cols (character()) Vector column names. na_rm logical(1) Whether remove NAs .","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"DataBackend for data.table — DataBackendDataTable","text":"Named list() distinct values.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"method-missings-","dir":"Reference","previous_headings":"","what":"Method missings()","title":"DataBackend for data.table — DataBackendDataTable","text":"Returns number missing values per column specified slice data. Non-existing rows columns silently ignored.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for data.table — DataBackendDataTable","text":"","code":"DataBackendDataTable$missings(rows, cols)"},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for data.table — DataBackendDataTable","text":"rows (positive integer()) Vector row indices. Always refers complete data set, even filtering. cols (character()) Vector column names.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"DataBackend for data.table — DataBackendDataTable","text":"Total missing values per column (named numeric()).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendDataTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DataBackend for data.table — DataBackendDataTable","text":"","code":"data = as.data.table(palmerpenguins::penguins) data$id = seq_len(nrow(palmerpenguins::penguins)) b = DataBackendDataTable$new(data = data, primary_key = \"id\") print(b) #>  #> ── <DataBackendDataTable> (344x9) ────────────────────────────────────────────── #>  species    island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g #>   <fctr>    <fctr>          <num>         <num>             <int>       <int> #>   Adelie Torgersen           39.1          18.7               181        3750 #>   Adelie Torgersen           39.5          17.4               186        3800 #>   Adelie Torgersen           40.3          18.0               195        3250 #>   Adelie Torgersen             NA            NA                NA          NA #>   Adelie Torgersen           36.7          19.3               193        3450 #>   Adelie Torgersen           39.3          20.6               190        3650 #>     sex  year    id #>  <fctr> <int> <int> #>    male  2007     1 #>  female  2007     2 #>  female  2007     3 #>    <NA>  2007     4 #>  female  2007     5 #>    male  2007     6 #> [...] (338 rows omitted) b$head() #> Key: <id> #>    species    island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g #>     <fctr>    <fctr>          <num>         <num>             <int>       <int> #> 1:  Adelie Torgersen           39.1          18.7               181        3750 #> 2:  Adelie Torgersen           39.5          17.4               186        3800 #> 3:  Adelie Torgersen           40.3          18.0               195        3250 #> 4:  Adelie Torgersen             NA            NA                NA          NA #> 5:  Adelie Torgersen           36.7          19.3               193        3450 #> 6:  Adelie Torgersen           39.3          20.6               190        3650 #>       sex  year    id #>    <fctr> <int> <int> #> 1:   male  2007     1 #> 2: female  2007     2 #> 3: female  2007     3 #> 4:   <NA>  2007     4 #> 5: female  2007     5 #> 6:   male  2007     6 b$data(rows = 100:101, cols = \"species\") #>    species #>     <fctr> #> 1:  Adelie #> 2:  Adelie  b$nrow #> [1] 344 head(b$rownames) #> [1] 1 2 3 4 5 6  b$ncol #> [1] 9 b$colnames #> [1] \"species\"           \"island\"            \"bill_length_mm\"    #> [4] \"bill_depth_mm\"     \"flipper_length_mm\" \"body_mass_g\"       #> [7] \"sex\"               \"year\"              \"id\"                 # alternative construction as_data_backend(palmerpenguins::penguins) #>  #> ── <DataBackendDataTable> (344x9) ────────────────────────────────────────────── #>  species    island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g #>   <fctr>    <fctr>          <num>         <num>             <int>       <int> #>   Adelie Torgersen           39.1          18.7               181        3750 #>   Adelie Torgersen           39.5          17.4               186        3800 #>   Adelie Torgersen           40.3          18.0               195        3250 #>   Adelie Torgersen             NA            NA                NA          NA #>   Adelie Torgersen           36.7          19.3               193        3450 #>   Adelie Torgersen           39.3          20.6               190        3650 #>     sex  year ..row_id #>  <fctr> <int>    <int> #>    male  2007        1 #>  female  2007        2 #>  female  2007        3 #>    <NA>  2007        4 #>  female  2007        5 #>    male  2007        6 #> [...] (338 rows omitted)"},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"DataBackend for Matrix — DataBackendMatrix","title":"DataBackend for Matrix — DataBackendMatrix","text":"DataBackend Matrix. Data split (numerical) sparse part optional dense part. parts automatically merged sparse format $data(). Note merging parts potentially comes data loss, dense columns converted numeric columns.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"DataBackend for Matrix — DataBackendMatrix","text":"mlr3::DataBackend -> DataBackendMatrix","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"DataBackend for Matrix — DataBackendMatrix","text":"rownames (integer()) Returns vector distinct row identifiers, .e. contents primary key column. colnames (character()) Returns vector column names, including primary key column. nrow (integer(1)) Number rows (observations). ncol (integer(1)) Number columns (variables), including primary key column.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"DataBackend for Matrix — DataBackendMatrix","text":"mlr3::DataBackend$format() mlr3::DataBackend$print()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"DataBackend for Matrix — DataBackendMatrix","text":"DataBackendMatrix$new() DataBackendMatrix$data() DataBackendMatrix$head() DataBackendMatrix$distinct() DataBackendMatrix$missings()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"DataBackend for Matrix — DataBackendMatrix","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for Matrix — DataBackendMatrix","text":"","code":"DataBackendMatrix$new(data, dense, primary_key = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for Matrix — DataBackendMatrix","text":"data Matrix::Matrix() input Matrix::Matrix(). dense data.frame(). Dense data, converted data.table::data.table(). primary_key (character(1) | integer()) Name primary key column, integer vector row ids.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"method-data-","dir":"Reference","previous_headings":"","what":"Method data()","title":"DataBackend for Matrix — DataBackendMatrix","text":"Returns slice data \"data.table\". rows must addressed vector primary key values, columns must referred via column names. Queries rows matching row id queries columns matching column name silently ignored. Rows guaranteed returned order rows, columns may returned arbitrary order. Duplicated row ids result duplicated rows, duplicated column names lead exception.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for Matrix — DataBackendMatrix","text":"","code":"DataBackendMatrix$data(rows, cols, data_format)"},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for Matrix — DataBackendMatrix","text":"rows (positive integer()) Vector row indices. Always refers complete data set, even filtering. cols (character()) Vector column names. data_format (character(1)) Deprecated. Ignored, removed future.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"method-head-","dir":"Reference","previous_headings":"","what":"Method head()","title":"DataBackend for Matrix — DataBackendMatrix","text":"Retrieve first n rows.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for Matrix — DataBackendMatrix","text":"","code":"DataBackendMatrix$head(n = 6L)"},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for Matrix — DataBackendMatrix","text":"n (integer(1)) Number rows.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"DataBackend for Matrix — DataBackendMatrix","text":"data.table::data.table() first n rows.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"method-distinct-","dir":"Reference","previous_headings":"","what":"Method distinct()","title":"DataBackend for Matrix — DataBackendMatrix","text":"Returns named list vectors distinct values column specified. na_rm TRUE, missing values removed returned vectors distinct values. Non-existing rows columns silently ignored.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for Matrix — DataBackendMatrix","text":"","code":"DataBackendMatrix$distinct(rows, cols, na_rm = TRUE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for Matrix — DataBackendMatrix","text":"rows (positive integer()) Vector row indices. Always refers complete data set, even filtering. cols (character()) Vector column names. na_rm logical(1) Whether remove NAs .","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"DataBackend for Matrix — DataBackendMatrix","text":"Named list() distinct values.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"method-missings-","dir":"Reference","previous_headings":"","what":"Method missings()","title":"DataBackend for Matrix — DataBackendMatrix","text":"Returns number missing values per column specified slice data. Non-existing rows columns silently ignored.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for Matrix — DataBackendMatrix","text":"","code":"DataBackendMatrix$missings(rows, cols)"},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for Matrix — DataBackendMatrix","text":"rows (positive integer()) Vector row indices. Always refers complete data set, even filtering. cols (character()) Vector column names.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"DataBackend for Matrix — DataBackendMatrix","text":"Total missing values per column (named numeric()).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/DataBackendMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DataBackend for Matrix — DataBackendMatrix","text":"","code":"requireNamespace(\"Matrix\") data = Matrix::Matrix(sample(0:1, 20, replace = TRUE), ncol = 2) colnames(data) = c(\"x1\", \"x2\") dense = data.frame(   ..row_id = 1:10,   num = runif(10),   fact = factor(sample(c(\"a\", \"b\"), 10, replace = TRUE), levels = c(\"a\", \"b\")) )  b = as_data_backend(data, dense = dense, primary_key = \"..row_id\") b$head() #>    ..row_id        num   fact    x1    x2 #>       <int>      <num> <fctr> <num> <num> #> 1:        1 0.73120311      b     1     0 #> 2:        2 0.43272410      b     1     1 #> 3:        3 0.73124009      b     1     0 #> 4:        4 0.01394155      a     1     0 #> 5:        5 0.04531331      b     1     0 #> 6:        6 0.41841438      b     0     1 b$data(1:3, b$colnames) #>    ..row_id       num   fact    x1    x2 #>       <int>     <num> <fctr> <num> <num> #> 1:        1 0.7312031      b     1     0 #> 2:        2 0.4327241      b     1     1 #> 3:        3 0.7312401      b     1     0"},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":null,"dir":"Reference","previous_headings":"","what":"Stack for Hot Start Learners — HotstartStack","title":"Stack for Hot Start Learners — HotstartStack","text":"class stores learners hot starting training, .e. resuming continuing already fitted model. assume hot starting possible single hyperparameter (also called fidelity parameter, usually controlling complexity expensiveness) altered hyperparameters identical. HotstartStack stores trained learners can potentially used hot start learner. Learner automatically hot start training stack attached $hotstart_stack field stack contains suitable learner. example, want train random forest learner 1000 trees already random forest learner 500 trees (hot start learner), can add hot start learner HotstartStack expensive learner 1000 trees. now call train() method (resample() benchmark()), random forest 500 trees fitted combined 500 trees hotstart learner, effectively saving fit 500 trees. Hot starting supported learners property \"hotstart_forward\" \"hotstart_backward\". example, xgboost model (mlr3learners) can hot start forward adding boosting iterations, random forest can go backwards removing trees. fidelity parameters tagged \"hotstart\" learner's parameter set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Stack for Hot Start Learners — HotstartStack","text":"stack data.table::data.table() Stores hot start learners. hotstart_threshold (named numeric(1)) Threshold storing learners stack. value hotstart parameter threshold, learner added stack.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Stack for Hot Start Learners — HotstartStack","text":"HotstartStack$new() HotstartStack$add() HotstartStack$start_cost() HotstartStack$format() HotstartStack$print() HotstartStack$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Stack for Hot Start Learners — HotstartStack","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stack for Hot Start Learners — HotstartStack","text":"","code":"HotstartStack$new(learners = NULL, hotstart_threshold = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stack for Hot Start Learners — HotstartStack","text":"learners (List Learners) Learners added hotstart stack. NULL (default), empty stack created. hotstart_threshold (named numeric(1)) Threshold storing learners stack.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":"method-add-","dir":"Reference","previous_headings":"","what":"Method add()","title":"Stack for Hot Start Learners — HotstartStack","text":"Add learners hot start stack.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Stack for Hot Start Learners — HotstartStack","text":"","code":"HotstartStack$add(learners)"},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stack for Hot Start Learners — HotstartStack","text":"learners (List Learners). Learners added hotstart stack.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Stack for Hot Start Learners — HotstartStack","text":"self (invisibly).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":"method-start-cost-","dir":"Reference","previous_headings":"","what":"Method start_cost()","title":"Stack for Hot Start Learners — HotstartStack","text":"Calculates cost learner stack hot start target learner. following cost values can returned: NA_real_: Learner unsuitable hot start target learner. -1: Hotstart learner stack target learner identical. 0 Cost hot starting backwards always 0. > 0 Cost hot starting forward.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Stack for Hot Start Learners — HotstartStack","text":"","code":"HotstartStack$start_cost(learner, task_hash)"},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stack for Hot Start Learners — HotstartStack","text":"learner Learner Target learner. task_hash Task Hash task target learner trained.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"Stack for Hot Start Learners — HotstartStack","text":"Helper print outputs.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Stack for Hot Start Learners — HotstartStack","text":"","code":"HotstartStack$format(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stack for Hot Start Learners — HotstartStack","text":"... (ignored).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Stack for Hot Start Learners — HotstartStack","text":"Printer.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Stack for Hot Start Learners — HotstartStack","text":"","code":"HotstartStack$print(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stack for Hot Start Learners — HotstartStack","text":"... (ignored).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Stack for Hot Start Learners — HotstartStack","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Stack for Hot Start Learners — HotstartStack","text":"","code":"HotstartStack$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stack for Hot Start Learners — HotstartStack","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/HotstartStack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stack for Hot Start Learners — HotstartStack","text":"","code":"# train learner on pima task task = tsk(\"pima\") learner = lrn(\"classif.debug\", iter = 1) learner$train(task)  # initialize stack with previously fitted learner hot = HotstartStack$new(list(learner))  # retrieve learner with increased fidelity parameter learner = lrn(\"classif.debug\", iter = 2)  # calculate cost of hot starting hot$start_cost(learner, task$hash) #> [1] 1  # add stack with hot start learner learner$hotstart_stack = hot  # train automatically uses hot start learner while fitting the model learner$train(task)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":null,"dir":"Reference","previous_headings":"","what":"Learner Class — Learner","title":"Learner Class — Learner","text":"abstract base class learner objects like LearnerClassif LearnerRegr. Learners build around three following key parts: Methods $train() $predict() call internal methods private methods $.train()/$.predict()). paradox::ParamSet stores meta-information available hyperparameters, also stores hyperparameter settings. Meta-information requirements capabilities learner. fitted model stored field $model, available calling $train(). Predefined learners stored dictionary mlr_learners, e.g. classif.rpart regr.rpart. classification regression learners implemented add-package mlr3learners. Learners survival analysis (general, probabilistic regression) can found mlr3proba. Unsupervised cluster algorithms implemented mlr3cluster. dictionary mlr_learners gets automatically populated new learners soon respective packages loaded. (experimental) learners can found GitHub repository: https://github.com/mlr-org/mlr3extralearners. guide extend mlr3 custom learners can found mlr3book. combine learner preprocessing operations like factor encoding, mlr3pipelines recommended. Hyperparameters stored param_set can tuned mlr3tuning.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"optional-extractors","dir":"Reference","previous_headings":"","what":"Optional Extractors","title":"Learner Class — Learner","text":"Specific learner implementations free implement additional getters ease access certain parts model inherited subclasses. following operations, extractors standardized: importance(...): Returns feature importance score numeric vector. higher score, important variable. returned vector named feature names sorted decreasing order. Note model might omit features used . learner must tagged property \"importance\". filter variables using importance scores, see package mlr3filters. selected_features(...): Returns subset selected features character(). learner must tagged property \"selected_features\". oob_error(...): Returns --bag error model numeric(1). learner must tagged property \"oob_error\". internal_valid_scores: Returns internal validation score(s) model named list(). available Learners \"validation\" property. learner trained yet, returns NULL. internal_tuned_values: Returns internally tuned hyperparameters model named list(). available Learners \"internal_tuning\" property. learner trained yet, returns NULL.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"weights","dir":"Reference","previous_headings":"","what":"Weights","title":"Learner Class — Learner","text":"Many learners support observation weights, indicated property \"weights\". weights stored Task column role weights_learner needs assigned single numeric column. task weights learner supports , used automatically. task weights learner support , error thrown default. behaviors can disabled setting use_weights field \"ignore\". See description use_weights information. learner set-use weights task designated weight column, samples considered equal weight. weights used, passed learner directly; effect weights depends specific learner. Generally, weights need sum 1. implementing Learner uses weights, \"weights\" property set. $.train()-method call $.get_weights()-method retrieve weights task. $.get_weights() automatically discard weights use_weights set \"ignore\";","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"setting-hyperparameters","dir":"Reference","previous_headings":"","what":"Setting Hyperparameters","title":"Learner Class — Learner","text":"information hyperparameters stored slot param_set paradox::ParamSet. printer gives overview ids available hyperparameters, storage type, lower upper bounds, possible levels (factors), default values assigned values. set hyperparameters, call set_values() method param_set:   Note operation replaces previously set hyperparameter values. intend change one specific hyperparameter value leave others -, can use helper function mlr3misc::insert_named():   learner additional hyperparameters encoded ParamSet, can easily extend learner. , add factor hyperparameter id \"foo\" possible levels \"\" \"b\":","code":"lrn = lrn(\"classif.rpart\") lrn$param_set$set_values(minsplit = 3, cp = 0.01) lrn$param_set$values = mlr3misc::insert_named(lrn$param_set$values, list(cp = 0.001)) lrn$param_set$add(paradox::ParamFct$new(\"foo\", levels = c(\"a\", \"b\")))"},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"implementing-validation","dir":"Reference","previous_headings":"","what":"Implementing Validation","title":"Learner Class — Learner","text":"Learners, XGBoost, boosting algorithms, deep learning models (mlr3torch), utilize validation data training prevent overfitting log validation performance. possible configure learners able receive independent validation set training. , one must: annotate learner \"validation\" property implement active binding $internal_valid_scores (see section Optional Extractors), well private method $.extract_internal_valid_scores() returns (final) internal validation scores model Learner returns named list() numeric(1). model trained yet, method return NULL. Add validate parameter, can either NULL, ratio $(0, 1)$, \"test\", \"predefined\": NULL: validation ratio: proportion 1 - ratio task used training ratio used validation. \"test\" means \"test\" task used. Warning: can lead biased performance estimation. option available learner trained via resample(), benchmark() functions internally use , e.g. tune() mlr3tuning batchmark() mlr3batchmark. especially useful hyperparameter tuning, one might e.g. want use validation data early stopping model evaluation. \"predefined\" means task's (manually set) $internal_valid_task used. See Task documentation information. example , see LearnerClassifDebug. Note .train(), $internal_valid_task present $validate field Learner set non-NULL value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"implementing-internal-tuning","dir":"Reference","previous_headings":"","what":"Implementing Internal Tuning","title":"Learner Class — Learner","text":"learners XGBoost cv.glmnet can internally tune hyperparameters. XGBoost, example, can tune number boosting rounds based validation performance. CV Glmnet, hand, can tune regularization parameter based internal cross-validation. Internal tuning can therefore rely internal validation data, necessarily . order able combine internal hyperparamer tuning standard hyperparameter optimization implemented via mlr3tuning, one : annotate learner \"internal_tuning\" property implement active binding $internal_tuned_values (see section Optional Extractors) well private method $.extract_internal_tuned_values() extracts internally tuned values Learner's model returns named list(). model trained yet, method return NULL. least one parameter tagged \"internal_tuning\", requires also provide in_tune_fn disable_tune_fn, also include default aggregation function. example , see LearnerClassifDebug.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"implementing-marshaling","dir":"Reference","previous_headings":"","what":"Implementing Marshaling","title":"Learner Class — Learner","text":"Learners models serialized e.g. contain external pointers. order still able save , use parallelization callr encapsulation necessary implement (un)-marshaled. See marshaling .","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"implementing-out-of-bag-error","dir":"Reference","previous_headings":"","what":"Implementing Out-of-Bag Error","title":"Learner Class — Learner","text":"Learners can compute --bag error training. order , learner must: annotate learner \"oob_error\" property implement private method $.extract_oob_error() extracts --bag error Learner's model returns numeric(1).","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Learner Class — Learner","text":"id (character(1)) Identifier object. Used tables, plot text output. label (character(1)) Label object. Can used tables, plot text output instead ID. state (NULL | named list()) Current (internal) state learner. Contains information gathered train() predict(). recommended access elements state directly. internal data structure may change future. task_type (character(1)) Task type, e.g. \"classif\" \"regr\". complete list possible task types (depending loaded packages), see mlr_reflections$task_types$type. feature_types (character()) Stores feature types learner can handle, e.g. \"logical\", \"numeric\", \"factor\". complete list candidate feature types, grouped task type, stored mlr_reflections$task_feature_types. properties (character()) Stores set properties/capabilities learner . complete list candidate properties, grouped task type, stored mlr_reflections$learner_properties. packages (character(1)) Set required packages. packages loaded, attached. predict_sets (character()) resample()/benchmark(), Learner can predict multiple sets. Per default, learner predicts observations test set (predict_sets == \"test\"). change behavior, set predict_sets non-empty subset {\"train\", \"test\", \"internal_valid\"}. \"train\" predict set contains train ids resampling. means learner validation sets $validate ratio (creating validation data training data), train predictions include predictions validation data. set yields separate Prediction object. can combined via getters ResampleResult/BenchmarkResult, Measures can configured operate specific subsets calculated prediction sets. parallel_predict (logical(1)) set TRUE, use future calculate predictions parallel (default: FALSE). row ids task split future::nbrOfWorkers() chunks, predictions evaluated according active future::plan(). currently works methods Learner$predict() Learner$predict_newdata(), effect resample() benchmark() means parallelize. Note recorded time required prediction reports time required predict properly defined depends parallelization backend. timeout (named numeric(2)) Timeout learner's train predict steps, seconds. works differently different encapsulation methods, see mlr3misc::encapsulate(). Default c(train = Inf, predict = Inf). Also see section error handling mlr3book: https://mlr3book.mlr-org.com/chapters/chapter10/advanced_technical_aspects_of_mlr3.html#sec-error-handling man (character(1)) String format [pkg]::[topic] pointing manual page object. Defaults NA, can set child classes.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Learner Class — Learner","text":"use_weights (character(1)) weights handled. Settings \"use\" \"ignore\", \"error\". \"use\": use weights, supported underlying Learner. available Learners property \"weights\". \"ignore\": use weights. \"error\": throw error weights present training Task. Learners property \"weights\", initialized \"use\". Learners support weights, .e. without \"weights\" property, initialized \"error\". latter behavior avoid cases user erroneously assumes Learner supports weights . Learners support weights, use_weights needs set \"ignore\" tasks weights handled (dropping weights). See Section 'weights' details. data_formats (character()) Supported data format. Always \"data.table\".. deprecated removed future. model () fitted model. available $train() called. timings (named numeric(2)) Elapsed time seconds steps \"train\" \"predict\". predictions multiple predict sets made resample() benchmark(), predict time shows cumulative duration predictions. learner$predict() called manually, last predict time gets overwritten. Measured via mlr3misc::encapsulate(). log (data.table::data.table()) Returns output (including warning errors) table columns \"stage\" (\"train\" \"predict\"), \"class\" (\"output\", \"warning\", \"error\"), \"msg\" (character()). warnings (character()) Logged warnings vector. errors (character()) Logged errors vector. hash (character(1)) Hash (unique identifier) object. hash calculated based learner id, parameter settings, predict type, fallback hash, parallel predict setting, validate setting, predict sets. phash (character(1)) Hash (unique identifier) partial object, excluding components varied systematically tuning (parameter values). predict_type (character(1)) Stores currently active predict type, e.g. \"response\". Must element $predict_types. learners already use predict type training. guarantee changing predict type training effect lead errors. param_set (paradox::ParamSet) Set hyperparameters. fallback (Learner) Returns fallback learner set $encapsulate(). encapsulation (character(2)) Returns encapsulation settings set $encapsulate(). hotstart_stack (HotstartStack). Stores HotstartStack. selected_features_impute (character(1)) Controls behavior learner support feature selection. set \"error\", error thrown. set \"\" complete feature set returned. predict_types (character()) Stores possible predict types learner capable . complete list candidate predict types, grouped task type, stored mlr_reflections$learner_predict_types. field read-.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Learner Class — Learner","text":"Learner$new() Learner$format() Learner$print() Learner$help() Learner$train() Learner$predict() Learner$predict_newdata() Learner$reset() Learner$base_learner() Learner$encapsulate() Learner$configure() Learner$selected_features() Learner$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Learner Class — Learner","text":"Creates new instance R6 class. Note object typically constructed via derived classes, e.g. LearnerClassif LearnerRegr.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Learner Class — Learner","text":"","code":"Learner$new(   id,   task_type,   param_set = ps(),   predict_types = character(),   feature_types = character(),   properties = character(),   data_formats,   packages = character(),   label = NA_character_,   man = NA_character_ )"},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Learner Class — Learner","text":"id (character(1)) Identifier new instance. task_type (character(1)) Type task, e.g. \"regr\" \"classif\". Must element mlr_reflections$task_types$type. param_set (paradox::ParamSet) Set hyperparameters. predict_types (character()) Supported predict types. Must subset mlr_reflections$learner_predict_types. feature_types (character()) Feature types learner operates . Must subset mlr_reflections$task_feature_types. properties (character()) Set properties Learner. Must subset mlr_reflections$learner_properties. following properties currently standardized understood learners mlr3: \"missings\": learner can handle missing values data. \"weights\": learner supports observation weights. \"offset\": learner can incorporate offset values adjust predictions. \"importance\": learner supports extraction importance scores, .e. comes $importance() extractor function (see section optional extractors Learner). \"selected_features\": learner supports extraction set selected features, .e. comes $selected_features() extractor function (see section optional extractors Learner). \"oob_error\": learner supports extraction estimated bag error, .e. comes oob_error() extractor function (see section optional extractors Learner). \"validation\": learner can use validation task training. \"internal_tuning\": learner able internally optimize hyperparameters (also tagged \"internal_tuning\"). \"marshal\": save learners property, need call $marshal() first. learner marshaled state, call first need call $unmarshal() use model, e.g. prediction. \"hotstart_forward\": learner supports hotstart model forward. \"hotstart_backward\": learner supports hotstarting model backward. `\"featureless\": learner use features. data_formats (character()) Deprecated: ignored, removed future. packages (character()) Set required packages. warning signaled constructor least one packages installed, loaded (attached) later -demand via requireNamespace(). label (character(1)) Label new instance. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"Learner Class — Learner","text":"Helper print outputs.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Learner Class — Learner","text":"","code":"Learner$format(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Learner Class — Learner","text":"... (ignored).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Learner Class — Learner","text":"Printer.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Learner Class — Learner","text":"","code":"Learner$print(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Learner Class — Learner","text":"... (ignored).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"method-help-","dir":"Reference","previous_headings":"","what":"Method help()","title":"Learner Class — Learner","text":"Opens corresponding help page referenced field $man.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Learner Class — Learner","text":"","code":"Learner$help()"},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"method-train-","dir":"Reference","previous_headings":"","what":"Method train()","title":"Learner Class — Learner","text":"Train learner set observations provided task. Mutates learner reference, .e. stores model alongside information field $state.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Learner Class — Learner","text":"","code":"Learner$train(task, row_ids = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Learner Class — Learner","text":"task (Task). row_ids (integer()) Vector training indices subset task$row_ids. simple split training test set, see partition().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Learner Class — Learner","text":"Returns object , modified reference. need explicitly $clone() object beforehand want keeps object previous state.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Learner Class — Learner","text":"","code":"task   = tsk(\"penguins\") learner = lrn(\"classif.rpart\") learner$train(task)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Learner Class — Learner","text":"Uses fitted model stored $state generate predictions set observations provided task. method requires learner previously trained using $train().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Learner Class — Learner","text":"","code":"Learner$predict(task, row_ids = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Learner Class — Learner","text":"task (Task) task containing observations predict . Must compatible learner's task type feature types. Unlike $predict_newdata(), type conversion done. row_ids (integer()) Vector row indices task$row_ids predict . NULL (default), predictions made rows task. simple train-test split, see partition().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Learner Class — Learner","text":"Prediction object containing predictions specified observations.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Learner Class — Learner","text":"","code":"task = tsk(\"penguins\") learner = lrn(\"classif.rpart\")$train(task) learner$predict(task)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"method-predict-newdata-","dir":"Reference","previous_headings":"","what":"Method predict_newdata()","title":"Learner Class — Learner","text":"Uses model fitted $train() create new Prediction based new data newdata. Object task task used $train() required conversion newdata. learner's $train() method called, (size reduced) version training task stored learner. learner fitted via resample() benchmark(), need pass corresponding task stored ResampleResult BenchmarkResult, respectively. , auto_convert used type-conversions ensure compatability features $train() $predict(). stored training task weights_measure column, newdata contains column name, column must numeric missing values used measure weights column. Otherwise, measure weights used.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Learner Class — Learner","text":"","code":"Learner$predict_newdata(newdata, task = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Learner Class — Learner","text":"newdata (object supported as_data_backend()) New data predict . data formats convertible as_data_backend() supported, e.g. data.frame() DataBackend. DataBackend provided newdata, row ids preserved, otherwise set sequence 1:nrow(newdata). task (Task).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Learner Class — Learner","text":"Prediction.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"Learner Class — Learner","text":"","code":"task = tsk(\"penguins\") learner = lrn(\"classif.rpart\")$train(task) learner$predict_newdata(task$data(rows = 1:5))"},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"method-reset-","dir":"Reference","previous_headings":"","what":"Method reset()","title":"Learner Class — Learner","text":"Reset learner, .e. un-train resetting state.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Learner Class — Learner","text":"","code":"Learner$reset()"},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Learner Class — Learner","text":"Returns object , modified reference. need explicitly $clone() object beforehand want keeps object previous state.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"Learner Class — Learner","text":"","code":"task = tsk(\"penguins\") learner = lrn(\"classif.rpart\")$train(task) learner$reset()"},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"method-base-learner-","dir":"Reference","previous_headings":"","what":"Method base_learner()","title":"Learner Class — Learner","text":"Extracts base learner nested learner objects like GraphLearner mlr3pipelines AutoTuner mlr3tuning. Returns Learner regular learners.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Learner Class — Learner","text":"","code":"Learner$base_learner(recursive = Inf)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Learner Class — Learner","text":"recursive (integer(1)) Depth recursion multiple nested objects.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Learner Class — Learner","text":"Learner","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"method-encapsulate-","dir":"Reference","previous_headings":"","what":"Method encapsulate()","title":"Learner Class — Learner","text":"Sets encapsulation method fallback learner train predict steps. currently four different methods implemented: \"none\": Just runs learner current session measures elapsed time. keep log, output printed directly console. Works well together traceback(). \"try\": Similar \"none\", catches error. Output printed console logged. \"evaluate\": Uses package evaluate call learner, measure time logging. \"callr\": Uses package callr call learner, measure time logging. encapsulation spawns separate R session learner called. comes considerable overhead, also guards session teared segfaults. fallback learner fitted create valid predictions case either model fitting prediction original learner fails. training step predict step original learner fails, fallback used make predictions. original learner partially fails predict step (usually form missing predict observations producing NA predictions), missing predictions imputed fallback. Note fallback always trained, know advance whether prediction fail. training step fails, $model field original learner NULL. Also see section error handling mlr3book: https://mlr3book.mlr-org.com/chapters/chapter10/advanced_technical_aspects_of_mlr3.html#sec-error-handling","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Learner Class — Learner","text":"","code":"Learner$encapsulate(method, fallback = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Learner Class — Learner","text":"method character(1) One \"none\", \"try\", \"evaluate\" \"callr\". See description details. fallback Learner fallback learner failed predictions.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Learner Class — Learner","text":"self (invisibly).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"Learner Class — Learner","text":"","code":"learner = lrn(\"classif.rpart\") fallback = lrn(\"classif.featureless\") learner$encapsulate(\"try\", fallback = fallback)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"method-configure-","dir":"Reference","previous_headings":"","what":"Method configure()","title":"Learner Class — Learner","text":"Sets parameter values fields learner. arguments whose names match name parameter paradox::ParamSet set parameters. remaining arguments assumed regular fields.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Learner Class — Learner","text":"","code":"Learner$configure(..., .values = list())"},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Learner Class — Learner","text":"... (named ) Named arguments set parameter values fields. .values (named ) Named list parameter values fields.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"examples-5","dir":"Reference","previous_headings":"","what":"Examples","title":"Learner Class — Learner","text":"","code":"learner = lrn(\"classif.rpart\") learner$configure(minsplit = 3, parallel_predict = FALSE) learner$configure(.values = list(cp = 0.005))"},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"method-selected-features-","dir":"Reference","previous_headings":"","what":"Method selected_features()","title":"Learner Class — Learner","text":"Returns features selected model. field selected_features_impute controls behavior learner support feature selection. set \"error\", error thrown, otherwise features returned.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Learner Class — Learner","text":"","code":"Learner$selected_features()"},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Learner Class — Learner","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Learner Class — Learner","text":"","code":"Learner$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Learner Class — Learner","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Learner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Learner Class — Learner","text":"","code":"## ------------------------------------------------ ## Method `Learner$train` ## ------------------------------------------------  task   = tsk(\"penguins\") learner = lrn(\"classif.rpart\") learner$train(task)  ## ------------------------------------------------ ## Method `Learner$predict` ## ------------------------------------------------  task = tsk(\"penguins\") learner = lrn(\"classif.rpart\")$train(task) learner$predict(task) #>  #> ── <PredictionClassif> for 344 observations: ─────────────────────────────────── #>  row_ids     truth  response #>        1    Adelie    Adelie #>        2    Adelie    Adelie #>        3    Adelie    Adelie #>      ---       ---       --- #>      342 Chinstrap Chinstrap #>      343 Chinstrap Chinstrap #>      344 Chinstrap Chinstrap  ## ------------------------------------------------ ## Method `Learner$predict_newdata` ## ------------------------------------------------  task = tsk(\"penguins\") learner = lrn(\"classif.rpart\")$train(task) learner$predict_newdata(task$data(rows = 1:5)) #>  #> ── <PredictionClassif> for 5 observations: ───────────────────────────────────── #>  row_ids  truth response #>        1 Adelie   Adelie #>        2 Adelie   Adelie #>        3 Adelie   Adelie #>        4 Adelie   Adelie #>        5 Adelie   Adelie  ## ------------------------------------------------ ## Method `Learner$reset` ## ------------------------------------------------  task = tsk(\"penguins\") learner = lrn(\"classif.rpart\")$train(task) learner$reset()  ## ------------------------------------------------ ## Method `Learner$encapsulate` ## ------------------------------------------------  learner = lrn(\"classif.rpart\") fallback = lrn(\"classif.featureless\") learner$encapsulate(\"try\", fallback = fallback)  ## ------------------------------------------------ ## Method `Learner$configure` ## ------------------------------------------------  learner = lrn(\"classif.rpart\") learner$configure(minsplit = 3, parallel_predict = FALSE) learner$configure(.values = list(cp = 0.005))"},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerClassif.html","id":null,"dir":"Reference","previous_headings":"","what":"Classification Learner — LearnerClassif","title":"Classification Learner — LearnerClassif","text":"Learner specializes Learner classification problems: task_type set \"classif\". Creates Predictions class PredictionClassif. Possible values predict_types : \"response\": Predicts class label observation test set. \"prob\": Predicts posterior probability class observation test set. Additional learner properties include: \"twoclass\": learner works binary classification problems. \"multiclass\": learner works multiclass classification problems. Predefined learners can found dictionary mlr_learners. Essential classification learners can found dictionary loading mlr3learners. Additional learners implement Github package https://github.com/mlr-org/mlr3extralearners.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerClassif.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Classification Learner — LearnerClassif","text":"mlr3::Learner -> LearnerClassif","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerClassif.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Classification Learner — LearnerClassif","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$selected_features() mlr3::Learner$train()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerClassif.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Classification Learner — LearnerClassif","text":"LearnerClassif$new() LearnerClassif$predict_newdata_fast() LearnerClassif$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerClassif.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Classification Learner — LearnerClassif","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerClassif.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Learner — LearnerClassif","text":"","code":"LearnerClassif$new(   id,   param_set = ps(),   predict_types = \"response\",   feature_types = character(),   properties = character(),   data_formats,   packages = character(),   label = NA_character_,   man = NA_character_ )"},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerClassif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classification Learner — LearnerClassif","text":"id (character(1)) Identifier new instance. param_set (paradox::ParamSet) Set hyperparameters. predict_types (character()) Supported predict types. Must subset mlr_reflections$learner_predict_types. feature_types (character()) Feature types learner operates . Must subset mlr_reflections$task_feature_types. properties (character()) Set properties Learner. Must subset mlr_reflections$learner_properties. following properties currently standardized understood learners mlr3: \"missings\": learner can handle missing values data. \"weights\": learner supports observation weights. \"offset\": learner can incorporate offset values adjust predictions. \"importance\": learner supports extraction importance scores, .e. comes $importance() extractor function (see section optional extractors Learner). \"selected_features\": learner supports extraction set selected features, .e. comes $selected_features() extractor function (see section optional extractors Learner). \"oob_error\": learner supports extraction estimated bag error, .e. comes oob_error() extractor function (see section optional extractors Learner). \"validation\": learner can use validation task training. \"internal_tuning\": learner able internally optimize hyperparameters (also tagged \"internal_tuning\"). \"marshal\": save learners property, need call $marshal() first. learner marshaled state, call first need call $unmarshal() use model, e.g. prediction. \"hotstart_forward\": learner supports hotstart model forward. \"hotstart_backward\": learner supports hotstarting model backward. `\"featureless\": learner use features. data_formats (character()) Deprecated: ignored, removed future. packages (character()) Set required packages. warning signaled constructor least one packages installed, loaded (attached) later -demand via requireNamespace(). label (character(1)) Label new instance. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerClassif.html","id":"method-predict-newdata-fast-","dir":"Reference","previous_headings":"","what":"Method predict_newdata_fast()","title":"Classification Learner — LearnerClassif","text":"Predicts outcomes new data newdata using model fitted $train(). method faster $predict_newdata() skips assertions, type conversions, encapsulation, logging. Unlike $predict_newdata(), method return Prediction object. Instead, returns list either \"response\" \"prob\" element, depending prediction type. Note state$predict_time state$log remain empty using method. learners may support method may fail called. Prefer $predict_newdata() unless performance critical. model trained via resample() benchmark(), must pass associated task object stored corresponding ResampleResult BenchmarkResult.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerClassif.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Learner — LearnerClassif","text":"","code":"LearnerClassif$predict_newdata_fast(newdata, task = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerClassif.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classification Learner — LearnerClassif","text":"newdata data.table::data.table() New data predict . task (Task).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerClassif.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Classification Learner — LearnerClassif","text":"list() elements \"response\" \"prob\" depending predict type.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerClassif.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Classification Learner — LearnerClassif","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerClassif.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Learner — LearnerClassif","text":"","code":"LearnerClassif$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerClassif.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classification Learner — LearnerClassif","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerClassif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classification Learner — LearnerClassif","text":"","code":"# get all classification learners from mlr_learners: lrns = mlr_learners$mget(mlr_learners$keys(\"^classif\")) names(lrns) #> [1] \"classif.debug\"       \"classif.featureless\" \"classif.rpart\"        # get a specific learner from mlr_learners: lrn = lrn(\"classif.rpart\") print(lrn) #>  #> ── <LearnerClassifRpart> (classif.rpart): Classification Tree ────────────────── #> • Model: - #> • Parameters: xval=0 #> • Packages: mlr3 and rpart #> • Predict Types: [response] and prob #> • Feature Types: logical, integer, numeric, factor, and ordered #> • Encapsulation: none (fallback: -) #> • Properties: importance, missings, multiclass, selected_features, twoclass, #> and weights #> • Other settings: use_weights = 'use'  # train the learner: task = tsk(\"penguins\") lrn$train(task, 1:200)  # predict on new observations: lrn$predict(task, 201:344)$confusion #>            truth #> response    Adelie Chinstrap Gentoo #>   Adelie         0        62      1 #>   Chinstrap      0         0      0 #>   Gentoo         0         6     75"},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerRegr.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression Learner — LearnerRegr","title":"Regression Learner — LearnerRegr","text":"Learner specializes Learner regression problems: task_type set \"regr\". Creates Predictions class PredictionRegr. Possible values predict_types : \"response\": Predicts numeric response observation test set. \"se\": Predicts standard error value response observation test set. \"distr\": Probability distribution VectorDistribution object (requires package distr6, available via repository https://raphaels1.r-universe.dev). \"quantiles\": Predicts quantile estimates observation test set. Set $quantiles specify quantiles predict $quantile_response specify response quantile. See mlr3book section quantile regression details. Predefined learners can found dictionary mlr_learners. Essential regression learners can found dictionary loading mlr3learners. Additional learners implement Github package https://github.com/mlr-org/mlr3extralearners.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerRegr.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Regression Learner — LearnerRegr","text":"mlr3::Learner -> LearnerRegr","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerRegr.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Regression Learner — LearnerRegr","text":"quantiles (numeric()) Numeric vector probabilities used predicting quantiles. Elements must 0 1, missing provided ascending order. one quantile provided, used response. Otherwise, set $quantile_response specify response quantile. quantile_response (numeric(1)) quantile used response.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerRegr.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Regression Learner — LearnerRegr","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$selected_features() mlr3::Learner$train()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerRegr.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Regression Learner — LearnerRegr","text":"LearnerRegr$new() LearnerRegr$predict_newdata_fast() LearnerRegr$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerRegr.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Regression Learner — LearnerRegr","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerRegr.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression Learner — LearnerRegr","text":"","code":"LearnerRegr$new(   id,   task_type = \"regr\",   param_set = ps(),   predict_types = \"response\",   feature_types = character(),   properties = character(),   data_formats,   packages = character(),   label = NA_character_,   man = NA_character_ )"},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerRegr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression Learner — LearnerRegr","text":"id (character(1)) Identifier new instance. task_type (character(1)) Type task, e.g. \"regr\" \"classif\". Must element mlr_reflections$task_types$type. param_set (paradox::ParamSet) Set hyperparameters. predict_types (character()) Supported predict types. Must subset mlr_reflections$learner_predict_types. feature_types (character()) Feature types learner operates . Must subset mlr_reflections$task_feature_types. properties (character()) Set properties Learner. Must subset mlr_reflections$learner_properties. following properties currently standardized understood learners mlr3: \"missings\": learner can handle missing values data. \"weights\": learner supports observation weights. \"offset\": learner can incorporate offset values adjust predictions. \"importance\": learner supports extraction importance scores, .e. comes $importance() extractor function (see section optional extractors Learner). \"selected_features\": learner supports extraction set selected features, .e. comes $selected_features() extractor function (see section optional extractors Learner). \"oob_error\": learner supports extraction estimated bag error, .e. comes oob_error() extractor function (see section optional extractors Learner). \"validation\": learner can use validation task training. \"internal_tuning\": learner able internally optimize hyperparameters (also tagged \"internal_tuning\"). \"marshal\": save learners property, need call $marshal() first. learner marshaled state, call first need call $unmarshal() use model, e.g. prediction. \"hotstart_forward\": learner supports hotstart model forward. \"hotstart_backward\": learner supports hotstarting model backward. `\"featureless\": learner use features. data_formats (character()) Deprecated: ignored, removed future. packages (character()) Set required packages. warning signaled constructor least one packages installed, loaded (attached) later -demand via requireNamespace(). label (character(1)) Label new instance. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerRegr.html","id":"method-predict-newdata-fast-","dir":"Reference","previous_headings":"","what":"Method predict_newdata_fast()","title":"Regression Learner — LearnerRegr","text":"Predicts outcomes new data newdata using model fitted $train(). method faster $predict_newdata() skips assertions, type conversions, encapsulation, logging. Unlike $predict_newdata(), method return Prediction object. Instead, returns list either \"response\" \"prob\" element, depending prediction type. Note state$predict_time state$log remain empty using method. learners may support method may fail called. Prefer $predict_newdata() unless performance critical. model trained via resample() benchmark(), must pass associated task object stored corresponding ResampleResult BenchmarkResult.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerRegr.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression Learner — LearnerRegr","text":"","code":"LearnerRegr$predict_newdata_fast(newdata, task = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerRegr.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression Learner — LearnerRegr","text":"newdata data.table::data.table() New data predict . task (Task).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerRegr.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Regression Learner — LearnerRegr","text":"list() elements \"response\", \"se\" \"quantiles\" depending predict type.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerRegr.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Regression Learner — LearnerRegr","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerRegr.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression Learner — LearnerRegr","text":"","code":"LearnerRegr$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerRegr.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression Learner — LearnerRegr","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/LearnerRegr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regression Learner — LearnerRegr","text":"","code":"# get all regression learners from mlr_learners: lrns = mlr_learners$mget(mlr_learners$keys(\"^regr\")) names(lrns) #> [1] \"regr.debug\"       \"regr.featureless\" \"regr.rpart\"        # get a specific learner from mlr_learners: mlr_learners$get(\"regr.rpart\") #>  #> ── <LearnerRegrRpart> (regr.rpart): Regression Tree ──────────────────────────── #> • Model: - #> • Parameters: xval=0 #> • Packages: mlr3 and rpart #> • Predict Types: [response] #> • Feature Types: logical, integer, numeric, factor, and ordered #> • Encapsulation: none (fallback: -) #> • Properties: importance, missings, selected_features, and weights #> • Other settings: use_weights = 'use' lrn(\"classif.featureless\") #>  #> ── <LearnerClassifFeatureless> (classif.featureless): Featureless Classification #> • Model: - #> • Parameters: method=mode #> • Packages: mlr3 #> • Predict Types: [response] and prob #> • Feature Types: logical, integer, numeric, character, factor, ordered, #> POSIXct, and Date #> • Encapsulation: none (fallback: -) #> • Properties: featureless, importance, missings, multiclass, selected_features, #> twoclass, and weights #> • Other settings: use_weights = 'use'"},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":null,"dir":"Reference","previous_headings":"","what":"Measure Class — Measure","title":"Measure Class — Measure","text":"abstract base class measures like MeasureClassif MeasureRegr. Measures classes tailored around two functions work: function $score() quantifies performance Prediction object, set predicted observation via scalar number – usually aggregate losses contained observations, comparing truth prediction columns prediction object. function $aggregator() combines multiple performance scores returned $score() obtained different resampling iterations scalar performance value associated complete resampling – usually averaging summing. addition two functions, meta-information performance measure stored. Predefined measures stored dictionary mlr_measures, e.g. classif.auc time_train. Many measures mlr3 implemented mlr3measures ordinary functions. guide extend mlr3 custom measures can found mlr3book.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"inheriting","dir":"Reference","previous_headings":"","what":"Inheriting","title":"Measure Class — Measure","text":"measures (confidence intervals mlr3inferr) necessary measure returns one value. cases necessary overwrite public methods $aggregate() /$score() return named numeric() least one names corresponds id measure .","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"weights","dir":"Reference","previous_headings":"","what":"Weights","title":"Measure Class — Measure","text":"Many measures support observation weights, indicated property \"weights\". weights stored Task column role weights_measure needs assigned single numeric column. weights automatically used found task, can disabled setting field use_weights \"ignore\". See description use_weights information. measure set-use weights task designated weights_measure column, unweighted version calculated instead. weights necessarily need sum 1, normalized measure necessary. measures -called decomposable loss functions point-wise loss computed either mean-aggregated summed test set. measures mean-aggregation, weights typically used compute weighted mean, normalizes weights sum 1. Measures use sum-aggregation normalize weights instead multiply individual losses given weights. See documentation specific measures details.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Measure Class — Measure","text":"id (character(1)) Identifier object. Used tables, plot text output. label (character(1)) Label object. Can used tables, plot text output instead ID. task_type (character(1)) Task type, e.g. \"classif\" \"regr\". complete list possible task types (depending loaded packages), see mlr_reflections$task_types$type. param_set (paradox::ParamSet) Set hyperparameters. obs_loss (function() | NULL) Function calculate observation-wise loss. trafo (list() | NULL) NULL list two elements: trafo: transformation function applied aggregating observation-wise losses (e.g. sqrt RMSE) deriv: derivative trafo. predict_type (character(1)) Required predict type Learner. check_prerequisites (character(1)) proceed one following prerequisites met: wrong predict type (e.g., probabilities required, labels available). wrong predict set (e.g., learner predicted training set, predictions test set required). task properties satisfied (e.g., binary classification measure multiclass task). Possible values \"ignore\" (just return NaN) \"warn\" (default, raise warning returning NaN). task_properties (character()) Required properties Task. range (numeric(2)) Lower upper bound possible performance scores. minimize (logical(1)) TRUE, good predictions correspond small values performance scores. packages (character(1)) Set required packages. packages loaded, attached. man (character(1)) String format [pkg]::[topic] pointing manual page object. Defaults NA, can set child classes.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Measure Class — Measure","text":"predict_sets (character()) resample()/benchmark(), Learner can predict multiple sets. Per default, learner predicts observations test set (predict_sets == \"test\"). change behavior, set predict_sets non-empty subset {\"train\", \"test\", \"internal_valid\"}. \"train\" predict set contains train ids resampling. means learner validation sets $validate ratio (creating validation data training data), train predictions include predictions validation data. set yields separate Prediction object. can combined via getters ResampleResult/BenchmarkResult, Measures can configured operate specific subsets calculated prediction sets. hash (character(1)) Hash (unique identifier) object. hash calculated based id, parameter settings, predict sets $score, $average, $aggregator, $obs_loss, $trafo method. Measure can define additional fields included hash setting field $.extra_hash. properties (character()) Properties measure. average (character(1)) Method aggregation: \"micro\": predictions multiple resampling iterations first combined single Prediction object. Next, scoring function measure applied combined object, yielding single numeric score. \"macro\": scoring function applied Prediction object resampling iterations, yielding single numeric score. Next, scores combined aggregator function single numerical score. \"macro_weighted\": scoring function applied Prediction object resampling iterations, yielding single numeric score. Next, scores combined aggregator function single numerical score. scores weighted total sample weights (present, $use_weights set \"use\"), number samples resampling iteration. \"custom\": measure comes custom aggregation method directly operates ResampleResult. aggregator (function()) Function aggregate scores computed different resampling iterations. use_weights (character(1)) handle weights. Settings \"use\", \"ignore\", \"error\". \"use\": Weights used automatically found task, supported measure. \"ignore\": Weights ignored. \"error\": throw error weights present training Task. measures property \"weights\", initialized \"use\". measures property \"requires_no_prediction\", initialized \"ignore\". measures neither properties, initialized \"error\". latter behavior avoid cases user erroneously assumes measure supports weights . measures support weights, use_weights needs set \"ignore\" tasks weights handled (dropping weights).","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Measure Class — Measure","text":"Measure$new() Measure$format() Measure$print() Measure$help() Measure$score() Measure$aggregate() Measure$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Measure Class — Measure","text":"Creates new instance R6 class. Note object typically constructed via derived classes, e.g. MeasureClassif MeasureRegr.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure Class — Measure","text":"","code":"Measure$new(   id,   task_type = NA,   param_set = ps(),   range = c(-Inf, Inf),   minimize = NA,   average = \"macro\",   aggregator = NULL,   obs_loss = NULL,   properties = character(),   predict_type = \"response\",   predict_sets = \"test\",   task_properties = character(),   packages = character(),   label = NA_character_,   man = NA_character_,   trafo = NULL )"},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure Class — Measure","text":"id (character(1)) Identifier new instance. task_type (character(1)) Type task, e.g. \"regr\" \"classif\". Must element mlr_reflections$task_types$type. param_set (paradox::ParamSet) Set hyperparameters. range (numeric(2)) Feasible range measure c(lower_bound, upper_bound). bounds may infinite. minimize (logical(1)) Set TRUE good predictions correspond small values, FALSE good predictions correspond large values. set NA (default), tuning measure possible. average (character(1)) average multiple Predictions ResampleResult. default, \"macro\", calculates individual performances scores Prediction uses function defined $aggregator average single number. \"macro_weighted\" similar \"macro\", uses weighted averages. Weights taken weights_measure column resampled Task present. Note \"macro_weighted\" can differ \"macro\" even weights present $use_weights set \"ignore\", since aggregation done using uniform sample weights, result non-uniform weights Predictions contain different numbers samples. set \"micro\", individual Prediction objects first combined single new Prediction object used assess performance. function $aggregator used case. aggregator (function()) Function aggregate multiple iterations. role function depends value field \"average\": \"macro\": numeric vector scores (one per iteration) passed. aggregate function defaults mean() case. \"micro\": aggregator function used. Instead, predictions multiple iterations first combined scored one go. \"custom\": ResampleResult passed aggregate function. obs_loss (function NULL) observation-wise loss function, e.g. zero-one classification error. properties (character()) Properties measure. Must subset mlr_reflections$measure_properties. Supported mlr3: \"requires_task\" (requires complete Task), \"requires_learner\" (requires trained Learner), \"requires_model\" (requires trained Learner, including fitted model), \"requires_train_set\" (requires training indices Resampling), \"na_score\" (measure expected occasionally return NA NaN), \"weights\" (support weighted scoring using sample weights task, column role weights_measure), \"primary_iters\" (measure explictly handles resamplings use subset iterations point estimate) \"requires_no_prediction\" (prediction required; usually means measure extracts information learner state.). predict_type (character(1)) Required predict type Learner. Possible values stored mlr_reflections$learner_predict_types. predict_sets (character()) Prediction sets operate , used aggregate() extract matching predict_sets ResampleResult. Multiple predict sets calculated respective Learner resample()/benchmark(). Must non-empty subset {\"train\", \"test\", \"internal_valid\"}. multiple sets provided, first combined single prediction object. Default \"test\". task_properties (character()) Required task properties, see Task. packages (character()) Set required packages. warning signaled constructor least one packages installed, loaded (attached) later -demand via requireNamespace(). label (character(1)) Label new instance. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help(). trafo (list() NULL) optional list two elements, containing transformation \"fn\" derivative \"deriv\". transformation function function applied aggregating pointwise losses, .e. requires $obs_loss present. example sqrt RMSE.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"Measure Class — Measure","text":"Helper print outputs.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure Class — Measure","text":"","code":"Measure$format(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure Class — Measure","text":"... (ignored).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Measure Class — Measure","text":"Printer.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure Class — Measure","text":"","code":"Measure$print(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure Class — Measure","text":"... (ignored).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"method-help-","dir":"Reference","previous_headings":"","what":"Method help()","title":"Measure Class — Measure","text":"Opens corresponding help page referenced field $man.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure Class — Measure","text":"","code":"Measure$help()"},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"method-score-","dir":"Reference","previous_headings":"","what":"Method score()","title":"Measure Class — Measure","text":"Takes Prediction (list Prediction objects named valid predict_sets) calculates numeric score. measure flagged properties \"requires_task\", \"requires_learner\", \"requires_model\" \"requires_train_set\", must additionally pass respective Task, (trained) Learner training set indices. handled internally resample()/benchmark().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure Class — Measure","text":"","code":"Measure$score(prediction, task = NULL, learner = NULL, train_set = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure Class — Measure","text":"prediction (Prediction | named list Prediction). task (Task). learner (Learner). train_set (integer()).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Measure Class — Measure","text":"numeric(1).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measure Class — Measure","text":"","code":"task = tsk(\"penguins\") learner = lrn(\"classif.rpart\")$train(task) prediction = learner$predict(task) msr(\"classif.ce\")$score(prediction)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"method-aggregate-","dir":"Reference","previous_headings":"","what":"Method aggregate()","title":"Measure Class — Measure","text":"Aggregates multiple performance scores single score, e.g. using aggregator function measure.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure Class — Measure","text":"","code":"Measure$aggregate(rr)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure Class — Measure","text":"rr ResampleResult.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Measure Class — Measure","text":"numeric(1).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Measure Class — Measure","text":"","code":"task = tsk(\"penguins\") learner = lrn(\"classif.rpart\") rr = resample(task, learner, rsmp(\"holdout\")) msr(\"classif.ce\")$aggregate(rr)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Measure Class — Measure","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure Class — Measure","text":"","code":"Measure$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure Class — Measure","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Measure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measure Class — Measure","text":"","code":"## ------------------------------------------------ ## Method `Measure$score` ## ------------------------------------------------  task = tsk(\"penguins\") learner = lrn(\"classif.rpart\")$train(task) prediction = learner$predict(task) msr(\"classif.ce\")$score(prediction) #> [1] 0.03488372  ## ------------------------------------------------ ## Method `Measure$aggregate` ## ------------------------------------------------  task = tsk(\"penguins\") learner = lrn(\"classif.rpart\") rr = resample(task, learner, rsmp(\"holdout\")) msr(\"classif.ce\")$aggregate(rr) #> classif.ce  #> 0.04347826"},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureClassif.html","id":null,"dir":"Reference","previous_headings":"","what":"Classification Measure — MeasureClassif","title":"Classification Measure — MeasureClassif","text":"measure specializes Measure classification problems: task_type set \"classif\". Possible values predict_type \"response\" \"prob\". Predefined measures can found dictionary mlr_measures. default measure classification classif.ce.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureClassif.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Classification Measure — MeasureClassif","text":"mlr3::Measure -> MeasureClassif","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureClassif.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Classification Measure — MeasureClassif","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureClassif.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Classification Measure — MeasureClassif","text":"MeasureClassif$new() MeasureClassif$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureClassif.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Classification Measure — MeasureClassif","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureClassif.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Measure — MeasureClassif","text":"","code":"MeasureClassif$new(   id,   param_set = ps(),   range,   minimize = NA,   average = \"macro\",   aggregator = NULL,   properties = character(),   predict_type = \"response\",   predict_sets = \"test\",   task_properties = character(),   packages = character(),   label = NA_character_,   man = NA_character_ )"},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureClassif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classification Measure — MeasureClassif","text":"id (character(1)) Identifier new instance. param_set (paradox::ParamSet) Set hyperparameters. range (numeric(2)) Feasible range measure c(lower_bound, upper_bound). bounds may infinite. minimize (logical(1)) Set TRUE good predictions correspond small values, FALSE good predictions correspond large values. set NA (default), tuning measure possible. average (character(1)) average multiple Predictions ResampleResult. default, \"macro\", calculates individual performances scores Prediction uses function defined $aggregator average single number. \"macro_weighted\" similar \"macro\", uses weighted averages. Weights taken weights_measure column resampled Task present. Note \"macro_weighted\" can differ \"macro\" even weights present $use_weights set \"ignore\", since aggregation done using uniform sample weights, result non-uniform weights Predictions contain different numbers samples. set \"micro\", individual Prediction objects first combined single new Prediction object used assess performance. function $aggregator used case. aggregator (function()) Function aggregate multiple iterations. role function depends value field \"average\": \"macro\": numeric vector scores (one per iteration) passed. aggregate function defaults mean() case. \"micro\": aggregator function used. Instead, predictions multiple iterations first combined scored one go. \"custom\": ResampleResult passed aggregate function. properties (character()) Properties measure. Must subset mlr_reflections$measure_properties. Supported mlr3: \"requires_task\" (requires complete Task), \"requires_learner\" (requires trained Learner), \"requires_model\" (requires trained Learner, including fitted model), \"requires_train_set\" (requires training indices Resampling), \"na_score\" (measure expected occasionally return NA NaN), \"weights\" (support weighted scoring using sample weights task, column role weights_measure), \"primary_iters\" (measure explictly handles resamplings use subset iterations point estimate) \"requires_no_prediction\" (prediction required; usually means measure extracts information learner state.). predict_type (character(1)) Required predict type Learner. Possible values stored mlr_reflections$learner_predict_types. predict_sets (character()) Prediction sets operate , used aggregate() extract matching predict_sets ResampleResult. Multiple predict sets calculated respective Learner resample()/benchmark(). Must non-empty subset {\"train\", \"test\", \"internal_valid\"}. multiple sets provided, first combined single prediction object. Default \"test\". task_properties (character()) Required task properties, see Task. packages (character()) Set required packages. warning signaled constructor least one packages installed, loaded (attached) later -demand via requireNamespace(). label (character(1)) Label new instance. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureClassif.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Classification Measure — MeasureClassif","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureClassif.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Measure — MeasureClassif","text":"","code":"MeasureClassif$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureClassif.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classification Measure — MeasureClassif","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureRegr.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression Measure — MeasureRegr","title":"Regression Measure — MeasureRegr","text":"measure specializes Measure regression problems: task_type set \"regr\". Possible values predict_type \"response\", \"se\" \"distr\". Predefined measures can found dictionary mlr_measures. default measure regression regr.mse.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureRegr.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Regression Measure — MeasureRegr","text":"mlr3::Measure -> MeasureRegr","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureRegr.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Regression Measure — MeasureRegr","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureRegr.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Regression Measure — MeasureRegr","text":"MeasureRegr$new() MeasureRegr$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureRegr.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Regression Measure — MeasureRegr","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureRegr.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression Measure — MeasureRegr","text":"","code":"MeasureRegr$new(   id,   param_set = ps(),   range,   minimize = NA,   average = \"macro\",   aggregator = NULL,   properties = character(),   predict_type = \"response\",   predict_sets = \"test\",   task_properties = character(),   packages = character(),   label = NA_character_,   man = NA_character_ )"},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureRegr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression Measure — MeasureRegr","text":"id (character(1)) Identifier new instance. param_set (paradox::ParamSet) Set hyperparameters. range (numeric(2)) Feasible range measure c(lower_bound, upper_bound). bounds may infinite. minimize (logical(1)) Set TRUE good predictions correspond small values, FALSE good predictions correspond large values. set NA (default), tuning measure possible. average (character(1)) average multiple Predictions ResampleResult. default, \"macro\", calculates individual performances scores Prediction uses function defined $aggregator average single number. \"macro_weighted\" similar \"macro\", uses weighted averages. Weights taken weights_measure column resampled Task present. Note \"macro_weighted\" can differ \"macro\" even weights present $use_weights set \"ignore\", since aggregation done using uniform sample weights, result non-uniform weights Predictions contain different numbers samples. set \"micro\", individual Prediction objects first combined single new Prediction object used assess performance. function $aggregator used case. aggregator (function()) Function aggregate multiple iterations. role function depends value field \"average\": \"macro\": numeric vector scores (one per iteration) passed. aggregate function defaults mean() case. \"micro\": aggregator function used. Instead, predictions multiple iterations first combined scored one go. \"custom\": ResampleResult passed aggregate function. properties (character()) Properties measure. Must subset mlr_reflections$measure_properties. Supported mlr3: \"requires_task\" (requires complete Task), \"requires_learner\" (requires trained Learner), \"requires_model\" (requires trained Learner, including fitted model), \"requires_train_set\" (requires training indices Resampling), \"na_score\" (measure expected occasionally return NA NaN), \"weights\" (support weighted scoring using sample weights task, column role weights_measure), \"primary_iters\" (measure explictly handles resamplings use subset iterations point estimate) \"requires_no_prediction\" (prediction required; usually means measure extracts information learner state.). predict_type (character(1)) Required predict type Learner. Possible values stored mlr_reflections$learner_predict_types. predict_sets (character()) Prediction sets operate , used aggregate() extract matching predict_sets ResampleResult. Multiple predict sets calculated respective Learner resample()/benchmark(). Must non-empty subset {\"train\", \"test\", \"internal_valid\"}. multiple sets provided, first combined single prediction object. Default \"test\". task_properties (character()) Required task properties, see Task. packages (character()) Set required packages. warning signaled constructor least one packages installed, loaded (attached) later -demand via requireNamespace(). label (character(1)) Label new instance. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureRegr.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Regression Measure — MeasureRegr","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureRegr.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression Measure — MeasureRegr","text":"","code":"MeasureRegr$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureRegr.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression Measure — MeasureRegr","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureSimilarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Similarity Measure — MeasureSimilarity","title":"Similarity Measure — MeasureSimilarity","text":"measure specializes Measure measures quantifying similarity sets selected features. calculate similarity measures, Learner must property \"selected_features\". task_type set NA_character_. average set \"custom\". Predefined measures can found dictionary mlr_measures, prefixed \"sim.\".","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureSimilarity.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Similarity Measure — MeasureSimilarity","text":"mlr3::Measure -> MeasureSimilarity","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureSimilarity.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Similarity Measure — MeasureSimilarity","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureSimilarity.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Similarity Measure — MeasureSimilarity","text":"MeasureSimilarity$new() MeasureSimilarity$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureSimilarity.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Similarity Measure — MeasureSimilarity","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureSimilarity.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Similarity Measure — MeasureSimilarity","text":"","code":"MeasureSimilarity$new(   id,   param_set = ps(),   range,   minimize = NA,   average = \"macro\",   aggregator = NULL,   properties = character(),   predict_type = NA_character_,   task_properties = character(),   packages = character(),   label = NA_character_,   man = NA_character_ )"},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureSimilarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Similarity Measure — MeasureSimilarity","text":"id (character(1)) Identifier new instance. param_set (paradox::ParamSet) Set hyperparameters. range (numeric(2)) Feasible range measure c(lower_bound, upper_bound). bounds may infinite. minimize (logical(1)) Set TRUE good predictions correspond small values, FALSE good predictions correspond large values. set NA (default), tuning measure possible. average (character(1)) average multiple Predictions ResampleResult. default, \"macro\", calculates individual performances scores Prediction uses function defined $aggregator average single number. \"macro_weighted\" similar \"macro\", uses weighted averages. Weights taken weights_measure column resampled Task present. Note \"macro_weighted\" can differ \"macro\" even weights present $use_weights set \"ignore\", since aggregation done using uniform sample weights, result non-uniform weights Predictions contain different numbers samples. set \"micro\", individual Prediction objects first combined single new Prediction object used assess performance. function $aggregator used case. aggregator (function()) Function aggregate multiple iterations. role function depends value field \"average\": \"macro\": numeric vector scores (one per iteration) passed. aggregate function defaults mean() case. \"micro\": aggregator function used. Instead, predictions multiple iterations first combined scored one go. \"custom\": ResampleResult passed aggregate function. properties (character()) Properties measure. Must subset mlr_reflections$measure_properties. Supported mlr3: \"requires_task\" (requires complete Task), \"requires_learner\" (requires trained Learner), \"requires_model\" (requires trained Learner, including fitted model), \"requires_train_set\" (requires training indices Resampling), \"na_score\" (measure expected occasionally return NA NaN), \"weights\" (support weighted scoring using sample weights task, column role weights_measure), \"primary_iters\" (measure explictly handles resamplings use subset iterations point estimate) \"requires_no_prediction\" (prediction required; usually means measure extracts information learner state.). predict_type (character(1)) Required predict type Learner. Possible values stored mlr_reflections$learner_predict_types. task_properties (character()) Required task properties, see Task. packages (character()) Set required packages. warning signaled constructor least one packages installed, loaded (attached) later -demand via requireNamespace(). label (character(1)) Label new instance. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureSimilarity.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Similarity Measure — MeasureSimilarity","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureSimilarity.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Similarity Measure — MeasureSimilarity","text":"","code":"MeasureSimilarity$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureSimilarity.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Similarity Measure — MeasureSimilarity","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/MeasureSimilarity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Similarity Measure — MeasureSimilarity","text":"","code":"task = tsk(\"penguins\") learners = list(   lrn(\"classif.rpart\", maxdepth = 1, id = \"r1\"),   lrn(\"classif.rpart\", maxdepth = 2, id = \"r2\") ) resampling = rsmp(\"cv\", folds = 3) grid = benchmark_grid(task, learners, resampling) bmr = benchmark(grid, store_models = TRUE) bmr$aggregate(msrs(c(\"classif.ce\", \"sim.jaccard\"))) #>       nr  task_id learner_id resampling_id iters classif.ce sim.jaccard #>    <int>   <char>     <char>        <char> <int>      <num>       <num> #> 1:     1 penguins         r1            cv     3  0.2093313           1 #> 2:     2 penguins         r2            cv     3  0.0697432           1 #> Hidden columns: resample_result"},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract Prediction Object — Prediction","title":"Abstract Prediction Object — Prediction","text":"abstract base class task objects like PredictionClassif PredictionRegr. Prediction objects store following information: row ids test set corresponding true (observed) response. corresponding predicted response. Additional predictions based class predict_type. E.g., class probabilities classification estimated standard error regression. Note object usually constructed via derived classes, e.g. PredictionClassif PredictionRegr.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"s-methods","dir":"Reference","previous_headings":"","what":"S3 Methods","title":"Abstract Prediction Object — Prediction","text":".data.table(rr) Prediction -> data.table::data.table() Converts data data.table::data.table(). c(..., keep_duplicates = TRUE) (Prediction, Prediction, ...) -> Prediction Combines multiple Predictions single Prediction. keep_duplicates FALSE duplicated row ids, data former passed objects get overwritten data later passed objects.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Abstract Prediction Object — Prediction","text":"data (named list()) Internal data structure. task_type (character(1)) Required type Task. task_properties (character()) Required properties Task. predict_types (character()) Set predict types object stores. man (character(1)) String format [pkg]::[topic] pointing manual page object. Defaults NA, can set child classes.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Abstract Prediction Object — Prediction","text":"row_ids (integer()) Vector row ids predictions stored. truth () True (observed) outcome. missing (integer()) Returns row_ids predictions missing incomplete. weights (numeric()) Vector measure weights, obtained weights_measure column Task present. NULL weights present.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract Prediction Object — Prediction","text":"Prediction$format() Prediction$print() Prediction$help() Prediction$score() Prediction$obs_loss() Prediction$filter() Prediction$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"Abstract Prediction Object — Prediction","text":"Helper print outputs.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Prediction Object — Prediction","text":"","code":"Prediction$format(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Prediction Object — Prediction","text":"... (ignored).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Abstract Prediction Object — Prediction","text":"Printer.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Prediction Object — Prediction","text":"","code":"Prediction$print(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Prediction Object — Prediction","text":"... (ignored).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"method-help-","dir":"Reference","previous_headings":"","what":"Method help()","title":"Abstract Prediction Object — Prediction","text":"Opens corresponding help page referenced field $man.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Prediction Object — Prediction","text":"","code":"Prediction$help()"},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"method-score-","dir":"Reference","previous_headings":"","what":"Method score()","title":"Abstract Prediction Object — Prediction","text":"Calculates performance provided measures Task Learner may NULL measures, measures need extract information objects. Note predict_sets measures ignored method, instead predictions used.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Prediction Object — Prediction","text":"","code":"Prediction$score(   measures = NULL,   task = NULL,   learner = NULL,   train_set = NULL )"},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Prediction Object — Prediction","text":"measures (Measure | list Measure) Measure(s) calculate. task (Task). learner (Learner). train_set (integer()).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Prediction Object — Prediction","text":"Prediction.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"method-obs-loss-","dir":"Reference","previous_headings":"","what":"Method obs_loss()","title":"Abstract Prediction Object — Prediction","text":"Calculates observation-wise loss via loss function set Measure's field obs_loss. Returns data.table() columns row_ids, truth, response one additional numeric column measure, named respective measure id. observation-wise loss function measure, column filled NA values. Note measures RMSE, $obs_loss, require additional transformation aggregation, example taking square-root.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Prediction Object — Prediction","text":"","code":"Prediction$obs_loss(measures = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Prediction Object — Prediction","text":"measures (Measure | list Measure) Measure(s) calculate.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"method-filter-","dir":"Reference","previous_headings":"","what":"Method filter()","title":"Abstract Prediction Object — Prediction","text":"Filters Prediction, keeping predictions provided row_ids. changes object -place, need create clone preserve original Prediction.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Prediction Object — Prediction","text":"","code":"Prediction$filter(row_ids)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Prediction Object — Prediction","text":"row_ids integer() Row indices.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Prediction Object — Prediction","text":"self, modified.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Abstract Prediction Object — Prediction","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Prediction Object — Prediction","text":"","code":"Prediction$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Prediction.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Prediction Object — Prediction","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionClassif.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction Object for Classification — PredictionClassif","title":"Prediction Object for Classification — PredictionClassif","text":"object wraps predictions returned learner class LearnerClassif, .e. predicted response class probabilities. response provided construction, class probabilities , response calculated probabilities: class label highest probability chosen. case ties, label selected randomly.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionClassif.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Prediction Object for Classification — PredictionClassif","text":"object constructed manually, make sure factor levels truth levels task, order. case binary classification tasks, positive class label must first level.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionClassif.html","id":"thresholding","dir":"Reference","previous_headings":"","what":"Thresholding","title":"Prediction Object for Classification — PredictionClassif","text":"probabilities stored, possible change threshold determines predicted class label. Usually, label class highest predicted probability selected. binary classification problems, threshold defaults 0.5. cost-sensitive imbalanced classification problems, manually adjusting threshold can increase predictive performance. binary problems single threshold value can set. probability exceeds threshold, positive class predicted. probability equals threshold, label selected randomly. binary multi-class problems, named numeric vector thresholds can set. length names must correspond number classes class names, respectively. determine class label, probabilities divided threshold. results ratio > 1 probability exceeds threshold, ratio < 1 otherwise. Note possible either none multiple ratios greater 1 time. Anyway, class label maximum ratio selected. case ties ratio, one tied class labels selected randomly. Note following edge cases threshold equal 0 handled specially: threshold 0 resulting ratio gets Inf thus gets always selected. multiple ratios value Inf, one selected according ties_method (randomly per default). additionally predicted probability also 0, ratio 0/0 results NaN values. simply replaced 0 thus never get selected.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionClassif.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Prediction Object for Classification — PredictionClassif","text":"mlr3::Prediction -> PredictionClassif","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionClassif.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Prediction Object for Classification — PredictionClassif","text":"response (factor()) Access stored predicted class labels. prob (matrix()) Access stored probabilities. confusion (matrix()) Confusion matrix, resulting comparison truth response. Truth columns, predicted response rows.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionClassif.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Prediction Object for Classification — PredictionClassif","text":"mlr3::Prediction$filter() mlr3::Prediction$format() mlr3::Prediction$help() mlr3::Prediction$obs_loss() mlr3::Prediction$print() mlr3::Prediction$score()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionClassif.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Prediction Object for Classification — PredictionClassif","text":"PredictionClassif$new() PredictionClassif$set_threshold() PredictionClassif$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionClassif.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Prediction Object for Classification — PredictionClassif","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionClassif.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction Object for Classification — PredictionClassif","text":"","code":"PredictionClassif$new(   task = NULL,   row_ids = task$row_ids,   truth = task$truth(),   response = NULL,   prob = NULL,   weights = NULL,   check = TRUE )"},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionClassif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction Object for Classification — PredictionClassif","text":"task (TaskClassif) Task, used extract defaults row_ids truth. row_ids (integer()) Row ids predicted observations, .e. row ids test set. truth (factor()) True (observed) labels. See note manual construction. response (character() | factor()) Vector predicted class labels. One element observation test set. Character vectors automatically converted factors. See note manual construction. prob (matrix()) Numeric matrix posterior class probabilities one column class one row observation test set. Columns must named class labels, row names automatically removed. prob provided, response , class labels calculated probabilities using max.col() ties.method set \"random\". weights (numeric()) Vector measure weights observation. constructed Task's weights_measure column. check (logical(1)) TRUE, performs argument checks predict type conversions.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionClassif.html","id":"method-set-threshold-","dir":"Reference","previous_headings":"","what":"Method set_threshold()","title":"Prediction Object for Classification — PredictionClassif","text":"Sets prediction response based provided threshold. See section thresholding information.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionClassif.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction Object for Classification — PredictionClassif","text":"","code":"PredictionClassif$set_threshold(threshold, ties_method = \"random\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionClassif.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction Object for Classification — PredictionClassif","text":"threshold (numeric()). ties_method (character(1)) One \"random\", \"first\" \"last\" (c.f. max.col()) determine deal tied probabilities.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionClassif.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Prediction Object for Classification — PredictionClassif","text":"Returns object , modified reference. need explicitly $clone() object beforehand want keeps object previous state.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionClassif.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Prediction Object for Classification — PredictionClassif","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionClassif.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction Object for Classification — PredictionClassif","text":"","code":"PredictionClassif$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionClassif.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction Object for Classification — PredictionClassif","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionClassif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prediction Object for Classification — PredictionClassif","text":"","code":"task = tsk(\"penguins\") learner = lrn(\"classif.rpart\", predict_type = \"prob\") learner$train(task) p = learner$predict(task) p$predict_types #> [1] \"response\" \"prob\"     head(as.data.table(p)) #>    row_ids  truth response prob.Adelie prob.Chinstrap prob.Gentoo #>      <int> <fctr>   <fctr>       <num>          <num>       <num> #> 1:       1 Adelie   Adelie   0.9668874     0.03311258           0 #> 2:       2 Adelie   Adelie   0.9668874     0.03311258           0 #> 3:       3 Adelie   Adelie   0.9668874     0.03311258           0 #> 4:       4 Adelie   Adelie   0.9668874     0.03311258           0 #> 5:       5 Adelie   Adelie   0.9668874     0.03311258           0 #> 6:       6 Adelie   Adelie   0.9668874     0.03311258           0  # confusion matrix p$confusion #>            truth #> response    Adelie Chinstrap Gentoo #>   Adelie       146         5      0 #>   Chinstrap      6        63      1 #>   Gentoo         0         0    123  # change threshold th = c(0.05, 0.9, 0.05) names(th) = task$class_names  # new predictions p$set_threshold(th)$response #>   [1] Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie #>  [11] Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie #>  [21] Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie #>  [31] Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie #>  [41] Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie #>  [51] Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie #>  [61] Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie #>  [71] Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie #>  [81] Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie #>  [91] Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie #> [101] Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie #> [111] Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie #> [121] Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie #> [131] Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie #> [141] Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie #> [151] Adelie Adelie Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo #> [161] Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo #> [171] Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo #> [181] Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo #> [191] Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo #> [201] Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo #> [211] Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo #> [221] Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo #> [231] Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo #> [241] Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo #> [251] Adelie Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo #> [261] Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo #> [271] Gentoo Gentoo Gentoo Gentoo Gentoo Gentoo Adelie Adelie Adelie Adelie #> [281] Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie #> [291] Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie #> [301] Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie #> [311] Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie #> [321] Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie #> [331] Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie Adelie #> [341] Adelie Adelie Adelie Adelie #> Levels: Adelie Chinstrap Gentoo p$score(measures = msr(\"classif.ce\")) #> classif.ce  #>  0.2005814"},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionData.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to PredictionData — PredictionData","title":"Convert to PredictionData — PredictionData","text":"Objects type PredictionData serve intermediate representation objects type Prediction. internal data structure, implemented optimize runtime solve issues emerging serializing R6 objects. End-users typically need worry details, package developers advised continue reading technical information. Unlike mlr3 objects, PredictionData relies S3 class system. following operations must supported extend mlr3 new task types: as_prediction_data() converts objects class PredictionData, e.g. objects type Prediction. as_prediction() converts objects class Prediction, e.g. objects type PredictionData. check_prediction_data() called return value predict method Learner perform assertions type conversions. Returns update object class PredictionData. is_missing_prediction_data() used fallback learner (see Learner) impute missing predictions. Returns vector row ids need imputation.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to PredictionData — PredictionData","text":"","code":"create_empty_prediction_data(task, learner)  check_prediction_data(pdata, ...)  is_missing_prediction_data(pdata, ...)  filter_prediction_data(pdata, row_ids, ...)  # S3 method for class 'PredictionDataClassif' check_prediction_data(pdata, train_task, ...)  # S3 method for class 'PredictionDataClassif' is_missing_prediction_data(pdata, ...)  # S3 method for class 'PredictionDataClassif' c(..., keep_duplicates = TRUE)  # S3 method for class 'PredictionDataRegr' check_prediction_data(pdata, ...)  # S3 method for class 'PredictionDataRegr' is_missing_prediction_data(pdata, ...)  # S3 method for class 'PredictionDataRegr' c(..., keep_duplicates = TRUE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to PredictionData — PredictionData","text":"task (Task). learner (Learner). pdata (PredictionData) Named list inheriting \"PredictionData\". ... (one PredictionData objects). row_ids integer() Row indices. train_task (Task) Task used training learner. keep_duplicates (logical(1)) TRUE, combined PredictionData object filtered duplicated row ids (starting last).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionRegr.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction Object for Regression — PredictionRegr","title":"Prediction Object for Regression — PredictionRegr","text":"object wraps predictions returned learner class LearnerRegr, .e. predicted response standard error. Additionally, probability distributions implemented package distr6 supported.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionRegr.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Prediction Object for Regression — PredictionRegr","text":"mlr3::Prediction -> PredictionRegr","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionRegr.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Prediction Object for Regression — PredictionRegr","text":"response (numeric()) Access stored predicted response. se (numeric()) Access stored standard error. quantiles (matrix()) Matrix predicted quantiles. Observations rows, quantile (ascending order) columns. distr (VectorDistribution) Access stored vector distribution. Requires package distr6(repository https://raphaels1.r-universe.dev) .","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionRegr.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Prediction Object for Regression — PredictionRegr","text":"mlr3::Prediction$filter() mlr3::Prediction$format() mlr3::Prediction$help() mlr3::Prediction$obs_loss() mlr3::Prediction$print() mlr3::Prediction$score()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionRegr.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Prediction Object for Regression — PredictionRegr","text":"PredictionRegr$new() PredictionRegr$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionRegr.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Prediction Object for Regression — PredictionRegr","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionRegr.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction Object for Regression — PredictionRegr","text":"","code":"PredictionRegr$new(   task = NULL,   row_ids = task$row_ids,   truth = task$truth(),   response = NULL,   se = NULL,   quantiles = NULL,   distr = NULL,   weights = NULL,   check = TRUE )"},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionRegr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction Object for Regression — PredictionRegr","text":"task (TaskRegr) Task, used extract defaults row_ids truth. row_ids (integer()) Row ids predicted observations, .e. row ids test set. truth (numeric()) True (observed) response. response (numeric()) Vector numeric response values. One element observation test set. se (numeric()) Numeric vector predicted standard errors. One element observation test set. quantiles (matrix()) Numeric matrix predicted quantiles. One row per observation, one column per quantile. distr (VectorDistribution)VectorDistribution package distr6 (repository https://raphaels1.r-universe.dev). individual distribution vector represents random variable 'survival time' individual observation. weights (numeric()) Vector measure weights observation. constructed Task's weights_measure column. check (logical(1)) TRUE, performs argument checks predict type conversions.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionRegr.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Prediction Object for Regression — PredictionRegr","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionRegr.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction Object for Regression — PredictionRegr","text":"","code":"PredictionRegr$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionRegr.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction Object for Regression — PredictionRegr","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/PredictionRegr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prediction Object for Regression — PredictionRegr","text":"","code":"task = tsk(\"california_housing\") learner = lrn(\"regr.featureless\", predict_type = \"se\") p = learner$train(task)$predict(task) p$predict_types #> [1] \"response\" \"se\"       head(as.data.table(p)) #>    row_ids  truth response       se #>      <int>  <num>    <num>    <num> #> 1:       1 452600 206855.8 115395.6 #> 2:       2 358500 206855.8 115395.6 #> 3:       3 352100 206855.8 115395.6 #> 4:       4 341300 206855.8 115395.6 #> 5:       5 342200 206855.8 115395.6 #> 6:       6 269700 206855.8 115395.6"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":null,"dir":"Reference","previous_headings":"","what":"Container for Results of resample() — ResampleResult","title":"Container for Results of resample() — ResampleResult","text":"result container object returned resample(). Note stored objects accessed reference. modify object without cloning first. ResampleResults can visualized via mlr3viz's autoplot() function.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"s-methods","dir":"Reference","previous_headings":"","what":"S3 Methods","title":"Container for Results of resample() — ResampleResult","text":".data.table(rr, reassemble_learners = TRUE, convert_predictions = TRUE, predict_sets = \"test\") ResampleResult -> data.table::data.table() Returns tabular view internal data. c(...) (ResampleResult, ...) -> BenchmarkResult Combines multiple objects convertible BenchmarkResult new BenchmarkResult.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Container for Results of resample() — ResampleResult","text":"task_type (character(1)) Task type objects ResampleResult, e.g. \"classif\" \"regr\". NA empty ResampleResults. uhash (character(1)) Unique hash object. iters (integer(1)) Number resampling iterations stored ResampleResult. task (Task) task resample() operated . learner (Learner) Learner prototype resample() operated . list trained learners, see methods $learners(). resampling (Resampling) Instantiated Resampling object stores splits training test. learners (list Learner) List trained learners, sorted resampling iteration. data_extra (list()) Additional data stored ResampleResult. warnings (data.table::data.table()) table warning messages. Column names \"iteration\" \"msg\". Note can multiple rows per resampling iteration multiple warnings recorded. errors (data.table::data.table()) table error messages. Column names \"iteration\" \"msg\". Note can multiple rows per resampling iteration multiple errors recorded.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Container for Results of resample() — ResampleResult","text":"ResampleResult$new() ResampleResult$format() ResampleResult$print() ResampleResult$help() ResampleResult$prediction() ResampleResult$predictions() ResampleResult$score() ResampleResult$obs_loss() ResampleResult$aggregate() ResampleResult$filter() ResampleResult$discard() ResampleResult$marshal() ResampleResult$unmarshal() ResampleResult$set_threshold() ResampleResult$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Container for Results of resample() — ResampleResult","text":"Creates new instance R6 class. alternative construction method provided as_resample_result().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Results of resample() — ResampleResult","text":"","code":"ResampleResult$new(data = ResultData$new(), view = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Results of resample() — ResampleResult","text":"data (ResultData | data.table()) object type ResultData, either extracted another ResampleResult, another BenchmarkResult, manually constructed as_result_data(). view (character()) Single uhash ResultData operate . Used internally optimizations.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"Container for Results of resample() — ResampleResult","text":"Helper print outputs.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Results of resample() — ResampleResult","text":"","code":"ResampleResult$format(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Results of resample() — ResampleResult","text":"... (ignored).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Container for Results of resample() — ResampleResult","text":"Printer.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Results of resample() — ResampleResult","text":"","code":"ResampleResult$print(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Results of resample() — ResampleResult","text":"... (ignored).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"method-help-","dir":"Reference","previous_headings":"","what":"Method help()","title":"Container for Results of resample() — ResampleResult","text":"Opens corresponding help page referenced field $man.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Results of resample() — ResampleResult","text":"","code":"ResampleResult$help()"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"method-prediction-","dir":"Reference","previous_headings":"","what":"Method prediction()","title":"Container for Results of resample() — ResampleResult","text":"Combined Prediction individual resampling iterations, provided predict sets. Note , per default, performance measures operate object directly, instead prediction objects resampling iterations separately, combine performance scores aggregate function respective Measure (macro averaging). calculate performance prediction object directly, called micro averaging.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Results of resample() — ResampleResult","text":"","code":"ResampleResult$prediction(predict_sets = \"test\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Results of resample() — ResampleResult","text":"predict_sets (character()) Subset {\"train\", \"test\"}.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Container for Results of resample() — ResampleResult","text":"Prediction empty list() predictions available.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Container for Results of resample() — ResampleResult","text":"","code":"rr$prediction()"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"method-predictions-","dir":"Reference","previous_headings":"","what":"Method predictions()","title":"Container for Results of resample() — ResampleResult","text":"List prediction objects, sorted resampling iteration. multiple sets given, combined single one iteration. evaluate performance returned prediction objects average , called macro averaging. micro averaging, operate combined prediction object returned $prediction().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Results of resample() — ResampleResult","text":"","code":"ResampleResult$predictions(predict_sets = \"test\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Results of resample() — ResampleResult","text":"predict_sets (character()) Subset {\"train\", \"test\", \"internal_valid\"}.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Container for Results of resample() — ResampleResult","text":"List Prediction objects, one per element predict_sets. list empty list()s predictions available.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Container for Results of resample() — ResampleResult","text":"","code":"rr$predictions()"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"method-score-","dir":"Reference","previous_headings":"","what":"Method score()","title":"Container for Results of resample() — ResampleResult","text":"Returns table one row resampling iteration, including involved objects: Task, Learner, Resampling, iteration number (integer(1)), (enabled) one Prediction predict set Learner. Additionally, column individual (per resampling iteration) performance added Measure measures, named id respective measure id. measures NULL, measures defaults return value default_measures().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Results of resample() — ResampleResult","text":"","code":"ResampleResult$score(   measures = NULL,   ids = TRUE,   conditions = FALSE,   predictions = TRUE )"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Results of resample() — ResampleResult","text":"measures (Measure | list Measure) Measure(s) calculate. ids (logical(1)) ids TRUE, extra columns ids objects (\"task_id\", \"learner_id\", \"resampling_id\") added returned table. allow subset conveniently. conditions (logical(1)) Adds condition messages (\"warnings\", \"errors\") extra list columns character vectors returned table predictions (logical(1)) Additionally return prediction objects, one column predict_set learner. Columns named \"prediction_train\", \"prediction_test\" \"prediction_internal_valid\", present.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Container for Results of resample() — ResampleResult","text":"data.table::data.table().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"Container for Results of resample() — ResampleResult","text":"","code":"rr$score(msr(\"classif.acc\"))"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"method-obs-loss-","dir":"Reference","previous_headings":"","what":"Method obs_loss()","title":"Container for Results of resample() — ResampleResult","text":"Calculates observation-wise loss via loss function set Measure's field obs_loss. Returns data.table() columns matching Prediction object plus one additional numeric column measure, named respective measure id. observation-wise loss function measure, column filled NA values. Note measures RMSE, $obs_loss, require additional transformation aggregation, example taking square-root.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Results of resample() — ResampleResult","text":"","code":"ResampleResult$obs_loss(measures = NULL, predict_sets = \"test\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Results of resample() — ResampleResult","text":"measures (Measure | list Measure) Measure(s) calculate. predict_sets (character()) predict sets.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"Container for Results of resample() — ResampleResult","text":"","code":"rr$obs_loss(msr(\"classif.acc\"))"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"method-aggregate-","dir":"Reference","previous_headings":"","what":"Method aggregate()","title":"Container for Results of resample() — ResampleResult","text":"Calculates aggregates performance values provided measures, according respective aggregation function Measure. measures NULL, measures defaults return value default_measures().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Results of resample() — ResampleResult","text":"","code":"ResampleResult$aggregate(measures = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Results of resample() — ResampleResult","text":"measures (Measure | list Measure) Measure(s) calculate.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Container for Results of resample() — ResampleResult","text":"Named numeric().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"Container for Results of resample() — ResampleResult","text":"","code":"rr$aggregate(msr(\"classif.acc\"))"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"method-filter-","dir":"Reference","previous_headings":"","what":"Method filter()","title":"Container for Results of resample() — ResampleResult","text":"Subsets ResampleResult, reducing keep iterations specified iters.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Results of resample() — ResampleResult","text":"","code":"ResampleResult$filter(iters)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Results of resample() — ResampleResult","text":"iters (integer()) Resampling iterations keep.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Container for Results of resample() — ResampleResult","text":"Returns object , modified reference. need explicitly $clone() object beforehand want keeps object previous state.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"examples-5","dir":"Reference","previous_headings":"","what":"Examples","title":"Container for Results of resample() — ResampleResult","text":"","code":"rr$filter(1L)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"method-discard-","dir":"Reference","previous_headings":"","what":"Method discard()","title":"Container for Results of resample() — ResampleResult","text":"Shrinks ResampleResult discarding parts internally stored data. Note certain operations might stop work, e.g. extracting importance values learners calculating measures requiring task's data.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Results of resample() — ResampleResult","text":"","code":"ResampleResult$discard(backends = FALSE, models = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Results of resample() — ResampleResult","text":"backends (logical(1)) TRUE, DataBackend removed stored Tasks. models (logical(1)) TRUE, stored model removed Learners.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Container for Results of resample() — ResampleResult","text":"Returns object , modified reference. need explicitly $clone() object beforehand want keeps object previous state.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"method-marshal-","dir":"Reference","previous_headings":"","what":"Method marshal()","title":"Container for Results of resample() — ResampleResult","text":"Marshals stored models.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Results of resample() — ResampleResult","text":"","code":"ResampleResult$marshal(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Results of resample() — ResampleResult","text":"... () Additional arguments passed marshal_model().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"examples-6","dir":"Reference","previous_headings":"","what":"Examples","title":"Container for Results of resample() — ResampleResult","text":"","code":"rr$marshal()"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"method-unmarshal-","dir":"Reference","previous_headings":"","what":"Method unmarshal()","title":"Container for Results of resample() — ResampleResult","text":"Unmarshals stored models.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Results of resample() — ResampleResult","text":"","code":"ResampleResult$unmarshal(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Results of resample() — ResampleResult","text":"... () Additional arguments passed unmarshal_model().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"examples-7","dir":"Reference","previous_headings":"","what":"Examples","title":"Container for Results of resample() — ResampleResult","text":"","code":"rr$unmarshal()"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"method-set-threshold-","dir":"Reference","previous_headings":"","what":"Method set_threshold()","title":"Container for Results of resample() — ResampleResult","text":"Sets threshold response prediction classification learners, given output probability prediction binary classification task. modifies object -place.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Results of resample() — ResampleResult","text":"","code":"ResampleResult$set_threshold(threshold, ties_method = \"random\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Results of resample() — ResampleResult","text":"threshold (numeric(1)) Threshold value. ties_method (character(1)) Method handle ties probabilities selecting class label. Must one \"random\", \"first\" \"last\" (corresponding options max.col()). \"random\": Randomly select one tied class labels (default). \"first\": Select first class label among tied values. \"last\": Select last class label among tied values.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"examples-8","dir":"Reference","previous_headings":"","what":"Examples","title":"Container for Results of resample() — ResampleResult","text":"","code":"learner = lrn(\"classif.rpart\", predict_type = \"prob\") rr = resample(tsk(\"sonar\"), learner, rsmp(\"cv\", folds = 3)) rr$set_threshold(0.6)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Container for Results of resample() — ResampleResult","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for Results of resample() — ResampleResult","text":"","code":"ResampleResult$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for Results of resample() — ResampleResult","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResampleResult.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Container for Results of resample() — ResampleResult","text":"","code":"task = tsk(\"penguins\") learner = lrn(\"classif.rpart\") resampling = rsmp(\"cv\", folds = 3) rr = resample(task, learner, resampling) print(rr) #>  #> ── <ResampleResult> with 3 resampling iterations ─────────────────────────────── #>   task_id    learner_id resampling_id iteration     prediction_test warnings #>  penguins classif.rpart            cv         1 <PredictionClassif>        0 #>  penguins classif.rpart            cv         2 <PredictionClassif>        0 #>  penguins classif.rpart            cv         3 <PredictionClassif>        0 #>  errors #>       0 #>       0 #>       0  # combined predictions and predictions for each fold separately rr$prediction() #>  #> ── <PredictionClassif> for 344 observations: ─────────────────────────────────── #>  row_ids     truth  response #>        3    Adelie    Adelie #>        5    Adelie    Adelie #>        7    Adelie    Adelie #>      ---       ---       --- #>      341 Chinstrap    Adelie #>      343 Chinstrap    Gentoo #>      344 Chinstrap Chinstrap rr$predictions() #> [[1]] #>  #> ── <PredictionClassif> for 115 observations: ─────────────────────────────────── #>  row_ids     truth  response #>        3    Adelie    Adelie #>        5    Adelie    Adelie #>        7    Adelie    Adelie #>      ---       ---       --- #>      338 Chinstrap Chinstrap #>      339 Chinstrap Chinstrap #>      342 Chinstrap Chinstrap #>  #> [[2]] #>  #> ── <PredictionClassif> for 115 observations: ─────────────────────────────────── #>  row_ids     truth  response #>        1    Adelie    Adelie #>        2    Adelie    Adelie #>        4    Adelie    Adelie #>      ---       ---       --- #>      319 Chinstrap Chinstrap #>      333 Chinstrap Chinstrap #>      334 Chinstrap Chinstrap #>  #> [[3]] #>  #> ── <PredictionClassif> for 114 observations: ─────────────────────────────────── #>  row_ids     truth  response #>        6    Adelie    Adelie #>        8    Adelie    Adelie #>       12    Adelie    Adelie #>      ---       ---       --- #>      341 Chinstrap    Adelie #>      343 Chinstrap    Gentoo #>      344 Chinstrap Chinstrap #>   # folds scored separately, then aggregated (macro) rr$aggregate(msr(\"classif.acc\")) #> classif.acc  #>   0.9448004   # predictions first combined, then scored (micro) rr$prediction()$score(msr(\"classif.acc\")) #> classif.acc  #>   0.9447674   # check for warnings and errors rr$warnings #> Empty data.table (0 rows and 2 cols): iteration,msg rr$errors #> Empty data.table (0 rows and 2 cols): iteration,msg  ## ------------------------------------------------ ## Method `ResampleResult$prediction` ## ------------------------------------------------  rr$prediction() #>  #> ── <PredictionClassif> for 344 observations: ─────────────────────────────────── #>  row_ids     truth  response #>        3    Adelie    Adelie #>        5    Adelie    Adelie #>        7    Adelie    Adelie #>      ---       ---       --- #>      341 Chinstrap    Adelie #>      343 Chinstrap    Gentoo #>      344 Chinstrap Chinstrap  ## ------------------------------------------------ ## Method `ResampleResult$predictions` ## ------------------------------------------------  rr$predictions() #> [[1]] #>  #> ── <PredictionClassif> for 115 observations: ─────────────────────────────────── #>  row_ids     truth  response #>        3    Adelie    Adelie #>        5    Adelie    Adelie #>        7    Adelie    Adelie #>      ---       ---       --- #>      338 Chinstrap Chinstrap #>      339 Chinstrap Chinstrap #>      342 Chinstrap Chinstrap #>  #> [[2]] #>  #> ── <PredictionClassif> for 115 observations: ─────────────────────────────────── #>  row_ids     truth  response #>        1    Adelie    Adelie #>        2    Adelie    Adelie #>        4    Adelie    Adelie #>      ---       ---       --- #>      319 Chinstrap Chinstrap #>      333 Chinstrap Chinstrap #>      334 Chinstrap Chinstrap #>  #> [[3]] #>  #> ── <PredictionClassif> for 114 observations: ─────────────────────────────────── #>  row_ids     truth  response #>        6    Adelie    Adelie #>        8    Adelie    Adelie #>       12    Adelie    Adelie #>      ---       ---       --- #>      341 Chinstrap    Adelie #>      343 Chinstrap    Gentoo #>      344 Chinstrap Chinstrap #>   ## ------------------------------------------------ ## Method `ResampleResult$score` ## ------------------------------------------------  rr$score(msr(\"classif.acc\")) #>     task_id    learner_id resampling_id iteration classif.acc #>      <char>        <char>        <char>     <int>       <num> #> 1: penguins classif.rpart            cv         1   0.9304348 #> 2: penguins classif.rpart            cv         2   0.9478261 #> 3: penguins classif.rpart            cv         3   0.9561404 #> Hidden columns: task, learner, resampling, prediction_test  ## ------------------------------------------------ ## Method `ResampleResult$obs_loss` ## ------------------------------------------------  rr$obs_loss(msr(\"classif.acc\")) #>      iteration row_ids     truth  response classif.acc #>          <int>   <int>    <fctr>    <fctr>       <int> #>   1:         1       3    Adelie    Adelie           1 #>   2:         1       5    Adelie    Adelie           1 #>   3:         1       7    Adelie    Adelie           1 #>   4:         1       9    Adelie    Adelie           1 #>   5:         1      10    Adelie    Adelie           1 #>  ---                                                   #> 340:         3     336 Chinstrap Chinstrap           1 #> 341:         3     340 Chinstrap    Gentoo           0 #> 342:         3     341 Chinstrap    Adelie           0 #> 343:         3     343 Chinstrap    Gentoo           0 #> 344:         3     344 Chinstrap Chinstrap           1  ## ------------------------------------------------ ## Method `ResampleResult$aggregate` ## ------------------------------------------------  rr$aggregate(msr(\"classif.acc\")) #> classif.acc  #>   0.9448004   ## ------------------------------------------------ ## Method `ResampleResult$filter` ## ------------------------------------------------  rr$filter(1L)  ## ------------------------------------------------ ## Method `ResampleResult$marshal` ## ------------------------------------------------  rr$marshal()  ## ------------------------------------------------ ## Method `ResampleResult$unmarshal` ## ------------------------------------------------  rr$unmarshal()  ## ------------------------------------------------ ## Method `ResampleResult$set_threshold` ## ------------------------------------------------  learner = lrn(\"classif.rpart\", predict_type = \"prob\") rr = resample(tsk(\"sonar\"), learner, rsmp(\"cv\", folds = 3)) rr$set_threshold(0.6) #> Key: <uhash, iteration> #>                                   uhash iteration      learner_state prediction #>                                  <char>     <int>             <list>     <list> #> 1: 9e7a2d58-d4a7-498b-b76b-6224239cf1e4         1 <learner_state[8]>  <list[1]> #> 2: 9e7a2d58-d4a7-498b-b76b-6224239cf1e4         2 <learner_state[8]>  <list[1]> #> 3: 9e7a2d58-d4a7-498b-b76b-6224239cf1e4         3 <learner_state[8]>  <list[1]> #>        learner_hash        task_hash    learner_phash  resampling_hash #>              <char>           <char>           <char>           <char> #> 1: 667ca7804cbe810f f9791e97f9813150 a2121f0bf1b9c2f6 de5522e75f5e989c #> 2: 667ca7804cbe810f f9791e97f9813150 a2121f0bf1b9c2f6 de5522e75f5e989c #> 3: 667ca7804cbe810f f9791e97f9813150 a2121f0bf1b9c2f6 de5522e75f5e989c"},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Resampling Class — Resampling","title":"Resampling Class — Resampling","text":"abstract base class resampling objects like ResamplingCV ResamplingBootstrap. objects class define task partitioned resampling (e.g., resample() benchmark()), using set hyperparameters number folds cross-validation. Resampling objects can instantiated Task, applies strategy task manifests fixed partition row_ids Task. Predefined resamplings stored dictionary mlr_resamplings, e.g. cv bootstrap.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"stochasticity-amp-reproducibility","dir":"Reference","previous_headings":"","what":"Stochasticity & Reproducibility","title":"Resampling Class — Resampling","text":"Resampling class defines abstract resampling strategy. Concrete data splits obtained calling $instantiate() Task. ensure repdocubility results, need call set.seed . Note benchmark_grid internally instantiate resamplings, need set seed calling .","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"stratification","dir":"Reference","previous_headings":"","what":"Stratification","title":"Resampling Class — Resampling","text":"derived classes support stratified sampling. stratification variables assumed discrete must stored Task column role \"stratum\". case multiple stratification variables, combination values stratification variables forms strata. First, observations divided subpopulations based one multiple stratification variables (assumed discrete), c.f. task$strata. Second, sampling performed k subpopulations separately. subgroup divided iter training sets iter test sets derived Resampling. sets merged based iteration number: training sets subpopulations iteration 1 combined, training sets iteration 2, . done test sets. merged sets can accessed via $train_set() $test_set(), respectively. Note procedure can lead set sizes slightly different without stratification.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"grouping-blocking","dir":"Reference","previous_headings":"","what":"Grouping / Blocking","title":"Resampling Class — Resampling","text":"derived classes support grouping observations. grouping variable assumed discrete must stored Task column role \"group\". Observations group treated like \"block\" observations must kept together. observations either go together training set together test set. sampling performed derived Resampling grouping variable. Next, grouping information replaced respective row ids generate training test sets. sets can accessed via $train_set() $test_set(), respectively.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"inheriting","dir":"Reference","previous_headings":"","what":"Inheriting","title":"Resampling Class — Resampling","text":"possible overwrite private$.get_instance() full control, private$.sample() one wants use pre-defined mechanism stratification grouping.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Resampling Class — Resampling","text":"label (character(1)) Label object. Can used tables, plot text output instead ID. param_set (paradox::ParamSet) Set hyperparameters. instance () instantiate(), instance stored slot arbitrary format. Note grouping variable present Task, Resampling may operate group ids internally instead row ids (may lead confusion). advised work directly instance, instead use getters $train_set() $test_set(). task_hash (character(1)) hash Task passed r$instantiate(). task_row_hash (character(1)) hash row ids Task passed r$instantiate(). task_nrow (integer(1)) number observations Task passed r$instantiate(). duplicated_ids (logical(1)) TRUE, duplicated rows can occur within single training set within single test set. E.g., TRUE Bootstrap, FALSE cross-validation. used internally. man (character(1)) String format [pkg]::[topic] pointing manual page object. Defaults NA, can set child classes.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Resampling Class — Resampling","text":"id (character(1)) Identifier object. Used tables, plot text output. is_instantiated (logical(1)) TRUE resampling instantiated. hash (character(1)) Hash (unique identifier) object. object instantiated yet, NA_character_ returned. hash calculated based class name, id, parameter set, instance.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Resampling Class — Resampling","text":"Resampling$new() Resampling$format() Resampling$print() Resampling$help() Resampling$instantiate() Resampling$train_set() Resampling$test_set() Resampling$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Resampling Class — Resampling","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resampling Class — Resampling","text":"","code":"Resampling$new(   id,   param_set = ps(),   duplicated_ids = FALSE,   label = NA_character_,   man = NA_character_ )"},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resampling Class — Resampling","text":"id (character(1)) Identifier new instance. param_set (paradox::ParamSet) Set hyperparameters. duplicated_ids (logical(1)) Set TRUE resampling strategy may duplicated row ids single training set test set. Note object typically constructed via derived classes, e.g. ResamplingCV ResamplingHoldout. label (character(1)) Label new instance. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"Resampling Class — Resampling","text":"Helper print outputs.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Resampling Class — Resampling","text":"","code":"Resampling$format(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resampling Class — Resampling","text":"... (ignored).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Resampling Class — Resampling","text":"Printer.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Resampling Class — Resampling","text":"","code":"Resampling$print(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resampling Class — Resampling","text":"... (ignored).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"method-help-","dir":"Reference","previous_headings":"","what":"Method help()","title":"Resampling Class — Resampling","text":"Opens corresponding help page referenced field $man.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Resampling Class — Resampling","text":"","code":"Resampling$help()"},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"method-instantiate-","dir":"Reference","previous_headings":"","what":"Method instantiate()","title":"Resampling Class — Resampling","text":"Materializes fixed training test splits given task stores r$instance arbitrary format.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Resampling Class — Resampling","text":"","code":"Resampling$instantiate(task)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resampling Class — Resampling","text":"task (Task) Task used instantiation.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Resampling Class — Resampling","text":"Returns object , modified reference. need explicitly $clone() object beforehand want keeps object previous state.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resampling Class — Resampling","text":"","code":"task = tsk(\"penguins\") resampling = rsmp(\"holdout\") resampling$instantiate(task)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"method-train-set-","dir":"Reference","previous_headings":"","what":"Method train_set()","title":"Resampling Class — Resampling","text":"Returns row ids -th training set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Resampling Class — Resampling","text":"","code":"Resampling$train_set(i)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resampling Class — Resampling","text":"(integer(1)) Iteration.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Resampling Class — Resampling","text":"(integer()) row ids.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Resampling Class — Resampling","text":"","code":"task = tsk(\"penguins\") resampling = rsmp(\"holdout\")$instantiate(task) resampling$train_set(1)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"method-test-set-","dir":"Reference","previous_headings":"","what":"Method test_set()","title":"Resampling Class — Resampling","text":"Returns row ids -th test set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Resampling Class — Resampling","text":"","code":"Resampling$test_set(i)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resampling Class — Resampling","text":"(integer(1)) Iteration.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Resampling Class — Resampling","text":"(integer()) row ids.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"Resampling Class — Resampling","text":"","code":"task = tsk(\"penguins\") resampling = rsmp(\"holdout\")$instantiate(task) resampling$test_set(1)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Resampling Class — Resampling","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Resampling Class — Resampling","text":"","code":"Resampling$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resampling Class — Resampling","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Resampling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resampling Class — Resampling","text":"","code":"r = rsmp(\"subsampling\")  # Default parametrization r$param_set$values #> $ratio #> [1] 0.6666667 #>  #> $repeats #> [1] 30 #>   # Do only 3 repeats on 10% of the data r$param_set$set_values(ratio = 0.1, repeats = 3) r$param_set$values #> $ratio #> [1] 0.1 #>  #> $repeats #> [1] 3 #>   # Instantiate on penguins task task = tsk(\"penguins\") r$instantiate(task)  # Extract train/test sets train_set = r$train_set(1) print(train_set) #>  [1] 228 166 340  60  17 192 238  59 154  81 241  32 218 327 325 113 157 277  48 #> [20] 334 186 215  11  87 150  92 273  34  97 291   4 246 118  41 intersect(train_set, r$test_set(1)) #> integer(0)  # Another example: 10-fold CV r = rsmp(\"cv\")$instantiate(task) r$train_set(1) #>   [1]   4   7   9  36  37  40  64  79  80  89  95 117 124 137 140 153 192 207 #>  [19] 209 210 232 235 243 246 260 266 268 280 306 309 317 325 335 339 340  22 #>  [37]  25  32  48  50  84  86  98 119 128 130 134 136 156 175 180 193 199 205 #>  [55] 217 224 241 247 256 277 283 287 288 293 297 304 305 334 343 344  11  18 #>  [73]  27  35  41  54  66  73  97  99 105 123 127 132 139 158 168 173 176 194 #>  [91] 201 220 237 240 261 269 271 285 289 295 296 300 308 312 333   3  20  23 #> [109]  28  42  46  51  62  71  94 116 147 152 154 159 161 162 170 174 178 191 #> [127] 206 212 214 216 244 251 267 272 276 294 314 316 319   2   8  14  24  31 #> [145]  45  49  52  53  59  60  74  90  92 106 133 138 142 144 164 181 182 189 #> [163] 200 223 228 238 242 245 275 310 311 327 337   6  30  55  69  81  93 107 #> [181] 112 118 131 143 151 171 179 195 202 204 215 219 221 225 226 227 234 249 #> [199] 257 282 286 292 301 323 329 332 341  12  17  19  43  44  56  65  68  75 #> [217]  78  82  83 109 122 135 146 148 157 163 197 233 236 239 250 263 284 299 #> [235] 302 321 322 330 331 336 338   1  10  13  39  58  70  72  77  88  96 104 #> [253] 129 141 149 165 166 169 183 184 187 196 229 230 231 252 254 255 262 278 #> [271] 281 290 315 318 320  15  29  33  34  47  57  67  85  91 101 102 103 108 #> [289] 110 121 126 167 172 177 186 190 198 208 213 218 248 253 258 273 291 298 #> [307] 307 313 326  # Stratification task = tsk(\"pima\") prop.table(table(task$truth())) # moderately unbalanced #>  #>       pos       neg  #> 0.3489583 0.6510417  task$col_roles$stratum = task$target_names  r = rsmp(\"subsampling\") r$instantiate(task) prop.table(table(task$truth(r$train_set(1)))) # roughly same proportion #>  #>       pos       neg  #> 0.3496094 0.6503906   ## ------------------------------------------------ ## Method `Resampling$instantiate` ## ------------------------------------------------  task = tsk(\"penguins\") resampling = rsmp(\"holdout\") resampling$instantiate(task)  ## ------------------------------------------------ ## Method `Resampling$train_set` ## ------------------------------------------------  task = tsk(\"penguins\") resampling = rsmp(\"holdout\")$instantiate(task) resampling$train_set(1) #>   [1]   2   5   6   7   8   9  10  11  12  13  14  16  17  18  19  20  21  23 #>  [19]  24  25  26  27  30  33  34  35  37  38  39  40  41  42  43  45  46  47 #>  [37]  49  50  52  53  54  55  56  57  58  59  63  64  65  66  67  68  69  70 #>  [55]  71  75  76  78  79  80  82  83  84  85  86  87  88  90  91  92  93  94 #>  [73]  95  96  97  98  99 100 101 102 103 109 111 112 115 116 118 120 123 124 #>  [91] 126 128 129 130 131 132 136 138 140 141 143 144 145 146 147 148 150 152 #> [109] 153 156 157 158 159 160 161 163 164 165 166 167 170 175 176 178 179 180 #> [127] 182 183 184 185 187 188 189 191 192 193 195 196 197 198 200 201 202 203 #> [145] 206 207 208 209 210 211 212 214 216 218 219 221 223 224 227 228 229 230 #> [163] 232 233 237 240 241 244 245 246 247 248 252 255 256 257 260 261 262 264 #> [181] 265 267 268 269 270 271 274 277 278 279 281 282 284 285 286 290 292 293 #> [199] 294 295 296 299 301 302 305 308 309 311 313 314 316 318 319 320 321 325 #> [217] 327 329 330 332 333 335 336 337 338 339 340 341 344  ## ------------------------------------------------ ## Method `Resampling$test_set` ## ------------------------------------------------  task = tsk(\"penguins\") resampling = rsmp(\"holdout\")$instantiate(task) resampling$test_set(1) #>   [1]   2   3   7   8  10  12  13  16  18  22  25  26  31  40  46  47  49  50 #>  [19]  57  58  60  66  67  70  71  72  74  76  79  83  85  86  88  90  93  94 #>  [37]  95  99 104 106 109 110 111 112 116 121 122 133 146 149 151 155 157 158 #>  [55] 159 160 162 167 170 171 172 174 177 178 179 181 183 186 187 189 202 207 #>  [73] 210 213 214 217 218 221 224 225 226 231 237 246 251 252 255 258 259 263 #>  [91] 265 269 274 285 291 292 293 297 299 304 305 308 311 316 318 319 321 323 #> [109] 329 333 334 337 339 340 344"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":null,"dir":"Reference","previous_headings":"","what":"ResultData — ResultData","title":"ResultData — ResultData","text":"Internal object store results list data.tables, arranged star schema. advised directly work data structure may changed future without warnings. main motivation data structure necessity avoid storing duplicated R6 objects. usually problem single R session, serialization via serialize() (used save()/saveRDS() parallelization) leads objects unreasonable memory requirements.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ResultData — ResultData","text":"data (list()) List data.table::data.table(), arranged star schema. operate directly list.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"ResultData — ResultData","text":"task_type (character(1)) Returns task type stored objects, e.g. \"classif\" \"regr\". Returns NULL ResultData empty.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ResultData — ResultData","text":"ResultData$new() ResultData$uhashes() ResultData$uhash_table() ResultData$iterations() ResultData$tasks() ResultData$learners() ResultData$learner_states() ResultData$resamplings() ResultData$predictions() ResultData$prediction() ResultData$data_extra() ResultData$combine() ResultData$sweep() ResultData$marshal() ResultData$unmarshal() ResultData$discard() ResultData$as_data_table() ResultData$logs() ResultData$set_threshold() ResultData$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"ResultData — ResultData","text":"Creates new instance R6 class. alternative construction method provided as_result_data().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultData — ResultData","text":"","code":"ResultData$new(data = NULL, data_extra = NULL, store_backends = TRUE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ResultData — ResultData","text":"data (data.table::data.table()) | NULL) initialize object , use as_result_data() instead. data_extra (list()) Additional data store. can used store additional information iteration. store_backends (logical(1)) set FALSE, backends Tasks provided data removed.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"method-uhashes-","dir":"Reference","previous_headings":"","what":"Method uhashes()","title":"ResultData — ResultData","text":"Returns unique hashes (uhash values) included ResampleResults.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultData — ResultData","text":"","code":"ResultData$uhashes(view = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"ResultData — ResultData","text":"view character(1) Single uhash restrict results . view character(1) Single uhash restrict results .","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"ResultData — ResultData","text":"character().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"method-uhash-table-","dir":"Reference","previous_headings":"","what":"Method uhash_table()","title":"ResultData — ResultData","text":"Returns data.table columns uhash, learner_id, task_id resampling_id given view. uhash uniquely identifies individual ResampleResult.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultData — ResultData","text":"","code":"ResultData$uhash_table(view = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"ResultData — ResultData","text":"view character(1) Single uhash restrict results . view character(1) Single uhash restrict results .","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"ResultData — ResultData","text":"data.table()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"method-iterations-","dir":"Reference","previous_headings":"","what":"Method iterations()","title":"ResultData — ResultData","text":"Returns number recorded iterations / experiments.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultData — ResultData","text":"","code":"ResultData$iterations(view = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"ResultData — ResultData","text":"view character(1) Single uhash restrict results . view character(1) Single uhash restrict results .","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"ResultData — ResultData","text":"integer(1).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"method-tasks-","dir":"Reference","previous_headings":"","what":"Method tasks()","title":"ResultData — ResultData","text":"Returns table included Tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultData — ResultData","text":"","code":"ResultData$tasks(view = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"ResultData — ResultData","text":"view character(1) Single uhash restrict results . view character(1) Single uhash restrict results .","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"ResultData — ResultData","text":"data.table() columns \"task_hash\" (character()) \"task\" (Task).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"method-learners-","dir":"Reference","previous_headings":"","what":"Method learners()","title":"ResultData — ResultData","text":"Returns table included Learners.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultData — ResultData","text":"","code":"ResultData$learners(view = NULL, states = TRUE, reassemble = TRUE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"ResultData — ResultData","text":"view character(1) Single uhash restrict results . view character(1) Single uhash restrict results . states (logical(1)) TRUE, returns learner iteration/experiment ResultData object. FALSE, returns exemplary learner (without state) ResampleResult. reassemble (logical(1)) Reassemble learners, .e. re-set state hyperparameters stored separately returning learners.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"ResultData — ResultData","text":"data.table() columns \"learner_hash\" (character()) \"learner\" (Learner).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"method-learner-states-","dir":"Reference","previous_headings":"","what":"Method learner_states()","title":"ResultData — ResultData","text":"Returns list states included Learners without reassembling learners. @return list list()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultData — ResultData","text":"","code":"ResultData$learner_states(view = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"ResultData — ResultData","text":"view character(1) Single uhash restrict results . view character(1) Single uhash restrict results .","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"method-resamplings-","dir":"Reference","previous_headings":"","what":"Method resamplings()","title":"ResultData — ResultData","text":"Returns table included Resamplings.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultData — ResultData","text":"","code":"ResultData$resamplings(view = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"ResultData — ResultData","text":"view character(1) Single uhash restrict results . view character(1) Single uhash restrict results .","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"ResultData — ResultData","text":"data.table() columns \"resampling_hash\" (character()) \"resampling\" (Resampling).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"method-predictions-","dir":"Reference","previous_headings":"","what":"Method predictions()","title":"ResultData — ResultData","text":"Returns list Prediction objects.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultData — ResultData","text":"","code":"ResultData$predictions(view = NULL, predict_sets = \"test\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"ResultData — ResultData","text":"view character(1) Single uhash restrict results . view character(1) Single uhash restrict results . predict_sets (character()) Prediction sets operate , used aggregate() extract matching predict_sets ResampleResult. Multiple predict sets calculated respective Learner resample()/benchmark(). Must non-empty subset {\"train\", \"test\", \"internal_valid\"}. multiple sets provided, first combined single prediction object. Default \"test\". predict_sets (character()) Prediction sets operate , used aggregate() extract matching predict_sets ResampleResult. Multiple predict sets calculated respective Learner resample()/benchmark(). Must non-empty subset {\"train\", \"test\", \"internal_valid\"}. multiple sets provided, first combined single prediction object. Default \"test\". predict_sets (character()) Prediction sets operate , used aggregate() extract matching predict_sets ResampleResult. Multiple predict sets calculated respective Learner resample()/benchmark(). Must non-empty subset {\"train\", \"test\", \"internal_valid\"}. multiple sets provided, first combined single prediction object. Default \"test\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"ResultData — ResultData","text":"list() Prediction.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"method-prediction-","dir":"Reference","previous_headings":"","what":"Method prediction()","title":"ResultData — ResultData","text":"Returns combined Prediction objects.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultData — ResultData","text":"","code":"ResultData$prediction(view = NULL, predict_sets = \"test\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"ResultData — ResultData","text":"view character(1) Single uhash restrict results . view character(1) Single uhash restrict results . predict_sets (character()) Prediction sets operate , used aggregate() extract matching predict_sets ResampleResult. Multiple predict sets calculated respective Learner resample()/benchmark(). Must non-empty subset {\"train\", \"test\", \"internal_valid\"}. multiple sets provided, first combined single prediction object. Default \"test\". predict_sets (character()) Prediction sets operate , used aggregate() extract matching predict_sets ResampleResult. Multiple predict sets calculated respective Learner resample()/benchmark(). Must non-empty subset {\"train\", \"test\", \"internal_valid\"}. multiple sets provided, first combined single prediction object. Default \"test\". predict_sets (character()) Prediction sets operate , used aggregate() extract matching predict_sets ResampleResult. Multiple predict sets calculated respective Learner resample()/benchmark(). Must non-empty subset {\"train\", \"test\", \"internal_valid\"}. multiple sets provided, first combined single prediction object. Default \"test\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"ResultData — ResultData","text":"Prediction.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"method-data-extra-","dir":"Reference","previous_headings":"","what":"Method data_extra()","title":"ResultData — ResultData","text":"Returns additional data stored.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultData — ResultData","text":"","code":"ResultData$data_extra(view = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"ResultData — ResultData","text":"view character(1) Single uhash restrict results . view character(1) Single uhash restrict results .","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"ResultData — ResultData","text":"data.table::data.table().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"method-combine-","dir":"Reference","previous_headings":"","what":"Method combine()","title":"ResultData — ResultData","text":"Combines multiple ResultData objects, modifying self -place.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultData — ResultData","text":"","code":"ResultData$combine(rdata)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"ResultData — ResultData","text":"rdata (ResultData).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"ResultData — ResultData","text":"self (invisibly).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"method-sweep-","dir":"Reference","previous_headings":"","what":"Method sweep()","title":"ResultData — ResultData","text":"Updates ResultData object, removing rows tables referenced fact table anymore. E.g., can called filtering/subsetting fact table.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultData — ResultData","text":"","code":"ResultData$sweep()"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"ResultData — ResultData","text":"Modified self (invisibly).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"method-marshal-","dir":"Reference","previous_headings":"","what":"Method marshal()","title":"ResultData — ResultData","text":"Marshals stored learner models. nothing models already marshaled.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultData — ResultData","text":"","code":"ResultData$marshal(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"ResultData — ResultData","text":"... () Additional arguments passed marshal_model().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"method-unmarshal-","dir":"Reference","previous_headings":"","what":"Method unmarshal()","title":"ResultData — ResultData","text":"Unmarshals stored learner models. nothing models marshaled.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultData — ResultData","text":"","code":"ResultData$unmarshal(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"ResultData — ResultData","text":"... () Additional arguments passed unmarshal_model().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"method-discard-","dir":"Reference","previous_headings":"","what":"Method discard()","title":"ResultData — ResultData","text":"Shrinks object discarding parts stored data.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultData — ResultData","text":"","code":"ResultData$discard(backends = FALSE, models = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"ResultData — ResultData","text":"backends (logical(1)) TRUE, DataBackend removed stored Tasks. models (logical(1)) TRUE, stored model removed Learners.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"ResultData — ResultData","text":"Modified self (invisibly).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"method-as-data-table-","dir":"Reference","previous_headings":"","what":"Method as_data_table()","title":"ResultData — ResultData","text":"Combines internal tables single flat data.table().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultData — ResultData","text":"","code":"ResultData$as_data_table(   view = NULL,   reassemble_learners = TRUE,   convert_predictions = TRUE,   predict_sets = \"test\" )"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"ResultData — ResultData","text":"view character(1) Single uhash restrict results . view character(1) Single uhash restrict results . reassemble_learners (logical(1)) Reassemble tasks? convert_predictions (logical(1)) Convert PredictionData Prediction? predict_sets (character()) Prediction sets operate , used aggregate() extract matching predict_sets ResampleResult. Multiple predict sets calculated respective Learner resample()/benchmark(). Must non-empty subset {\"train\", \"test\", \"internal_valid\"}. multiple sets provided, first combined single prediction object. Default \"test\". predict_sets (character()) Prediction sets operate , used aggregate() extract matching predict_sets ResampleResult. Multiple predict sets calculated respective Learner resample()/benchmark(). Must non-empty subset {\"train\", \"test\", \"internal_valid\"}. multiple sets provided, first combined single prediction object. Default \"test\". predict_sets (character()) Prediction sets operate , used aggregate() extract matching predict_sets ResampleResult. Multiple predict sets calculated respective Learner resample()/benchmark(). Must non-empty subset {\"train\", \"test\", \"internal_valid\"}. multiple sets provided, first combined single prediction object. Default \"test\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"method-logs-","dir":"Reference","previous_headings":"","what":"Method logs()","title":"ResultData — ResultData","text":"Get table recorded learner logs.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultData — ResultData","text":"","code":"ResultData$logs(view = NULL, condition)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"ResultData — ResultData","text":"view character(1) Single uhash restrict results . view character(1) Single uhash restrict results . condition (character(1)) condition extract. One \"message\", \"warning\" \"error\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"ResultData — ResultData","text":"data.table::data.table().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"method-set-threshold-","dir":"Reference","previous_headings":"","what":"Method set_threshold()","title":"ResultData — ResultData","text":"Sets threshold response prediction classification learners, given output probability prediction.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultData — ResultData","text":"","code":"ResultData$set_threshold(view = NULL, threshold, ties_method = \"random\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"ResultData — ResultData","text":"view character(1) Single uhash restrict results . view character(1) Single uhash restrict results . threshold (numeric(1)) Threshold value. ties_method (character(1)) Method handle ties probabilities selecting class label. Must one \"random\", \"first\" \"last\" (corresponding options max.col()). \"random\": Randomly select one tied class labels (default). \"first\": Select first class label among tied values. \"last\": Select last class label among tied values.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ResultData — ResultData","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"ResultData — ResultData","text":"","code":"ResultData$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"ResultData — ResultData","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/ResultData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ResultData — ResultData","text":"","code":"# table overview print(ResultData$new()$data) #> $fact #> Key: <uhash, iteration> #> Empty data.table (0 rows and 8 cols): uhash,iteration,learner_state,prediction,learner_hash,task_hash... #>  #> $uhashes #> Empty data.table (0 rows and 1 cols): uhash #>  #> $tasks #> Key: <task_hash> #> Empty data.table (0 rows and 2 cols): task_hash,task #>  #> $learners #> Key: <learner_phash> #> Empty data.table (0 rows and 2 cols): learner_phash,learner #>  #> $resamplings #> Key: <resampling_hash> #> Empty data.table (0 rows and 2 cols): resampling_hash,resampling #>  #> $learner_components #> Key: <learner_hash> #> Empty data.table (0 rows and 2 cols): learner_hash,learner_param_vals #>  #> $data_extras #> Key: <uhash, iteration> #> Empty data.table (0 rows and 3 cols): uhash,iteration,data_extra #>"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":null,"dir":"Reference","previous_headings":"","what":"Task Class — Task","title":"Task Class — Task","text":"abstract base class TaskSupervised TaskUnsupervised. TaskClassif TaskRegr inherit TaskSupervised. supervised tasks implemented mlr3proba, unsupervised cluster tasks package mlr3cluster. Tasks serve two purposes: Tasks wrap DataBackend, object transparently interface different data storage types. Tasks store meta-information, role individual columns DataBackend. example, classification task single column must marked target column, others features. Predefined (toy) tasks stored dictionary mlr_tasks, e.g. penguins california_housing. toy tasks can found dictionary loading mlr3data.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"s-methods","dir":"Reference","previous_headings":"","what":"S3 methods","title":"Task Class — Task","text":".data.table(t) Task -> data.table::data.table() Returns complete data data.table::data.table(). head(t) Calls head() task's data. summary(t) Calls summary() task's data.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"task-mutators","dir":"Reference","previous_headings":"","what":"Task mutators","title":"Task Class — Task","text":"following methods change task -place: modification lists $col_roles $row_roles. provides different \"view\" data without altering data . may affects, e.g., $data, $nrow, $ncol, n_features, row_ids, $feature_names. Altering $col_roles may affect, e.g., $data, $ncol, $n_features, $feature_names. Altering $row_roles may affect, e.g., $data, $nrow, $row_ids. Modification column row roles via $set_col_roles() $set_row_roles(), respectively. alternative directly accessing $col_roles $row_roles, side effects. $select() $filter() subset set active features rows $col_roles $row_roles, respectively. $cbind() $rbind() change task -place binding new columns rows data. $rename() changes column names. $set_levels() $droplevels() update field $col_info() automatically repair factor levels querying data $data(). $materialize_view() creates new DataBackendDataTable keeps data currently active view possibly freeing memory consumed DataBackend stored Task.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Task Class — Task","text":"label (character(1)) Label object. Can used tables, plot text output instead ID. task_type (character(1)) Task type, e.g. \"classif\" \"regr\". complete list possible task types (depending loaded packages), see mlr_reflections$task_types$type. backend (DataBackend) Abstract interface data task. col_info (data.table::data.table()) Table 4 columns, mainly internal purposes: \"id\" (character()) stores name column. \"type\" (character()) holds storage type variable, e.g. integer, numeric character. See mlr_reflections$task_feature_types complete list allowed types. \"levels\" (list()) stores vector distinct values (levels) ordered unordered factor variables. \"label\" (character()) stores vector prettier, formated column names. \"fix_factor_levels\" (logical()) stores flags determine levels respective variable need reordered querying data DataBackend. Note columns DataBackend, also columns selected role, listed table. man (character(1)) String format [pkg]::[topic] pointing manual page object. Defaults NA, can set child classes. extra_args (named list()) Additional arguments set construction. Required convert_task(). mlr3_version (package_version) Package version mlr3 used create task.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Task Class — Task","text":"id (character(1)) Identifier object. Used tables, plot text output. internal_valid_task (Task integer() NULL) Optional validation task can, e.g., used early stopping learners XGBoost. See also $validate field Learner. integers assigned removed primary task internal validation task ids created primary task using ids. assigning new task, always cloned. hash (character(1)) Hash (unique identifier) object. hash calculated based complete task object $row_ids. internal validation task set, hash recalculated. row_hash (character(1)) Hash (unique identifier) calculated based row ids. row_ids (positive integer()) Returns row ids DataBackend observations role \"use\". row_names (data.table::data.table()) Returns table two columns: \"row_id\" (integer()), \"row_name\" (character()). feature_names (character()) Returns column names role == \"feature\". Note vector determines default order columns task$data(cols = NULL, ...). However, recommended rely order columns, instead always address columns name. default order well defined operations, e.g. task$cbind() processing via mlr3pipelines. target_names (character()) Returns column names role \"target\". properties (character()) Set task properties. Possible properties stored mlr_reflections$task_properties. following properties currently standardized understood tasks mlr3: \"strata\": task resampled using one stratification variables (role \"stratum\"). \"groups\": task comes grouping/blocking information (role \"group\"). \"weights_learner\": task observation weights role, passed Learner train. use weights can disabled via setting learner's hyperparameter use_weights FALSE. \"weights_measure\": task observation weights role, passed Measure weighted scoring. use weights can disabled via setting measure's hyperparameter use_weights FALSE. \"offset\": task includes one offset columns specifying fixed adjustments model training possibly prediction (role \"offset\"). \"ordered\": task columns define row order (role \"order\"). Note listed properties calculated $col_roles, may set explicitly. row_roles (named list()) row (observation) can arbitrary number roles learning task: \"use\": Use train / predict / resampling. row_roles named list whose elements named row role element integer() vector row ids. alter roles, just modify list, e.g.  R's set functions (intersect(), setdiff(), union(), ...). col_roles (named list()) column can one following groups fulfill different roles: \"feature\": Regular feature used model fitting process. \"target\": Target variable. tasks accept single target column. \"name\": Row names / observation labels. used plots. Can queried $row_names. single column can associated role. \"order\": Data returned $data() ordered column (columns). Columns must sortable order(). \"group\": resampling, observations value variable role \"group\" marked \"belonging together\". resampling iteration, observations group exclusively assigned either training set test set. single column can associated role. \"stratum\": Stratification variables. Multiple discrete columns may role. \"weights_learner\": task observation weights role, passed Learner train. use weights can disabled via setting learner's hyperparameter use_weights FALSE. \"weights_measure\": task observation weights role, passed Measure weighted scoring. use weights can disabled via setting measure's hyperparameter use_weights FALSE. \"offset\": Numeric columns used specify fixed adjustments model training. models use offsets simply shift predictions, others incorporate boost predictions baseline model. learners supporting offsets multiclass settings, offset column must provided target class. columns must follow naming convention \"offset_{target_class_name}\". example learner supports offsets, see LearnerClassifXgboost  mlr3learners. col_roles named list whose elements named column role element character() vector column names. alter roles, just modify list, e.g. R's set functions (intersect(), setdiff(), union(), ...). method $set_col_roles provides convenient alternative assign columns roles. roles weights_learner weights_measure may point single numeric column, can point column different columns. Weights must non-negative numerics least one weight > 0. necessarily need sum 1. nrow (integer(1)) Returns total number rows role \"use\". ncol (integer(1)) Returns total number columns role \"target\" \"feature\". n_features (integer(1)) Returns total number columns role \"feature\" (.e. number \"active\" features task). feature_types (data.table::data.table()) Returns table columns id type id column names \"active\" features task type storage type. data_formats (character()) Supported data format. Always \"data.table\".. deprecated removed future. strata (data.table::data.table()) task columns designated role \"stratum\", returns table one subpopulation per row two columns: N (integer()) number observations subpopulation, row_id (list integer()) list column row ids respective subpopulation. Returns NULL stratification variable. See Resampling information stratification. groups (data.table::data.table()) task column designated role \"group\", table two columns: row_id (integer()), grouping variable group (vector()). Returns NULL grouping column. See Resampling information grouping. order (data.table::data.table()) task least one column designated role \"order\", table two columns: row_id (integer()), ordering vector order (integer()). Returns NULL order column. weights (data.table::data.table()) Deprecated, use $weights_learner instead. weights_learner (data.table::data.table()) Returns observation weights used training Learner (column role weights_learner) data.table following columns: row_id (integer()), weight (numeric()). Returns NULL column designated role. weights_measure (data.table::data.table()) Returns observation weights used scoring prediction Measure (column role weights_measure) data.table following columns: row_id (integer()), weight (numeric()). Returns NULL column designated role. offset (data.table::data.table()) task column designated role \"offset\", table two columns: row_id (integer()), offset variable(s) (numeric()). regression binary classification tasks, single-column offset. multiclass tasks, may return multiple offset columns, one target class. one offset column, named offset. columns \"offset\" role, NULL returned. labels (named character()) Retrieve labels (prettier formated names) columns. Internally queries column label table field col_info. Columns ids referenced name vector, labels actual string values. Assigning column update task reference. provide character vector labels, named column ids. remove label, set NA. Alternatively, can provide data.frame() two columns \"id\" \"label\". col_hashes (named character) Hash (unique identifier) columns except primary_key: character vector, named columns element refers . Columns different Tasks DataBackends agreeing col_hashes always represent data, given rows selected. reverse necessarily true: can columns content different col_hashes. characteristics (list()) List characteristics task, e.g. list(n = 5, p = 7). row_ids_backend (integer()) Returns row ids backend, regardless roles. different $row_ids returns rows role \"use\".","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Task Class — Task","text":"Task$new() Task$divide() Task$help() Task$format() Task$print() Task$data() Task$formula() Task$head() Task$levels() Task$missings() Task$filter() Task$select() Task$rbind() Task$cbind() Task$rename() Task$set_row_roles() Task$set_col_roles() Task$set_levels() Task$droplevels() Task$add_strata() Task$materialize_view() Task$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Task Class — Task","text":"Creates new instance R6 class. Note object typically constructed via derived classes, e.g. TaskClassif TaskRegr.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Task Class — Task","text":"","code":"Task$new(id, task_type, backend, label = NA_character_, extra_args = list())"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task Class — Task","text":"id (character(1)) Identifier new instance. task_type (character(1)) Type task, e.g. \"regr\" \"classif\". Must element mlr_reflections$task_types$type. backend (DataBackend) Either DataBackend, object convertible DataBackend as_data_backend(). E.g., data.frame() converted DataBackendDataTable. label (character(1)) Label new instance. extra_args (named list()) Named list constructor arguments, required converting task types via convert_task().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"method-divide-","dir":"Reference","previous_headings":"","what":"Method divide()","title":"Task Class — Task","text":"Deprecated.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Task Class — Task","text":"","code":"Task$divide(ratio = NULL, ids = NULL, remove = TRUE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task Class — Task","text":"ratio (numeric(1)) proportion datapoints use validation data. ids (integer()) row ids use validation data. remove (logical(1)) TRUE (default), row_ids removed primary task's active \"use\" rows, ensuring disjoint split train validation data.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Task Class — Task","text":"Modified Self.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"method-help-","dir":"Reference","previous_headings":"","what":"Method help()","title":"Task Class — Task","text":"Opens corresponding help page referenced field $man.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Task Class — Task","text":"","code":"Task$help()"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"Task Class — Task","text":"Helper print outputs.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Task Class — Task","text":"","code":"Task$format(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task Class — Task","text":"... (ignored).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Task Class — Task","text":"Printer.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Task Class — Task","text":"","code":"Task$print(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task Class — Task","text":"... (ignored).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"method-data-","dir":"Reference","previous_headings":"","what":"Method data()","title":"Task Class — Task","text":"Returns slice data DataBackend data.table. Rows default observations role \"use\", columns default features roles \"target\" \"feature\". Rows must subset $row_ids. rows cols specified exist DataBackend, exception raised. Rows columns returned order specified via arguments rows cols. rows NULL, rows returned order task$row_ids. cols NULL, column order defaults c(task$target_names, task$feature_names). Note recommended rely order columns, instead always address columns respective column name.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Task Class — Task","text":"","code":"Task$data(rows = NULL, cols = NULL, data_format, ordered = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task Class — Task","text":"rows (positive integer()) Vector row indices. Always refers complete data set, even filtering. cols (character()) Vector column names. data_format (character(1)) Deprecated. Ignored, removed future. ordered (logical(1)) TRUE, data ordered according columns column role \"order\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Task Class — Task","text":"Depending DataBackend, usually data.table::data.table().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Task Class — Task","text":"","code":"task = tsk(\"penguins\") task$data(rows = 1:5, cols = c(\"species\", \"sex\"))"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"method-formula-","dir":"Reference","previous_headings":"","what":"Method formula()","title":"Task Class — Task","text":"Constructs formula(), e.g. [target] ~ [feature_1] + [feature_2] + ... + [feature_k], using features provided argument rhs (defaults columns role \"feature\", symbolized \".\"). Note currently possible change formula. However, mlr3pipelines provides pipe operator interfacing stats::model.matrix() purpose: \"modelmatrix\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Task Class — Task","text":"","code":"Task$formula(rhs = \".\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task Class — Task","text":"rhs (character(1)) Right hand side formula. Defaults \".\" (features task).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Task Class — Task","text":"formula().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Task Class — Task","text":"","code":"task = tsk(\"penguins\") task$formula()"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"method-head-","dir":"Reference","previous_headings":"","what":"Method head()","title":"Task Class — Task","text":"Get first n observations role \"use\" columns role \"target\" \"feature\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Task Class — Task","text":"","code":"Task$head(n = 6L)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task Class — Task","text":"n (integer(1)).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Task Class — Task","text":"data.table::data.table() n rows.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"Task Class — Task","text":"","code":"task = tsk(\"penguins\") task$head(3)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"method-levels-","dir":"Reference","previous_headings":"","what":"Method levels()","title":"Task Class — Task","text":"Returns distinct values columns referenced cols storage type \"factor\" \"ordered\". Argument cols defaults columns role \"target\" \"feature\". Note function ignores row roles, returns levels available DataBackend. update stored level information, e.g. subsetting task $filter(), call $droplevels().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Task Class — Task","text":"","code":"Task$levels(cols = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task Class — Task","text":"cols (character()) Vector column names.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Task Class — Task","text":"named list().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"Task Class — Task","text":"","code":"task = tsk(\"penguins\") task$levels()"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"method-missings-","dir":"Reference","previous_headings":"","what":"Method missings()","title":"Task Class — Task","text":"Returns number missing observations columns referenced cols. Considers active rows row role \"use\". Argument cols defaults columns role \"target\" \"feature\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Task Class — Task","text":"","code":"Task$missings(cols = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task Class — Task","text":"cols (character()) Vector column names.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Task Class — Task","text":"Named integer().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"Task Class — Task","text":"","code":"task = tsk(\"penguins\") task$missings()"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"method-filter-","dir":"Reference","previous_headings":"","what":"Method filter()","title":"Task Class — Task","text":"Subsets task, keeping rows specified via row ids rows. operation mutates task -place. See section task mutators information.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Task Class — Task","text":"","code":"Task$filter(rows)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task Class — Task","text":"rows (positive integer()) Vector row indices. Always refers complete data set, even filtering.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Task Class — Task","text":"Returns object , modified reference. need explicitly $clone() object beforehand want keeps object previous state.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"examples-5","dir":"Reference","previous_headings":"","what":"Examples","title":"Task Class — Task","text":"","code":"task = tsk(\"penguins\") task$filter(1:10) task$nrow"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"method-select-","dir":"Reference","previous_headings":"","what":"Method select()","title":"Task Class — Task","text":"Subsets task, keeping features specified via column names cols. Note deselect target column, obvious reasons. operation mutates task -place. See section task mutators information.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Task Class — Task","text":"","code":"Task$select(cols)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task Class — Task","text":"cols (character()) Vector column names.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Task Class — Task","text":"Returns object , modified reference. need explicitly $clone() object beforehand want keeps object previous state.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"examples-6","dir":"Reference","previous_headings":"","what":"Examples","title":"Task Class — Task","text":"","code":"task = tsk(\"penguins\") task$select(c(\"bill_length\", \"bill_depth\")) task$feature_names"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"method-rbind-","dir":"Reference","previous_headings":"","what":"Method rbind()","title":"Task Class — Task","text":"Adds additional rows DataBackend stored $backend. New row ids automatically created, unless data column whose name matches primary key DataBackend (task$backend$primary_key). case name clashes row ids, rows data higher precedence virtually overwrite rows DataBackend. columns roles \"target\", \"feature\", \"weights_learner\", \"weights_measure\", \"group\", \"stratum\", \"order\" must present data. Columns present data DataBackend task discarded. operation mutates task -place. See section task mutators information.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Task Class — Task","text":"","code":"Task$rbind(data)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task Class — Task","text":"data (data.frame()).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Task Class — Task","text":"Returns object , modified reference. need explicitly $clone() object beforehand want keeps object previous state.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"examples-7","dir":"Reference","previous_headings":"","what":"Examples","title":"Task Class — Task","text":"","code":"task = tsk(\"penguins\") extra = task$data(rows = 1:2) task$rbind(extra)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"method-cbind-","dir":"Reference","previous_headings":"","what":"Method cbind()","title":"Task Class — Task","text":"Adds additional columns DataBackend stored $backend. row ids must provided column data (column name matching primary key name DataBackend). column missing, assumed rows exactly order $row_ids. case name clashes column names data DataBackend, columns data higher precedence virtually overwrite columns DataBackend. operation mutates task -place. See section task mutators information.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Task Class — Task","text":"","code":"Task$cbind(data)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task Class — Task","text":"data (data.frame()).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"examples-8","dir":"Reference","previous_headings":"","what":"Examples","title":"Task Class — Task","text":"","code":"task = tsk(\"penguins\") task$cbind(data.table(extra_col = seq_len(task$nrow))) head(task$data(cols = \"extra_col\"))"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"method-rename-","dir":"Reference","previous_headings":"","what":"Method rename()","title":"Task Class — Task","text":"Renames columns mapping column names old new column names new (element-wise). operation mutates task -place. See section task mutators information.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Task Class — Task","text":"","code":"Task$rename(old, new)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task Class — Task","text":"old (character()) Old names. new (character()) New names.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Task Class — Task","text":"Returns object , modified reference. need explicitly $clone() object beforehand want keeps object previous state.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"examples-9","dir":"Reference","previous_headings":"","what":"Examples","title":"Task Class — Task","text":"","code":"task = tsk(\"penguins\") task$rename(\"body_mass\", \"mass\") task$feature_names"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"method-set-row-roles-","dir":"Reference","previous_headings":"","what":"Method set_row_roles()","title":"Task Class — Task","text":"Modifies roles $row_roles -place.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Task Class — Task","text":"","code":"Task$set_row_roles(rows, roles = NULL, add_to = NULL, remove_from = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task Class — Task","text":"rows (integer()) Row ids change roles . roles (character()) Exclusively set rows specified roles (remove roles). add_to (character()) Add rows row ids rows roles specified add_to. Rows keep previous roles. remove_from (character()) Remove rows row ids rows roles specified remove_from. row roles preserved.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Task Class — Task","text":"Roles first set exclusively (argument roles), added (argument add_to) finally removed (argument remove_from) different roles. Duplicated row ids explicitly allowed, can add replicate observation repeating row_id.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Task Class — Task","text":"Returns object , modified reference. need explicitly $clone() object beforehand want keeps object previous state.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"examples-10","dir":"Reference","previous_headings":"","what":"Examples","title":"Task Class — Task","text":"","code":"task = tsk(\"penguins\") task$set_row_roles(1:5, remove_from = \"use\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"method-set-col-roles-","dir":"Reference","previous_headings":"","what":"Method set_col_roles()","title":"Task Class — Task","text":"Modifies roles $col_roles -place. See $col_roles list possible roles.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Task Class — Task","text":"","code":"Task$set_col_roles(cols, roles = NULL, add_to = NULL, remove_from = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task Class — Task","text":"cols (character()) Column names change roles . roles (character()) Exclusively set columns specified roles (remove roles). add_to (character()) Add columns column names cols roles specified add_to. Columns keep previous roles. remove_from (character()) Remove columns columns names cols roles specified remove_from. column roles preserved.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"Task Class — Task","text":"Roles first set exclusively (argument roles), added (argument add_to) finally removed (argument remove_from) different roles. Duplicated columns removed role. tasks allow one target, target column set $set_col_roles(). Use $col_roles field swap target column.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Task Class — Task","text":"Returns object , modified reference. need explicitly $clone() object beforehand want keeps object previous state.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"examples-11","dir":"Reference","previous_headings":"","what":"Examples","title":"Task Class — Task","text":"","code":"task = tsk(\"penguins\") task$set_col_roles(\"sex\", roles = \"stratum\") task$col_roles$stratum"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"method-set-levels-","dir":"Reference","previous_headings":"","what":"Method set_levels()","title":"Task Class — Task","text":"Set levels columns type factor ordered field col_info. can add, remove reorder levels, affecting data returned $data() $levels(). just want remove unused levels, use $droplevels() instead. Note factor levels present data listed task valid levels converted missing values.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Task Class — Task","text":"","code":"Task$set_levels(levels)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task Class — Task","text":"levels (named list() character()) List character vectors new levels, named column names.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Task Class — Task","text":"Modified self.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"examples-12","dir":"Reference","previous_headings":"","what":"Examples","title":"Task Class — Task","text":"","code":"task = tsk(\"penguins\") task$set_levels(list(sex = c(\"male\", \"female\", \"unknown\"))) task$levels(\"sex\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"method-droplevels-","dir":"Reference","previous_headings":"","what":"Method droplevels()","title":"Task Class — Task","text":"Updates cache stored factor levels, removing levels present current set active rows. cols defaults columns storage type \"factor\" \"ordered\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Task Class — Task","text":"","code":"Task$droplevels(cols = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task Class — Task","text":"cols (character()) Vector column names.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Task Class — Task","text":"Modified self.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"examples-13","dir":"Reference","previous_headings":"","what":"Examples","title":"Task Class — Task","text":"","code":"task = tsk(\"penguins\") task$set_levels(list(sex = c(\"male\", \"female\", \"unknown\"))) task$levels(\"sex\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"method-add-strata-","dir":"Reference","previous_headings":"","what":"Method add_strata()","title":"Task Class — Task","text":"Cuts numeric variables new factors columns added task role \"stratum\". ensures training test splits contain observations bins. columns named \"..stratum_[col_name]\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Task Class — Task","text":"","code":"Task$add_strata(cols, bins = 3L)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task Class — Task","text":"cols (character()) Names columns operate . bins (integer()) Number bins cut (passed cut() breaks). Replicated length cols.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Task Class — Task","text":"self (invisibly).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"examples-14","dir":"Reference","previous_headings":"","what":"Examples","title":"Task Class — Task","text":"","code":"task = tsk(\"penguins\") task$add_strata(\"flipper_length\", bins = 4)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"method-materialize-view-","dir":"Reference","previous_headings":"","what":"Method materialize_view()","title":"Task Class — Task","text":"Certain operations change view data, e.g., $filter() $select(). operation queries DataBackend data required active view replaces internal DataBackend new one. scenarios helps free memory speeds accesses data, especially several $rbind() $cbind() operations.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Task Class — Task","text":"","code":"Task$materialize_view(internal_valid_task = TRUE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task Class — Task","text":"internal_valid_task (logical(1)) Also materialize internal validation task. Default TRUE.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"details-2","dir":"Reference","previous_headings":"","what":"Details","title":"Task Class — Task","text":"tasks containing observation (duplicates $row_ids), resulting backend contains .","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Task Class — Task","text":"self (invisibly).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"examples-15","dir":"Reference","previous_headings":"","what":"Examples","title":"Task Class — Task","text":"","code":"task = tsk(\"iris\") task$backend$nrow task$filter(1:120) task$backend$nrow"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Task Class — Task","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Task Class — Task","text":"","code":"Task$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task Class — Task","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/Task.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Task Class — Task","text":"","code":"# We use the inherited class TaskClassif here, # because the base class `Task` is not intended for direct use task = TaskClassif$new(\"penguings\", palmerpenguins::penguins, target = \"species\")  task$nrow #> [1] 344 task$ncol #> [1] 8 task$feature_names #> [1] \"bill_depth_mm\"     \"bill_length_mm\"    \"body_mass_g\"       #> [4] \"flipper_length_mm\" \"island\"            \"sex\"               #> [7] \"year\"              task$formula() #> species ~ . #> NULL  # de-select \"year\" task$select(setdiff(task$feature_names, \"year\"))  task$feature_names #> [1] \"bill_depth_mm\"     \"bill_length_mm\"    \"body_mass_g\"       #> [4] \"flipper_length_mm\" \"island\"            \"sex\"                # Add new column \"foo\" task$cbind(data.frame(foo = 1:344)) head(task) #>    species bill_depth_mm bill_length_mm body_mass_g flipper_length_mm    island #>     <fctr>         <num>          <num>       <int>             <int>    <fctr> #> 1:  Adelie          18.7           39.1        3750               181 Torgersen #> 2:  Adelie          17.4           39.5        3800               186 Torgersen #> 3:  Adelie          18.0           40.3        3250               195 Torgersen #> 4:  Adelie            NA             NA          NA                NA Torgersen #> 5:  Adelie          19.3           36.7        3450               193 Torgersen #> 6:  Adelie          20.6           39.3        3650               190 Torgersen #>       sex   foo #>    <fctr> <int> #> 1:   male     1 #> 2: female     2 #> 3: female     3 #> 4:   <NA>     4 #> 5: female     5 #> 6:   male     6  ## ------------------------------------------------ ## Method `Task$data` ## ------------------------------------------------  task = tsk(\"penguins\") task$data(rows = 1:5, cols = c(\"species\", \"sex\")) #>    species    sex #>     <fctr> <fctr> #> 1:  Adelie   male #> 2:  Adelie female #> 3:  Adelie female #> 4:  Adelie   <NA> #> 5:  Adelie female  ## ------------------------------------------------ ## Method `Task$formula` ## ------------------------------------------------  task = tsk(\"penguins\") task$formula() #> species ~ . #> NULL  ## ------------------------------------------------ ## Method `Task$head` ## ------------------------------------------------  task = tsk(\"penguins\") task$head(3) #>    species bill_depth bill_length body_mass flipper_length    island    sex #>     <fctr>      <num>       <num>     <int>          <int>    <fctr> <fctr> #> 1:  Adelie       18.7        39.1      3750            181 Torgersen   male #> 2:  Adelie       17.4        39.5      3800            186 Torgersen female #> 3:  Adelie       18.0        40.3      3250            195 Torgersen female #>     year #>    <int> #> 1:  2007 #> 2:  2007 #> 3:  2007  ## ------------------------------------------------ ## Method `Task$levels` ## ------------------------------------------------  task = tsk(\"penguins\") task$levels() #> $island #> [1] \"Biscoe\"    \"Dream\"     \"Torgersen\" #>  #> $sex #> [1] \"female\" \"male\"   #>  #> $species #> [1] \"Adelie\"    \"Chinstrap\" \"Gentoo\"    #>   ## ------------------------------------------------ ## Method `Task$missings` ## ------------------------------------------------  task = tsk(\"penguins\") task$missings() #>        species     bill_depth    bill_length      body_mass flipper_length  #>              0              2              2              2              2  #>         island            sex           year  #>              0             11              0   ## ------------------------------------------------ ## Method `Task$filter` ## ------------------------------------------------  task = tsk(\"penguins\") task$filter(1:10) task$nrow #> [1] 10  ## ------------------------------------------------ ## Method `Task$select` ## ------------------------------------------------  task = tsk(\"penguins\") task$select(c(\"bill_length\", \"bill_depth\")) task$feature_names #> [1] \"bill_depth\"  \"bill_length\"  ## ------------------------------------------------ ## Method `Task$rbind` ## ------------------------------------------------  task = tsk(\"penguins\") extra = task$data(rows = 1:2) task$rbind(extra)  ## ------------------------------------------------ ## Method `Task$cbind` ## ------------------------------------------------  task = tsk(\"penguins\") task$cbind(data.table(extra_col = seq_len(task$nrow))) head(task$data(cols = \"extra_col\")) #>    extra_col #>        <int> #> 1:         1 #> 2:         2 #> 3:         3 #> 4:         4 #> 5:         5 #> 6:         6  ## ------------------------------------------------ ## Method `Task$rename` ## ------------------------------------------------  task = tsk(\"penguins\") task$rename(\"body_mass\", \"mass\") task$feature_names #> [1] \"bill_depth\"     \"bill_length\"    \"mass\"           \"flipper_length\" #> [5] \"island\"         \"sex\"            \"year\"            ## ------------------------------------------------ ## Method `Task$set_row_roles` ## ------------------------------------------------  task = tsk(\"penguins\") task$set_row_roles(1:5, remove_from = \"use\")  ## ------------------------------------------------ ## Method `Task$set_col_roles` ## ------------------------------------------------  task = tsk(\"penguins\") task$set_col_roles(\"sex\", roles = \"stratum\") task$col_roles$stratum #> [1] \"sex\"  ## ------------------------------------------------ ## Method `Task$set_levels` ## ------------------------------------------------  task = tsk(\"penguins\") task$set_levels(list(sex = c(\"male\", \"female\", \"unknown\"))) task$levels(\"sex\") #> $sex #> [1] \"male\"    \"female\"  \"unknown\" #>   ## ------------------------------------------------ ## Method `Task$droplevels` ## ------------------------------------------------  task = tsk(\"penguins\") task$set_levels(list(sex = c(\"male\", \"female\", \"unknown\"))) task$levels(\"sex\") #> $sex #> [1] \"male\"    \"female\"  \"unknown\" #>   ## ------------------------------------------------ ## Method `Task$add_strata` ## ------------------------------------------------  task = tsk(\"penguins\") task$add_strata(\"flipper_length\", bins = 4)  ## ------------------------------------------------ ## Method `Task$materialize_view` ## ------------------------------------------------  task = tsk(\"iris\") task$backend$nrow #> [1] 150 task$filter(1:120) task$backend$nrow #> [1] 150"},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskClassif.html","id":null,"dir":"Reference","previous_headings":"","what":"Classification Task — TaskClassif","title":"Classification Task — TaskClassif","text":"task specializes Task TaskSupervised classification problems. target column assumed factor ordered factor. task_type set \"classif\". Additional task properties include: \"twoclass\": task binary classification problem. \"multiclass\": task multiclass classification problem. recommended use as_task_classif() construction. Predefined tasks stored dictionary mlr_tasks.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskClassif.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Classification Task — TaskClassif","text":"mlr3::Task -> mlr3::TaskSupervised -> TaskClassif","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskClassif.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Classification Task — TaskClassif","text":"class_names (character()) Returns class labels target column. positive (character(1)) Stores positive class binary classification tasks, NA multiclass tasks. switch positive class, assign level field. negative (character(1)) Stores negative class binary classification tasks, NA multiclass tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskClassif.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Classification Task — TaskClassif","text":"mlr3::Task$add_strata() mlr3::Task$cbind() mlr3::Task$data() mlr3::Task$divide() mlr3::Task$filter() mlr3::Task$format() mlr3::Task$formula() mlr3::Task$head() mlr3::Task$help() mlr3::Task$levels() mlr3::Task$materialize_view() mlr3::Task$missings() mlr3::Task$print() mlr3::Task$rbind() mlr3::Task$rename() mlr3::Task$select() mlr3::Task$set_col_roles() mlr3::Task$set_levels() mlr3::Task$set_row_roles()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskClassif.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Classification Task — TaskClassif","text":"TaskClassif$new() TaskClassif$truth() TaskClassif$droplevels() TaskClassif$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskClassif.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Classification Task — TaskClassif","text":"Creates new instance R6 class. function as_task_classif() provides alternative way construct classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskClassif.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Task — TaskClassif","text":"","code":"TaskClassif$new(   id,   backend,   target,   positive = NULL,   label = NA_character_,   extra_args = list() )"},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskClassif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classification Task — TaskClassif","text":"id (character(1)) Identifier new instance. backend (DataBackend) Either DataBackend, object convertible DataBackend as_data_backend(). E.g., data.frame() converted DataBackendDataTable. target (character(1)) Name target column. positive (character(1)) binary classification: Name positive class. levels target columns reordered accordingly, first element $class_names positive class, second element negative class. label (character(1)) Label new instance. extra_args (named list()) Named list constructor arguments, required converting task types via convert_task().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskClassif.html","id":"method-truth-","dir":"Reference","previous_headings":"","what":"Method truth()","title":"Classification Task — TaskClassif","text":"True response specified row_ids. Format depends task type. Defaults rows role \"use\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskClassif.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Task — TaskClassif","text":"","code":"TaskClassif$truth(rows = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskClassif.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classification Task — TaskClassif","text":"rows (positive integer()) Vector row indices. Always refers complete data set, even filtering.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskClassif.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Classification Task — TaskClassif","text":"factor().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskClassif.html","id":"method-droplevels-","dir":"Reference","previous_headings":"","what":"Method droplevels()","title":"Classification Task — TaskClassif","text":"Updates cache stored factor levels, removing levels present current set active rows. cols defaults columns storage type \"factor\" \"ordered\". Also updates task property \"twoclass\"/\"multiclass\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskClassif.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Task — TaskClassif","text":"","code":"TaskClassif$droplevels(cols = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskClassif.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classification Task — TaskClassif","text":"cols (character()) Vector column names.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskClassif.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Classification Task — TaskClassif","text":"Modified self.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskClassif.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Classification Task — TaskClassif","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskClassif.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Task — TaskClassif","text":"","code":"TaskClassif$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskClassif.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classification Task — TaskClassif","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskClassif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classification Task — TaskClassif","text":"","code":"data(\"Sonar\", package = \"mlbench\") task = as_task_classif(Sonar, target = \"Class\", positive = \"M\")  task$task_type #> [1] \"classif\" task$formula() #> Class ~ . #> NULL task$truth() #>   [1] R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R #>  [38] R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R #>  [75] R R R R R R R R R R R R R R R R R R R R R R R M M M M M M M M M M M M M M #> [112] M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M #> [149] M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M #> [186] M M M M M M M M M M M M M M M M M M M M M M M #> Levels: M R task$class_names #> [1] \"M\" \"R\" task$positive #> [1] \"M\" task$data(rows = 1:3, cols = task$feature_names[1:2]) #>        V1    V10 #>     <num>  <num> #> 1: 0.0200 0.2111 #> 2: 0.0453 0.2872 #> 3: 0.0262 0.6194"},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskGenerator.html","id":null,"dir":"Reference","previous_headings":"","what":"TaskGenerator Class — TaskGenerator","title":"TaskGenerator Class — TaskGenerator","text":"Creates Task arbitrary size. Predefined task generators stored dictionary mlr_task_generators, e.g. xor.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskGenerator.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"TaskGenerator Class — TaskGenerator","text":"id (character(1)) Identifier object. Used tables, plot text output. label (character(1)) Label object. Can used tables, plot text output instead ID. task_type (character(1)) Task type, e.g. \"classif\" \"regr\". complete list possible task types (depending loaded packages), see mlr_reflections$task_types$type. param_set (paradox::ParamSet) Set hyperparameters. packages (character(1)) Set required packages. packages loaded, attached. man (character(1)) String format [pkg]::[topic] pointing manual page object. Defaults NA, can set child classes.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskGenerator.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TaskGenerator Class — TaskGenerator","text":"TaskGenerator$new() TaskGenerator$format() TaskGenerator$print() TaskGenerator$generate() TaskGenerator$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskGenerator.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"TaskGenerator Class — TaskGenerator","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskGenerator.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TaskGenerator Class — TaskGenerator","text":"","code":"TaskGenerator$new(   id,   task_type,   packages = character(),   param_set = ps(),   label = NA_character_,   man = NA_character_ )"},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskGenerator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TaskGenerator Class — TaskGenerator","text":"id (character(1)) Identifier new instance. task_type (character(1)) Type task, e.g. \"regr\" \"classif\". Must element mlr_reflections$task_types$type. packages (character()) Set required packages. warning signaled constructor least one packages installed, loaded (attached) later -demand via requireNamespace(). param_set (paradox::ParamSet) Set hyperparameters. label (character(1)) Label new instance. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskGenerator.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"TaskGenerator Class — TaskGenerator","text":"Helper print outputs.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskGenerator.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TaskGenerator Class — TaskGenerator","text":"","code":"TaskGenerator$format(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskGenerator.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TaskGenerator Class — TaskGenerator","text":"... (ignored).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskGenerator.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"TaskGenerator Class — TaskGenerator","text":"Printer.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskGenerator.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TaskGenerator Class — TaskGenerator","text":"","code":"TaskGenerator$print(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskGenerator.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TaskGenerator Class — TaskGenerator","text":"... (ignored).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskGenerator.html","id":"method-generate-","dir":"Reference","previous_headings":"","what":"Method generate()","title":"TaskGenerator Class — TaskGenerator","text":"Creates task type task_type n observations, possibly using additional settings stored param_set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskGenerator.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TaskGenerator Class — TaskGenerator","text":"","code":"TaskGenerator$generate(n)"},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskGenerator.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"TaskGenerator Class — TaskGenerator","text":"n (integer(1)) Number rows generate.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskGenerator.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TaskGenerator Class — TaskGenerator","text":"Task.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskGenerator.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TaskGenerator Class — TaskGenerator","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskGenerator.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"TaskGenerator Class — TaskGenerator","text":"","code":"TaskGenerator$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskGenerator.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"TaskGenerator Class — TaskGenerator","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskRegr.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression Task — TaskRegr","title":"Regression Task — TaskRegr","text":"task specializes Task TaskSupervised regression problems. target column assumed numeric. task_type set \"regr\". recommended use as_task_regr() construction. Predefined tasks stored dictionary mlr_tasks.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskRegr.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Regression Task — TaskRegr","text":"mlr3::Task -> mlr3::TaskSupervised -> TaskRegr","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskRegr.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Regression Task — TaskRegr","text":"mlr3::Task$add_strata() mlr3::Task$cbind() mlr3::Task$data() mlr3::Task$divide() mlr3::Task$droplevels() mlr3::Task$filter() mlr3::Task$format() mlr3::Task$formula() mlr3::Task$head() mlr3::Task$help() mlr3::Task$levels() mlr3::Task$materialize_view() mlr3::Task$missings() mlr3::Task$print() mlr3::Task$rbind() mlr3::Task$rename() mlr3::Task$select() mlr3::Task$set_col_roles() mlr3::Task$set_levels() mlr3::Task$set_row_roles()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskRegr.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Regression Task — TaskRegr","text":"TaskRegr$new() TaskRegr$truth() TaskRegr$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskRegr.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Regression Task — TaskRegr","text":"Creates new instance R6 class. function as_task_regr() provides alternative way construct regression tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskRegr.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression Task — TaskRegr","text":"","code":"TaskRegr$new(id, backend, target, label = NA_character_, extra_args = list())"},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskRegr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression Task — TaskRegr","text":"id (character(1)) Identifier new instance. backend (DataBackend) Either DataBackend, object convertible DataBackend as_data_backend(). E.g., data.frame() converted DataBackendDataTable. target (character(1)) Name target column. label (character(1)) Label new instance. extra_args (named list()) Named list constructor arguments, required converting task types via convert_task().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskRegr.html","id":"method-truth-","dir":"Reference","previous_headings":"","what":"Method truth()","title":"Regression Task — TaskRegr","text":"True response specified row_ids. Format depends task type. Defaults rows role \"use\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskRegr.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression Task — TaskRegr","text":"","code":"TaskRegr$truth(rows = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskRegr.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression Task — TaskRegr","text":"rows (positive integer()) Vector row indices. Always refers complete data set, even filtering.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskRegr.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Regression Task — TaskRegr","text":"numeric().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskRegr.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Regression Task — TaskRegr","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskRegr.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression Task — TaskRegr","text":"","code":"TaskRegr$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskRegr.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression Task — TaskRegr","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskRegr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regression Task — TaskRegr","text":"","code":"task = as_task_regr(palmerpenguins::penguins, target = \"bill_length_mm\") task$task_type #> [1] \"regr\" task$formula() #> bill_length_mm ~ . #> NULL task$truth() #>   [1] 39.1 39.5 40.3   NA 36.7 39.3 38.9 39.2 34.1 42.0 37.8 37.8 41.1 38.6 34.6 #>  [16] 36.6 38.7 42.5 34.4 46.0 37.8 37.7 35.9 38.2 38.8 35.3 40.6 40.5 37.9 40.5 #>  [31] 39.5 37.2 39.5 40.9 36.4 39.2 38.8 42.2 37.6 39.8 36.5 40.8 36.0 44.1 37.0 #>  [46] 39.6 41.1 37.5 36.0 42.3 39.6 40.1 35.0 42.0 34.5 41.4 39.0 40.6 36.5 37.6 #>  [61] 35.7 41.3 37.6 41.1 36.4 41.6 35.5 41.1 35.9 41.8 33.5 39.7 39.6 45.8 35.5 #>  [76] 42.8 40.9 37.2 36.2 42.1 34.6 42.9 36.7 35.1 37.3 41.3 36.3 36.9 38.3 38.9 #>  [91] 35.7 41.1 34.0 39.6 36.2 40.8 38.1 40.3 33.1 43.2 35.0 41.0 37.7 37.8 37.9 #> [106] 39.7 38.6 38.2 38.1 43.2 38.1 45.6 39.7 42.2 39.6 42.7 38.6 37.3 35.7 41.1 #> [121] 36.2 37.7 40.2 41.4 35.2 40.6 38.8 41.5 39.0 44.1 38.5 43.1 36.8 37.5 38.1 #> [136] 41.1 35.6 40.2 37.0 39.7 40.2 40.6 32.1 40.7 37.3 39.0 39.2 36.6 36.0 37.8 #> [151] 36.0 41.5 46.1 50.0 48.7 50.0 47.6 46.5 45.4 46.7 43.3 46.8 40.9 49.0 45.5 #> [166] 48.4 45.8 49.3 42.0 49.2 46.2 48.7 50.2 45.1 46.5 46.3 42.9 46.1 44.5 47.8 #> [181] 48.2 50.0 47.3 42.8 45.1 59.6 49.1 48.4 42.6 44.4 44.0 48.7 42.7 49.6 45.3 #> [196] 49.6 50.5 43.6 45.5 50.5 44.9 45.2 46.6 48.5 45.1 50.1 46.5 45.0 43.8 45.5 #> [211] 43.2 50.4 45.3 46.2 45.7 54.3 45.8 49.8 46.2 49.5 43.5 50.7 47.7 46.4 48.2 #> [226] 46.5 46.4 48.6 47.5 51.1 45.2 45.2 49.1 52.5 47.4 50.0 44.9 50.8 43.4 51.3 #> [241] 47.5 52.1 47.5 52.2 45.5 49.5 44.5 50.8 49.4 46.9 48.4 51.1 48.5 55.9 47.2 #> [256] 49.1 47.3 46.8 41.7 53.4 43.3 48.1 50.5 49.8 43.5 51.5 46.2 55.1 44.5 48.8 #> [271] 47.2   NA 46.8 50.4 45.2 49.9 46.5 50.0 51.3 45.4 52.7 45.2 46.1 51.3 46.0 #> [286] 51.3 46.6 51.7 47.0 52.0 45.9 50.5 50.3 58.0 46.4 49.2 42.4 48.5 43.2 50.6 #> [301] 46.7 52.0 50.5 49.5 46.4 52.8 40.9 54.2 42.5 51.0 49.7 47.5 47.6 52.0 46.9 #> [316] 53.5 49.0 46.2 50.9 45.5 50.9 50.8 50.1 49.0 51.5 49.8 48.1 51.4 45.7 50.7 #> [331] 42.5 52.2 45.2 49.3 50.2 45.6 51.9 46.8 45.7 55.8 43.5 49.6 50.8 50.2 task$data(rows = 1:3, cols = task$feature_names[1:2]) #>    bill_depth_mm body_mass_g #>            <num>       <int> #> 1:          18.7        3750 #> 2:          17.4        3800 #> 3:          18.0        3250"},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskSupervised.html","id":null,"dir":"Reference","previous_headings":"","what":"Supervised Task — TaskSupervised","title":"Supervised Task — TaskSupervised","text":"abstract base class task objects like TaskClassif TaskRegr. extends Task methods handle target columns. Supervised tasks probabilistic regression (including survival analysis) can found mlr3proba.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskSupervised.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Supervised Task — TaskSupervised","text":"mlr3::Task -> TaskSupervised","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskSupervised.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Supervised Task — TaskSupervised","text":"mlr3::Task$add_strata() mlr3::Task$cbind() mlr3::Task$data() mlr3::Task$divide() mlr3::Task$droplevels() mlr3::Task$filter() mlr3::Task$format() mlr3::Task$formula() mlr3::Task$head() mlr3::Task$help() mlr3::Task$levels() mlr3::Task$materialize_view() mlr3::Task$missings() mlr3::Task$print() mlr3::Task$rbind() mlr3::Task$rename() mlr3::Task$select() mlr3::Task$set_col_roles() mlr3::Task$set_levels() mlr3::Task$set_row_roles()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskSupervised.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Supervised Task — TaskSupervised","text":"TaskSupervised$new() TaskSupervised$truth() TaskSupervised$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskSupervised.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Supervised Task — TaskSupervised","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskSupervised.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Supervised Task — TaskSupervised","text":"","code":"TaskSupervised$new(   id,   task_type,   backend,   target,   label = NA_character_,   extra_args = list() )"},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskSupervised.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Supervised Task — TaskSupervised","text":"id (character(1)) Identifier new instance. task_type (character(1)) Type task, e.g. \"regr\" \"classif\". Must element mlr_reflections$task_types$type. backend (DataBackend) Either DataBackend, object convertible DataBackend as_data_backend(). E.g., data.frame() converted DataBackendDataTable. target (character(1)) Name target column. label (character(1)) Label new instance. extra_args (named list()) Named list constructor arguments, required converting task types via convert_task().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskSupervised.html","id":"method-truth-","dir":"Reference","previous_headings":"","what":"Method truth()","title":"Supervised Task — TaskSupervised","text":"True response specified row_ids. Format depends task type. Defaults rows role \"use\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskSupervised.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Supervised Task — TaskSupervised","text":"","code":"TaskSupervised$truth(rows = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskSupervised.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Supervised Task — TaskSupervised","text":"rows (positive integer()) Vector row indices. Always refers complete data set, even filtering.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskSupervised.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Supervised Task — TaskSupervised","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskSupervised.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Supervised Task — TaskSupervised","text":"","code":"TaskSupervised$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskSupervised.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Supervised Task — TaskSupervised","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskSupervised.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Supervised Task — TaskSupervised","text":"","code":"TaskSupervised$new(\"penguins\", task_type = \"classif\", backend = palmerpenguins::penguins,   target = \"species\") #>  #> ── <TaskSupervised> (344x8) ──────────────────────────────────────────────────── #> • Target: species #> • Properties: - #> • Features (7): #>   • int (3): body_mass_g, flipper_length_mm, year #>   • dbl (2): bill_depth_mm, bill_length_mm #>   • fct (2): island, sex"},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskUnsupervised.html","id":null,"dir":"Reference","previous_headings":"","what":"Unsupervised Task — TaskUnsupervised","title":"Unsupervised Task — TaskUnsupervised","text":"abstract base class unsupervised tasks cluster tasks mlr3cluster mlr3spatial.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskUnsupervised.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Unsupervised Task — TaskUnsupervised","text":"mlr3::Task -> TaskUnsupervised","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskUnsupervised.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Unsupervised Task — TaskUnsupervised","text":"mlr3::Task$add_strata() mlr3::Task$cbind() mlr3::Task$data() mlr3::Task$divide() mlr3::Task$droplevels() mlr3::Task$filter() mlr3::Task$format() mlr3::Task$formula() mlr3::Task$head() mlr3::Task$help() mlr3::Task$levels() mlr3::Task$materialize_view() mlr3::Task$missings() mlr3::Task$print() mlr3::Task$rbind() mlr3::Task$rename() mlr3::Task$select() mlr3::Task$set_col_roles() mlr3::Task$set_levels() mlr3::Task$set_row_roles()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskUnsupervised.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Unsupervised Task — TaskUnsupervised","text":"TaskUnsupervised$new() TaskUnsupervised$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskUnsupervised.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Unsupervised Task — TaskUnsupervised","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskUnsupervised.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unsupervised Task — TaskUnsupervised","text":"","code":"TaskUnsupervised$new(   id,   task_type = \"unsupervised\",   backend,   label = NA_character_,   extra_args = list() )"},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskUnsupervised.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unsupervised Task — TaskUnsupervised","text":"id (character(1)) Identifier new instance. task_type (character(1)) Type task, e.g. \"regr\" \"classif\". Must element mlr_reflections$task_types$type. backend (DataBackend) Either DataBackend, object convertible DataBackend as_data_backend(). E.g., data.frame() converted DataBackendDataTable. label (character(1)) Label new instance. extra_args (named list()) Named list constructor arguments, required converting task types via convert_task().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskUnsupervised.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Unsupervised Task — TaskUnsupervised","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskUnsupervised.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Unsupervised Task — TaskUnsupervised","text":"","code":"TaskUnsupervised$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskUnsupervised.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unsupervised Task — TaskUnsupervised","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/TaskUnsupervised.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unsupervised Task — TaskUnsupervised","text":"","code":"TaskUnsupervised$new(\"penguins\", task_type = \"regr\", backend = palmerpenguins::penguins) #>  #> ── <TaskUnsupervised> (344x8) ────────────────────────────────────────────────── #> • Target: #> • Properties: - #> • Features (8): #>   • int (3): body_mass_g, flipper_length_mm, year #>   • fct (3): island, sex, species #>   • dbl (2): bill_depth_mm, bill_length_mm"},{"path":"https://mlr3.mlr-org.com/dev/reference/as_benchmark_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to BenchmarkResult — as_benchmark_result","title":"Convert to BenchmarkResult — as_benchmark_result","text":"Convert object BenchmarkResult.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_benchmark_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to BenchmarkResult — as_benchmark_result","text":"","code":"as_benchmark_result(x, ...)  # S3 method for class 'BenchmarkResult' as_benchmark_result(x, ...)  # S3 method for class 'ResampleResult' as_benchmark_result(x, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/as_benchmark_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to BenchmarkResult — as_benchmark_result","text":"x () Object convert. ... () Additional arguments.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_benchmark_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to BenchmarkResult — as_benchmark_result","text":"(BenchmarkResult).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_data_backend.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Data Backend — as_data_backend.Matrix","title":"Create a Data Backend — as_data_backend.Matrix","text":"Wraps DataBackend around data. mlr3 ships methods data.frame (converted DataBackendDataTable Matrix package Matrix (converted DataBackendMatrix). Additional methods implemented package mlr3db, e.g. connect real DBMS like PostgreSQL (via dbplyr) DuckDB (via DBI/duckdb).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_data_backend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Data Backend — as_data_backend.Matrix","text":"","code":"# S3 method for class 'Matrix' as_data_backend(data, primary_key = NULL, dense = NULL, ...)  as_data_backend(data, primary_key = NULL, ...)  # S3 method for class 'data.frame' as_data_backend(data, primary_key = NULL, keep_rownames = FALSE, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/as_data_backend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Data Backend — as_data_backend.Matrix","text":"data (data.frame()) input data.frame(). Automatically converted data.table::data.table(). primary_key (character(1) | integer()) Name primary key column, integer vector row ids. dense (data.frame()). Dense data. ... () Additional arguments passed respective DataBackend method. keep_rownames (logical(1) | character(1)) TRUE single string, keeps row names data new column. column named like provided string, defaulting \"..rownames\" keep_rownames == TRUE. Note created column used regular feature task unless manually change column role. Also see data.table::.data.table().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_data_backend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Data Backend — as_data_backend.Matrix","text":"DataBackend.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/as_data_backend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Data Backend — as_data_backend.Matrix","text":"","code":"# create a new backend using the penguins data: as_data_backend(palmerpenguins::penguins) #>  #> ── <DataBackendDataTable> (344x9) ────────────────────────────────────────────── #>  species    island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g #>   <fctr>    <fctr>          <num>         <num>             <int>       <int> #>   Adelie Torgersen           39.1          18.7               181        3750 #>   Adelie Torgersen           39.5          17.4               186        3800 #>   Adelie Torgersen           40.3          18.0               195        3250 #>   Adelie Torgersen             NA            NA                NA          NA #>   Adelie Torgersen           36.7          19.3               193        3450 #>   Adelie Torgersen           39.3          20.6               190        3650 #>     sex  year ..row_id #>  <fctr> <int>    <int> #>    male  2007        1 #>  female  2007        2 #>  female  2007        3 #>    <NA>  2007        4 #>  female  2007        5 #>    male  2007        6 #> [...] (338 rows omitted)"},{"path":"https://mlr3.mlr-org.com/dev/reference/as_learner.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a Learner — as_learner","title":"Convert to a Learner — as_learner","text":"Convert object Learner list Learner.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_learner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a Learner — as_learner","text":"","code":"as_learner(x, ...)  # S3 method for class 'Learner' as_learner(x, clone = FALSE, discard_state = FALSE, ...)  as_learners(x, ...)  # Default S3 method as_learners(x, ...)  # S3 method for class 'list' as_learners(x, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/as_learner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a Learner — as_learner","text":"x () Object convert. ... () Additional arguments. clone (logical(1)) TRUE, ensures returned object input x. discard_state (logical(1)) Whether discard state.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_learner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to a Learner — as_learner","text":"Learner.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_measure.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a Measure — as_measure","title":"Convert to a Measure — as_measure","text":"Convert object Measure list Measure.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_measure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a Measure — as_measure","text":"","code":"as_measure(x, task_type = NULL, clone = FALSE, ...)  # S3 method for class '`NULL`' as_measure(x, task_type = NULL, clone = FALSE, ...)  # S3 method for class 'Measure' as_measure(x, task_type = NULL, clone = FALSE, ...)  as_measures(x, task_type = NULL, clone = FALSE, ...)  # Default S3 method as_measures(x, task_type = NULL, clone = FALSE, ...)  # S3 method for class '`NULL`' as_measures(x, task_type = NULL, clone = FALSE, ...)  # S3 method for class 'list' as_measures(x, task_type = NULL, clone = FALSE, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/as_measure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a Measure — as_measure","text":"x () Object convert. task_type (character(1)) Used x NULL construct default measure respective task type. default measures stored mlr_reflections$default_measures. clone (logical(1)) TRUE, ensures returned object input x. ... () Additional arguments.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_measure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to a Measure — as_measure","text":"Measure.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_prediction.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a Prediction — as_prediction","title":"Convert to a Prediction — as_prediction","text":"Convert object Prediction list Prediction.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_prediction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a Prediction — as_prediction","text":"","code":"as_prediction(x, check = FALSE, ...)  # S3 method for class 'Prediction' as_prediction(x, check = FALSE, ...)  # S3 method for class 'PredictionDataClassif' as_prediction(x, check = FALSE, ...)  # S3 method for class 'PredictionDataRegr' as_prediction(x, check = FALSE, ...)  as_predictions(x, predict_sets = \"test\", ...)  # S3 method for class 'list' as_predictions(x, predict_sets = \"test\", ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/as_prediction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a Prediction — as_prediction","text":"x () Object convert. check (logical(1)) Perform argument checks type conversions? ... () Additional arguments. predict_sets (character()) Prediction sets operate , used aggregate() extract matching predict_sets ResampleResult. Multiple predict sets calculated respective Learner resample()/benchmark(). Must non-empty subset {\"train\", \"test\", \"internal_valid\"}. multiple sets provided, first combined single prediction object. Default \"test\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_prediction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to a Prediction — as_prediction","text":"Prediction.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_prediction_classif.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a Classification Prediction — as_prediction_classif","title":"Convert to a Classification Prediction — as_prediction_classif","text":"Convert object PredictionClassif.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_prediction_classif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a Classification Prediction — as_prediction_classif","text":"","code":"as_prediction_classif(x, ...)  # S3 method for class 'PredictionClassif' as_prediction_classif(x, ...)  # S3 method for class 'data.frame' as_prediction_classif(x, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/as_prediction_classif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a Classification Prediction — as_prediction_classif","text":"x () Object convert. ... () Additional arguments.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_prediction_classif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to a Classification Prediction — as_prediction_classif","text":"PredictionClassif.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_prediction_classif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to a Classification Prediction — as_prediction_classif","text":"","code":"# create a prediction object task = tsk(\"penguins\") learner = lrn(\"classif.rpart\", predict_type = \"prob\") learner$train(task) p = learner$predict(task)  # convert to a data.table tab = as.data.table(p)  # convert back to a Prediction as_prediction_classif(tab) #>  #> ── <PredictionClassif> for 344 observations: ─────────────────────────────────── #>  row_ids     truth  response prob.Adelie prob.Chinstrap prob.Gentoo #>        1    Adelie    Adelie  0.96688742     0.03311258  0.00000000 #>        2    Adelie    Adelie  0.96688742     0.03311258  0.00000000 #>        3    Adelie    Adelie  0.96688742     0.03311258  0.00000000 #>      ---       ---       ---         ---            ---         --- #>      342 Chinstrap Chinstrap  0.06349206     0.92063492  0.01587302 #>      343 Chinstrap Chinstrap  0.28571429     0.71428571  0.00000000 #>      344 Chinstrap Chinstrap  0.06349206     0.92063492  0.01587302  # split data.table into a list of data.tables tabs = split(tab, tab$truth)  # convert back to list of predictions preds = lapply(tabs, as_prediction_classif)  # calculate performance in each group sapply(preds, function(p) p$score()) #>    Adelie.classif.ce Chinstrap.classif.ce    Gentoo.classif.ce  #>          0.039473684          0.073529412          0.008064516"},{"path":"https://mlr3.mlr-org.com/dev/reference/as_prediction_data.html","id":null,"dir":"Reference","previous_headings":"","what":"PredictionData — as_prediction_data","title":"PredictionData — as_prediction_data","text":"Convert object PredictionData list PredictionData.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_prediction_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictionData — as_prediction_data","text":"","code":"as_prediction_data(x, task, row_ids = task$row_ids, check = TRUE, ...)  # S3 method for class 'Prediction' as_prediction_data(x, task, row_ids = task$row_ids, check = TRUE, ...)  # S3 method for class 'PredictionData' as_prediction_data(x, task, row_ids = task$row_ids, check = TRUE, ...)  # S3 method for class 'list' as_prediction_data(   x,   task,   row_ids = task$row_ids,   check = TRUE,   ...,   train_task )"},{"path":"https://mlr3.mlr-org.com/dev/reference/as_prediction_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictionData — as_prediction_data","text":"x () Object convert. task (Task). row_ids integer() Row indices. check (logical(1)) Perform argument checks type conversions? ... () Additional arguments. train_task (Task) Task used training learner.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_prediction_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PredictionData — as_prediction_data","text":"PredictionData.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_prediction_regr.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a Regression Prediction — as_prediction_regr","title":"Convert to a Regression Prediction — as_prediction_regr","text":"Convert object PredictionRegr.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_prediction_regr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a Regression Prediction — as_prediction_regr","text":"","code":"as_prediction_regr(x, ...)  # S3 method for class 'PredictionRegr' as_prediction_regr(x, ...)  # S3 method for class 'data.frame' as_prediction_regr(x, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/as_prediction_regr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a Regression Prediction — as_prediction_regr","text":"x () Object convert. ... () Additional arguments.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_prediction_regr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to a Regression Prediction — as_prediction_regr","text":"PredictionRegr.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_prediction_regr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to a Regression Prediction — as_prediction_regr","text":"","code":"# create a prediction object task = tsk(\"mtcars\") learner = lrn(\"regr.rpart\") learner$train(task) p = learner$predict(task)  # convert to a data.table tab = as.data.table(p)  # convert back to a Prediction as_prediction_regr(tab) #>  #> ── <PredictionRegr> for 32 observations: ─────────────────────────────────────── #>  row_ids truth response #>        1  21.0 18.26429 #>        2  21.0 18.26429 #>        3  22.8 26.66364 #>      ---   ---      --- #>       30  19.7 18.26429 #>       31  15.0 13.41429 #>       32  21.4 26.66364  # split data.table into a list of data.tables tabs = split(tab, cut(tab$truth, 3))  # convert back to list of predictions preds = lapply(tabs, as_prediction_regr)  # calculate performance in each group sapply(preds, function(p) p$score()) #> (10.4,18.2].regr.mse (18.2,26.1].regr.mse (26.1,33.9].regr.mse  #>             4.278393             9.122466            22.719322"},{"path":"https://mlr3.mlr-org.com/dev/reference/as_resample_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to ResampleResult — as_resample_result","title":"Convert to ResampleResult — as_resample_result","text":"Convert object ResampleResult. S3 method list expects argument x list Prediction objects relevant objects (Task, Learners, instantiated Resampling) must provided, . flexible way manually create ResampleResult implemented as_result_data().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_resample_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to ResampleResult — as_resample_result","text":"","code":"as_resample_result(x, ...)  # S3 method for class 'ResampleResult' as_resample_result(x, ...)  # S3 method for class 'ResultData' as_resample_result(x, view = NULL, ...)  # S3 method for class 'list' as_resample_result(x, task, learners, resampling, store_backends = TRUE, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/as_resample_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to ResampleResult — as_resample_result","text":"x () Object convert. ... () Currently used. view (character()) See construction argument view ResampleResult. task (Task). learners (list trained Learners). resampling (Resampling). store_backends (logical(1)) set FALSE, backends Tasks provided data removed.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_resample_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to ResampleResult — as_resample_result","text":"(ResampleResult).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_resampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a Resampling — as_resampling","title":"Convert to a Resampling — as_resampling","text":"Convert object Resampling list Resampling. method e.g. allows convert OMLTask mlr3oml Resampling.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_resampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a Resampling — as_resampling","text":"","code":"as_resampling(x, ...)  # S3 method for class 'Resampling' as_resampling(x, clone = FALSE, ...)  as_resamplings(x, ...)  # Default S3 method as_resamplings(x, ...)  # S3 method for class 'list' as_resamplings(x, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/as_resampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a Resampling — as_resampling","text":"x () Object convert. ... () Additional arguments. clone (logical(1)) TRUE, ensures returned object input x.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_result_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to ResultData — as_result_data","title":"Convert to ResultData — as_result_data","text":"function allows construct convert ResultData object, result container used ResampleResult BenchmarkResult. ResampleResult BenchmarkResult can initialized returned object. Note ResampleResults can converted BenchmarkResult as_benchmark_result() multiple BenchmarkResults can combined larger BenchmarkResult $combine() method BenchmarkResult.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_result_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to ResultData — as_result_data","text":"","code":"as_result_data(   task,   learners,   resampling,   iterations,   predictions,   learner_states = NULL,   data_extra = NULL,   store_backends = TRUE )"},{"path":"https://mlr3.mlr-org.com/dev/reference/as_result_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to ResultData — as_result_data","text":"task (Task). learners (list trained Learners). resampling (Resampling). iterations (integer()). predictions (list list Predictions). learner_states (list()) Learner states. provided, states learners automatically extracted. data_extra (list()) Additional data iteration. store_backends (logical(1)) set FALSE, backends Tasks provided data removed.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_result_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to ResultData — as_result_data","text":"ResultData object can passed constructor ResampleResult.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_result_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to ResultData — as_result_data","text":"","code":"task = tsk(\"penguins\") learner = lrn(\"classif.rpart\") resampling = rsmp(\"cv\", folds = 2)$instantiate(task) iterations = seq_len(resampling$iters)  # manually train two learners. # store learners and predictions learners = list() predictions = list() for (i in iterations) {   l = learner$clone(deep = TRUE)   learners[[i]] = l$train(task, row_ids = resampling$train_set(i))   predictions[[i]] = list(test = l$predict(task, row_ids = resampling$test_set(i))) }  rdata = as_result_data(task, learners, resampling, iterations, predictions) ResampleResult$new(rdata) #>  #> ── <ResampleResult> with 2 resampling iterations ─────────────────────────────── #>   task_id    learner_id resampling_id iteration     prediction_test warnings #>  penguins classif.rpart            cv         1 <PredictionClassif>        0 #>  penguins classif.rpart            cv         2 <PredictionClassif>        0 #>  errors #>       0 #>       0"},{"path":"https://mlr3.mlr-org.com/dev/reference/as_task.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a Task — as_task","title":"Convert to a Task — as_task","text":"Convert object Task list Task. function supports: Converting existing Task objects (optional cloning) Converting objects packages (e.g., OMLTask mlr3oml) Converting lists objects lists tasks constructing tasks data frames, use dedicated converters: as_task_classif() classification tasks as_task_regr() regression tasks as_task_unsupervised() unsupervised tasks","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_task.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a Task — as_task","text":"","code":"as_task(x, ...)  # S3 method for class 'Task' as_task(x, clone = FALSE, ...)  as_tasks(x, ...)  # Default S3 method as_tasks(x, ...)  # S3 method for class 'list' as_tasks(x, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/as_task.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a Task — as_task","text":"x () Object convert. ... () Additional arguments. clone (logical(1)) TRUE, ensures returned object input x.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_task_classif.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a Classification Task — as_task_classif","title":"Convert to a Classification Task — as_task_classif","text":"Convert object TaskClassif. S3 generic. mlr3 ships methods following objects: TaskClassif: returns object -, possibly cloned. formula, data.frame(), matrix(), Matrix::Matrix() DataBackend: provides alternative constructor TaskClassif. TaskRegr: Calls convert_task(). Note target column converted factor(), possible.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_task_classif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a Classification Task — as_task_classif","text":"","code":"as_task_classif(x, ...)  # S3 method for class 'TaskClassif' as_task_classif(x, clone = FALSE, ...)  # S3 method for class 'data.frame' as_task_classif(   x,   target,   id = deparse1(substitute(x)),   positive = NULL,   label = NA_character_,   ... )  # S3 method for class 'matrix' as_task_classif(   x,   target,   id = deparse1(substitute(x)),   label = NA_character_,   ... )  # S3 method for class 'Matrix' as_task_classif(   x,   target,   id = deparse1(substitute(x)),   label = NA_character_,   ... )  # S3 method for class 'DataBackend' as_task_classif(   x,   target,   id = deparse1(substitute(x)),   positive = NULL,   label = NA_character_,   ... )  # S3 method for class 'TaskRegr' as_task_classif(   x,   target,   drop_original_target = FALSE,   drop_levels = TRUE,   ... )  # S3 method for class 'formula' as_task_classif(   x,   data,   id = deparse1(substitute(data)),   positive = NULL,   label = NA_character_,   ... )"},{"path":"https://mlr3.mlr-org.com/dev/reference/as_task_classif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a Classification Task — as_task_classif","text":"x () Object convert. ... () Additional arguments. clone (logical(1)) TRUE, ensures returned object input x. target (character(1)) Name target column. id (character(1)) Id new task. Defaults (deparsed substituted) name data argument. positive (character(1)) Level positive class. See TaskClassif. label (character(1)) Label new instance. drop_original_target (logical(1)) FALSE (default), original target added feature. Otherwise original target dropped. drop_levels (logical(1)) TRUE (default), unused levels new target variable dropped. data (data.frame()) Data frame containing columns referenced formula x.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_task_classif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to a Classification Task — as_task_classif","text":"TaskClassif.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_task_classif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to a Classification Task — as_task_classif","text":"","code":"as_task_classif(palmerpenguins::penguins, target = \"species\") #>  #> ── <TaskClassif> (344x8) ─────────────────────────────────────────────────────── #> • Target: species #> • Target classes: Adelie (44%), Gentoo (36%), Chinstrap (20%) #> • Properties: multiclass #> • Features (7): #>   • int (3): body_mass_g, flipper_length_mm, year #>   • dbl (2): bill_depth_mm, bill_length_mm #>   • fct (2): island, sex"},{"path":"https://mlr3.mlr-org.com/dev/reference/as_task_regr.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a Regression Task — as_task_regr","title":"Convert to a Regression Task — as_task_regr","text":"Convert object TaskRegr. S3 generic. mlr3 ships methods following objects: TaskRegr: returns object -, possibly cloned. formula, data.frame(), matrix(), Matrix::Matrix() DataBackend: provides alternative constructor TaskRegr. TaskClassif: Calls convert_task().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_task_regr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a Regression Task — as_task_regr","text":"","code":"as_task_regr(x, ...)  # S3 method for class 'TaskRegr' as_task_regr(x, clone = FALSE, ...)  # S3 method for class 'data.frame' as_task_regr(   x,   target,   id = deparse1(substitute(x)),   label = NA_character_,   ... )  # S3 method for class 'matrix' as_task_regr(   x,   target,   id = deparse1(substitute(x)),   label = NA_character_,   ... )  # S3 method for class 'Matrix' as_task_regr(   x,   target,   id = deparse1(substitute(x)),   label = NA_character_,   ... )  # S3 method for class 'DataBackend' as_task_regr(   x,   target,   id = deparse1(substitute(x)),   label = NA_character_,   ... )  # S3 method for class 'TaskClassif' as_task_regr(x, target, drop_original_target = FALSE, drop_levels = TRUE, ...)  # S3 method for class 'formula' as_task_regr(   x,   data,   id = deparse1(substitute(data)),   label = NA_character_,   ... )"},{"path":"https://mlr3.mlr-org.com/dev/reference/as_task_regr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a Regression Task — as_task_regr","text":"x () Object convert. ... () Additional arguments. clone (logical(1)) TRUE, ensures returned object input x. target (character(1)) Name target column. id (character(1)) Id new task. Defaults (deparsed substituted) name data argument. label (character(1)) Label new instance. drop_original_target (logical(1)) FALSE (default), original target added feature. Otherwise original target dropped. drop_levels (logical(1)) TRUE (default), unused levels new target variable dropped. data (data.frame()) Data frame containing columns referenced formula x.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_task_regr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to a Regression Task — as_task_regr","text":"TaskRegr.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_task_regr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to a Regression Task — as_task_regr","text":"","code":"as_task_regr(datasets::mtcars, target = \"mpg\") #>  #> ── <TaskRegr> (32x11) ────────────────────────────────────────────────────────── #> • Target: mpg #> • Properties: - #> • Features (10): #>   • dbl (10): am, carb, cyl, disp, drat, gear, hp, qsec, vs, wt"},{"path":"https://mlr3.mlr-org.com/dev/reference/as_task_unsupervised.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to an Unsupervised Task — as_task_unsupervised","title":"Convert to an Unsupervised Task — as_task_unsupervised","text":"Convert object TaskUnsupervised list TaskUnsupervised.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/as_task_unsupervised.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to an Unsupervised Task — as_task_unsupervised","text":"","code":"as_task_unsupervised(x, ...)  # S3 method for class 'Task' as_task_unsupervised(x, clone = FALSE, ...)  # S3 method for class 'data.frame' as_task_unsupervised(   x,   id = deparse1(substitute(x)),   label = NA_character_,   ... )  # S3 method for class 'DataBackend' as_task_unsupervised(   x,   id = deparse1(substitute(x)),   label = NA_character_,   ... )  as_tasks_unsupervised(x, ...)  # S3 method for class 'list' as_tasks_unsupervised(x, clone = FALSE, ...)  # S3 method for class 'Task' as_tasks_unsupervised(x, clone = FALSE, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/as_task_unsupervised.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to an Unsupervised Task — as_task_unsupervised","text":"x () Object convert. ... () Additional arguments. clone (logical(1)) TRUE, ensures returned object input x. id (character(1)) Id new task. Defaults (deparsed substituted) name data argument. label (character(1)) Label new instance.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/assert_empty_ellipsis.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert Empty Ellipsis — assert_empty_ellipsis","title":"Assert Empty Ellipsis — assert_empty_ellipsis","text":"Assert ... arguments empty. Use function S3-methods ensure misspelling arguments go unnoticed.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/assert_empty_ellipsis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert Empty Ellipsis — assert_empty_ellipsis","text":"","code":"assert_empty_ellipsis(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/assert_empty_ellipsis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert Empty Ellipsis — assert_empty_ellipsis","text":"... () Ellipsis arguments check.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/assert_empty_ellipsis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assert Empty Ellipsis — assert_empty_ellipsis","text":"NULL","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/assert_resample_callback.html","id":null,"dir":"Reference","previous_headings":"","what":"Assertions for Callbacks — assert_resample_callback","title":"Assertions for Callbacks — assert_resample_callback","text":"Assertions CallbackResample class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/assert_resample_callback.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assertions for Callbacks — assert_resample_callback","text":"","code":"assert_resample_callback(callback, null_ok = FALSE)  assert_resample_callbacks(callbacks, null_ok = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/assert_resample_callback.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assertions for Callbacks — assert_resample_callback","text":"callback (CallbackResample). null_ok (logical(1)) TRUE, NULL allowed. callbacks (list CallbackResample).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/assert_resample_callback.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assertions for Callbacks — assert_resample_callback","text":"CallbackResample | List CallbackResamples.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/auto_convert.html","id":null,"dir":"Reference","previous_headings":"","what":"Column Auto-Converter — auto_convert","title":"Column Auto-Converter — auto_convert","text":"Set rules automatically convert column types. used rbind-ing Tasks, also pipe operators mlr3pipelines. rules stored functions mlr_reflections$auto_converters.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/auto_convert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Column Auto-Converter — auto_convert","text":"","code":"auto_convert(value, id, type, levels)"},{"path":"https://mlr3.mlr-org.com/dev/reference/auto_convert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Column Auto-Converter — auto_convert","text":"value () New values convert order match type. id (character(1)) Name column, used error messages. type (character(1)) Type convert values . levels (character() | NULL) Levels use conversion factor ordered.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/auto_convert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Column Auto-Converter — auto_convert","text":"Vector value converted type type.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/benchmark.html","id":null,"dir":"Reference","previous_headings":"","what":"Benchmark Multiple Learners on Multiple Tasks — benchmark","title":"Benchmark Multiple Learners on Multiple Tasks — benchmark","text":"Runs benchmark arbitrary combinations tasks (Task), learners (Learner), resampling strategies (Resampling), possibly parallel. large-scale benchmarking recommend use mlr3batchmark package. package runs benchmark experiments high-performance computing clusters handles failed experiments.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/benchmark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Benchmark Multiple Learners on Multiple Tasks — benchmark","text":"","code":"benchmark(   design,   store_models = FALSE,   store_backends = TRUE,   encapsulate = NA_character_,   allow_hotstart = FALSE,   clone = c(\"task\", \"learner\", \"resampling\"),   unmarshal = TRUE,   callbacks = NULL )"},{"path":"https://mlr3.mlr-org.com/dev/reference/benchmark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Benchmark Multiple Learners on Multiple Tasks — benchmark","text":"design (data.frame()) Data frame (data.table::data.table()) three columns: \"task\", \"learner\", \"resampling\". row defines resampling providing Task, Learner instantiated Resampling strategy. helper function benchmark_grid() can assist generating exhaustive design (see examples) instantiate Resamplings per Task. Additionally, can set additional column 'param_values', see benchmark_grid(). store_models (logical(1)) Store fitted model resulting object= Set TRUE want analyse models want extract information like variable importance. store_backends (logical(1)) Keep DataBackend Task ResampleResult? Set TRUE performance measures require Task, analyse results conveniently. Set FALSE reduce file size memory footprint serialization. current default TRUE, eventually changed future release. encapsulate (character(1)) NA, enables encapsulation setting field Learner$encapsulate one supported values: \"none\" (disable encapsulation), \"try\" (captures errors output printed console logged), \"evaluate\" (execute via evaluate) \"callr\" (start external session via callr). NA, encapsulation changed, .e. settings individual learner active. Additionally, encapsulation set \"evaluate\" \"callr\", fallback learner set featureless learner learner already fallback configured. allow_hotstart (logical(1)) Determines learner(s) hot started trained models $hotstart_stack. See also HotstartStack. clone (character()) Select input objects cloned proceeding providing set possible values \"task\", \"learner\" \"resampling\" Task, Learner Resampling, respectively. Per default, input objects cloned. unmarshal Learner Whether unmarshal learners marshaled execution. TRUE models stored unmarshaled form. FALSE, learners (need marshaling) stored marshaled form. callbacks (List mlr3misc::Callback) Callbacks executed resampling process. See CallbackResample ContextResample details.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/benchmark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Benchmark Multiple Learners on Multiple Tasks — benchmark","text":"BenchmarkResult.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/benchmark.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Benchmark Multiple Learners on Multiple Tasks — benchmark","text":"fitted models discarded predictions scored order reduce memory consumption. need access models later analysis, set store_models TRUE.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/benchmark.html","id":"stochasticity","dir":"Reference","previous_headings":"","what":"Stochasticity","title":"Benchmark Multiple Learners on Multiple Tasks — benchmark","text":"Note uninstantiated Resamplings instantiated task, making function stochastic even case deterministic learners.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/benchmark.html","id":"predict-sets","dir":"Reference","previous_headings":"","what":"Predict Sets","title":"Benchmark Multiple Learners on Multiple Tasks — benchmark","text":"want compare performance learner training performance test set, configure Learner predict multiple sets setting field predict_sets c(\"train\", \"test\") (default \"test\"). set yields separate Prediction object resampling. next step, configure measures operate respective Prediction object:   (list ) created measures can finally passed $aggregate() $score().","code":"m1 = msr(\"classif.ce\", id = \"ce.train\", predict_sets = \"train\") m2 = msr(\"classif.ce\", id = \"ce.test\", predict_sets = \"test\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/benchmark.html","id":"parallelization","dir":"Reference","previous_headings":"","what":"Parallelization","title":"Benchmark Multiple Learners on Multiple Tasks — benchmark","text":"function can parallelized future package. One job one resampling iteration, jobs send apply function future.apply single batch. select parallel backend, use future::plan(). parallelization can found book: https://mlr3book.mlr-org.com/chapters/chapter10/advanced_technical_aspects_of_mlr3.html","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/benchmark.html","id":"progress-bars","dir":"Reference","previous_headings":"","what":"Progress Bars","title":"Benchmark Multiple Learners on Multiple Tasks — benchmark","text":"function supports progress bars via package progressr. Simply wrap function call progressr::with_progress() enable . Alternatively, call progressr::handlers() global = TRUE enable progress bars globally. recommend progress package backend can enabled progressr::handlers(\"progress\").","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/benchmark.html","id":"logging","dir":"Reference","previous_headings":"","what":"Logging","title":"Benchmark Multiple Learners on Multiple Tasks — benchmark","text":"mlr3 uses lgr package logging. lgr supports multiple log levels can queried getOption(\"lgr.log_levels\"). suppress output reduce verbosity, can lower log default level \"info\" \"warn\":   get additional log output debugging, increase log level \"debug\" \"trace\":   log file data base, see documentation lgr::lgr-package.","code":"lgr::get_logger(\"mlr3\")$set_threshold(\"warn\") lgr::get_logger(\"mlr3\")$set_threshold(\"debug\")"},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/benchmark.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Benchmark Multiple Learners on Multiple Tasks — benchmark","text":"","code":"# benchmarking with benchmark_grid() tasks = lapply(c(\"penguins\", \"sonar\"), tsk) learners = lapply(c(\"classif.featureless\", \"classif.rpart\"), lrn) resamplings = rsmp(\"cv\", folds = 3)  design = benchmark_grid(tasks, learners, resamplings) print(design) #>        task             learner resampling #>      <char>              <char>     <char> #> 1: penguins classif.featureless         cv #> 2: penguins       classif.rpart         cv #> 3:    sonar classif.featureless         cv #> 4:    sonar       classif.rpart         cv  set.seed(123) bmr = benchmark(design)  ## Data of all resamplings head(as.data.table(bmr)) #>                                   uhash                   task #>                                  <char>                 <list> #> 1: 3384b8d3-729e-48e9-8999-1fabe524c17b <TaskClassif:penguins> #> 2: 3384b8d3-729e-48e9-8999-1fabe524c17b <TaskClassif:penguins> #> 3: 3384b8d3-729e-48e9-8999-1fabe524c17b <TaskClassif:penguins> #> 4: 7e346ebd-d88d-457a-be2d-fb4f778b7a77 <TaskClassif:penguins> #> 5: 7e346ebd-d88d-457a-be2d-fb4f778b7a77 <TaskClassif:penguins> #> 6: 7e346ebd-d88d-457a-be2d-fb4f778b7a77 <TaskClassif:penguins> #>                                            learner     resampling iteration #>                                             <list>         <list>     <int> #> 1: <LearnerClassifFeatureless:classif.featureless> <ResamplingCV>         1 #> 2: <LearnerClassifFeatureless:classif.featureless> <ResamplingCV>         2 #> 3: <LearnerClassifFeatureless:classif.featureless> <ResamplingCV>         3 #> 4:             <LearnerClassifRpart:classif.rpart> <ResamplingCV>         1 #> 5:             <LearnerClassifRpart:classif.rpart> <ResamplingCV>         2 #> 6:             <LearnerClassifRpart:classif.rpart> <ResamplingCV>         3 #>             prediction  task_id          learner_id resampling_id #>                 <list>   <char>              <char>        <char> #> 1: <PredictionClassif> penguins classif.featureless            cv #> 2: <PredictionClassif> penguins classif.featureless            cv #> 3: <PredictionClassif> penguins classif.featureless            cv #> 4: <PredictionClassif> penguins       classif.rpart            cv #> 5: <PredictionClassif> penguins       classif.rpart            cv #> 6: <PredictionClassif> penguins       classif.rpart            cv  ## Aggregated performance values aggr = bmr$aggregate() print(aggr) #>       nr  task_id          learner_id resampling_id iters classif.ce #>    <int>   <char>              <char>        <char> <int>      <num> #> 1:     1 penguins classif.featureless            cv     3  0.5580219 #> 2:     2 penguins       classif.rpart            cv     3  0.0756420 #> 3:     3    sonar classif.featureless            cv     3  0.4661146 #> 4:     4    sonar       classif.rpart            cv     3  0.2836439 #> Hidden columns: resample_result  ## Extract predictions of first resampling result rr = aggr$resample_result[[1]] as.data.table(rr$prediction()) #>      row_ids     truth response #>        <int>    <fctr>   <fctr> #>   1:       1    Adelie   Adelie #>   2:       3    Adelie   Adelie #>   3:       4    Adelie   Adelie #>   4:       9    Adelie   Adelie #>   5:      11    Adelie   Adelie #>  ---                            #> 340:     326 Chinstrap   Adelie #> 341:     327 Chinstrap   Adelie #> 342:     329 Chinstrap   Adelie #> 343:     338 Chinstrap   Adelie #> 344:     342 Chinstrap   Adelie  # Benchmarking with a custom design: # - fit classif.featureless on penguins with a 3-fold CV # - fit classif.rpart on sonar using a holdout tasks = list(tsk(\"penguins\"), tsk(\"sonar\")) learners = list(lrn(\"classif.featureless\"), lrn(\"classif.rpart\")) resamplings = list(rsmp(\"cv\", folds = 3), rsmp(\"holdout\"))  design = data.table::data.table(   task = tasks,   learner = learners,   resampling = resamplings )  ## Instantiate resamplings design$resampling = Map(   function(task, resampling) resampling$clone()$instantiate(task),   task = design$task, resampling = design$resampling )  ## Run benchmark bmr = benchmark(design) print(bmr) #>  #> ── <BenchmarkResult> of 4 rows with 2 resampling run ─────────────────────────── #>  nr  task_id          learner_id resampling_id iters warnings errors #>   1 penguins classif.featureless            cv     3        0      0 #>   2    sonar       classif.rpart       holdout     1        0      0  ## Get the training set of the 2nd iteration of the featureless learner on penguins rr = bmr$aggregate()[learner_id == \"classif.featureless\"]$resample_result[[1]] rr$resampling$train_set(2) #>   [1]   5   7   8   9  12  13  17  19  22  25  28  35  36  40  46  48  49  50 #>  [19]  52  53  54  60  61  62  63  67  69  72  73  74  75  76  78  81  84  85 #>  [37]  88  92  97 101 103 104 109 110 114 119 122 127 129 130 131 136 145 147 #>  [55] 156 160 162 163 166 170 172 173 177 179 180 184 185 188 190 191 193 194 #>  [73] 205 212 213 217 218 221 228 229 233 234 238 239 245 250 252 255 256 258 #>  [91] 259 263 264 267 271 278 281 282 287 291 295 296 297 300 302 307 309 317 #> [109] 319 321 325 327 331 337 341   3   4  10  11  15  23  24  31  32  38  39 #> [127]  41  42  43  45  56  57  58  64  68  77  79  87  93  99 100 102 111 112 #> [145] 113 115 118 120 124 126 128 132 133 134 135 137 142 143 146 148 149 151 #> [163] 153 154 155 159 161 164 169 171 174 182 186 189 195 196 197 199 200 203 #> [181] 204 207 210 215 219 220 223 224 226 227 230 240 242 243 246 247 251 253 #> [199] 261 266 269 273 274 275 276 277 279 284 286 288 289 290 292 293 301 306 #> [217] 308 313 314 315 316 318 323 330 335 336 338 343 344"},{"path":"https://mlr3.mlr-org.com/dev/reference/benchmark_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Benchmark Grid Design — benchmark_grid","title":"Generate a Benchmark Grid Design — benchmark_grid","text":"Takes lists Task, list Learner list Resampling generate design expand.grid() fashion (.k.. cross join Cartesian product). two modes operation, depending flag paired. paired set FALSE (default), resampling strategies allowed instantiated, instead instantiated per task internally. exception rule applies tasks exactly row ids, resamplings instantiated tasks. grid generated based Cartesian product tasks, learners, resamplings. resamplings instantiated tasks, reproducibility requires seed set calling function, process stochastic. paired set TRUE, tasks resamplings treated pairs. means must provide many tasks corresponding instantiated resamplings. grid generated based Cartesian product learners pairs.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/benchmark_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Benchmark Grid Design — benchmark_grid","text":"","code":"benchmark_grid(   tasks,   learners,   resamplings,   param_values = NULL,   paired = FALSE )"},{"path":"https://mlr3.mlr-org.com/dev/reference/benchmark_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Benchmark Grid Design — benchmark_grid","text":"tasks (list Task). learners (list Learner). resamplings (list Resampling). param_values (list()) want try many parameter settings learners, can pass design optimized faster creating learners setting. list lists named lists, outer inner: One list element Learner. One list element hyperparameter configuration try. Named list hyperparameter settings set Learner, possibly overwriting already set set hyperparameters Learner. paired (logical(1)) Set TRUE resamplings instantiated tasks, .e., tasks resamplings paired. need provide number tasks instantiated resamplings.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/benchmark_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Benchmark Grid Design — benchmark_grid","text":"(data.table::data.table()) cross product input vectors.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/benchmark_grid.html","id":"errors-and-warnings","dir":"Reference","previous_headings":"","what":"Errors and Warnings","title":"Generate a Benchmark Grid Design — benchmark_grid","text":"varying_predict_types: warning thrown learners different predict_types.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/benchmark_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Benchmark Grid Design — benchmark_grid","text":"","code":"tasks = list(tsk(\"penguins\"), tsk(\"sonar\")) learners = list(lrn(\"classif.featureless\"), lrn(\"classif.rpart\")) resamplings = list(rsmp(\"cv\"), rsmp(\"subsampling\"))  # Set a seed to ensure reproducibility of the resampling instantiation set.seed(123) grid = benchmark_grid(tasks, learners, resamplings) # the resamplings are now instantiated head(grid$resampling[[1]]$instance) #> Key: <fold> #>    row_id  fold #>     <int> <int> #> 1:     12     1 #> 2:     22     1 #> 3:     24     1 #> 4:     42     1 #> 5:     47     1 #> 6:     69     1 print(grid) #>        task             learner  resampling #>      <char>              <char>      <char> #> 1: penguins classif.featureless          cv #> 2: penguins classif.featureless subsampling #> 3: penguins       classif.rpart          cv #> 4: penguins       classif.rpart subsampling #> 5:    sonar classif.featureless          cv #> 6:    sonar classif.featureless subsampling #> 7:    sonar       classif.rpart          cv #> 8:    sonar       classif.rpart subsampling if (FALSE) { # \\dontrun{ benchmark(grid) } # }  # paired learner = lrn(\"classif.rpart\") task1 = tsk(\"penguins\") task2 = tsk(\"german_credit\") res1 = rsmp(\"holdout\") res2 = rsmp(\"holdout\") res1$instantiate(task1) res2$instantiate(task2) design = benchmark_grid(list(task1, task2), learner, list(res1, res2), paired = TRUE) print(design) #>             task       learner resampling #>           <char>        <char>     <char> #> 1:      penguins classif.rpart    holdout #> 2: german_credit classif.rpart    holdout  # manual construction of the grid with data.table::CJ() grid = data.table::CJ(  task = tasks,   learner = learners,   resampling = resamplings,   sorted = FALSE )  # manual instantiation (not suited for a fair comparison of learners!) Map(function(task, resampling) {   resampling$instantiate(task) }, task = grid$task, resampling = grid$resampling) #> [[1]] #>  #> ── <ResamplingCV> : Cross-Validation ─────────────────────────────────────────── #> • Iterations: 10 #> • Instantiated: TRUE #> • Parameters: folds=10 #>  #> [[2]] #>  #> ── <ResamplingSubsampling> : Subsampling ─────────────────────────────────────── #> • Iterations: 30 #> • Instantiated: TRUE #> • Parameters: ratio=0.6667, repeats=30 #>  #> [[3]] #>  #> ── <ResamplingCV> : Cross-Validation ─────────────────────────────────────────── #> • Iterations: 10 #> • Instantiated: TRUE #> • Parameters: folds=10 #>  #> [[4]] #>  #> ── <ResamplingSubsampling> : Subsampling ─────────────────────────────────────── #> • Iterations: 30 #> • Instantiated: TRUE #> • Parameters: ratio=0.6667, repeats=30 #>  #> [[5]] #>  #> ── <ResamplingCV> : Cross-Validation ─────────────────────────────────────────── #> • Iterations: 10 #> • Instantiated: TRUE #> • Parameters: folds=10 #>  #> [[6]] #>  #> ── <ResamplingSubsampling> : Subsampling ─────────────────────────────────────── #> • Iterations: 30 #> • Instantiated: TRUE #> • Parameters: ratio=0.6667, repeats=30 #>  #> [[7]] #>  #> ── <ResamplingCV> : Cross-Validation ─────────────────────────────────────────── #> • Iterations: 10 #> • Instantiated: TRUE #> • Parameters: folds=10 #>  #> [[8]] #>  #> ── <ResamplingSubsampling> : Subsampling ─────────────────────────────────────── #> • Iterations: 30 #> • Instantiated: TRUE #> • Parameters: ratio=0.6667, repeats=30 #>  if (FALSE) { # \\dontrun{ benchmark(grid) } # }"},{"path":"https://mlr3.mlr-org.com/dev/reference/california_housing.html","id":null,"dir":"Reference","previous_headings":"","what":"Median House Value in California — california_housing","title":"Median House Value in California — california_housing","text":"regression task predict median house value California. Contains 9 features 20640 observations. Target column \"median_house_value\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/california_housing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Median House Value in California — california_housing","text":"R6::R6Class inheriting TaskRegr.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/california_housing.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Median House Value in California — california_housing","text":"https://www.kaggle.com/datasets/camnugent/california-housing-prices","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/california_housing.html","id":"construction","dir":"Reference","previous_headings":"","what":"Construction","title":"Median House Value in California — california_housing","text":"","code":"mlr_tasks$get(\"california_housing\") tsk(\"california_housing\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/california_housing.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Median House Value in California — california_housing","text":"Task type: “regr” Dimensions: 20640x10 Properties: - Missings: TRUE Target: “median_house_value” Features: “households”, “housing_median_age”, “latitude”, “longitude”, “median_income”, “ocean_proximity”, “population”, “total_bedrooms”, “total_rooms”","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/callback_resample.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Evaluation Callback — callback_resample","title":"Create Evaluation Callback — callback_resample","text":"Function create CallbackResample. Predefined callbacks stored dictionary mlr_callbacks can retrieved clbk(). Evaluation callbacks called different stages resampling process. stage called per resampling iteration. stages prefixed on_resample_*. text brackets indicates happens stages internal workhorse() function accesses ContextResample (ctx) typical stage.   callback can store data ctx$learner$state ctx$data_extra. data ctx$data_extra stored ResampleResult BenchmarkResult. See also section parameters information stages.","code":"Start Resampling Iteration on Worker  - on_resample_begin    (Split `ctx$task` into training and test set with `ctx$resampling` and `ctx$iteration`)  - on_resample_before_train    (Train the learner `ctx$learner` on training data)  - on_resample_before_predict    (Predict on predict sets and store prediction data `ctx$pdatas`)  - on_resample_end    (Erase model `ctx$learner$model` if requested and return results) End Resampling Iteration on Worker"},{"path":"https://mlr3.mlr-org.com/dev/reference/callback_resample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Evaluation Callback — callback_resample","text":"","code":"callback_resample(   id,   label = NA_character_,   man = NA_character_,   on_resample_begin = NULL,   on_resample_before_train = NULL,   on_resample_before_predict = NULL,   on_resample_end = NULL )"},{"path":"https://mlr3.mlr-org.com/dev/reference/callback_resample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Evaluation Callback — callback_resample","text":"id (character(1)) Identifier new instance. label (character(1)) Label new instance. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help(). on_resample_begin (function()) Stage called beginning evaluation. Called workhorse() (internal). on_resample_before_train (function()) Stage called training learner. Called workhorse() (internal). on_resample_before_predict (function()) Stage called predicting. Called workhorse() (internal). on_resample_end (function()) Stage called end evaluation. Called workhorse() (internal).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/callback_resample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Evaluation Callback — callback_resample","text":"implementing callback, function must two arguments named callback context. callback can write data state ($state), e.g. settings affect callback . highly discourage changing task, learner resampling objects via callback.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/callback_resample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Evaluation Callback — callback_resample","text":"","code":"learner = lrn(\"classif.rpart\") task = tsk(\"pima\") resampling = rsmp(\"cv\", folds = 3)  # save selected features callback callback = callback_resample(\"selected_features\",  on_resample_end = function(callback, context) {     context$learner$state$selected_features = context$learner$selected_features()   } )  rr = resample(task, learner, resampling, callbacks = callback) rr$learners[[1]]$state$selected_features #> [1] \"glucose\"  \"age\"      \"mass\"     \"pedigree\" \"pressure\"  # holdout task callback callback = callback_resample(\"holdout_task\",   on_resample_before_predict = function(callback, context) {     pred = context$learner$predict(callback$state$task)     context$data_extra = list(prediction_holdout = pred)   } )  task_holdout = tsk(\"pima\") splits = partition(task, 0.7) task$filter(splits$train) task_holdout$filter(splits$test)  callback$state$task = task_holdout  rr = resample(task, learner, resampling, callbacks = callback) rr$data_extra #> Key: <uhash, iteration> #>                                   uhash iteration data_extra #>                                  <char>     <int>     <list> #> 1: c933e926-0b78-4d7c-bfa6-55b12fb89a96         1  <list[1]> #> 2: c933e926-0b78-4d7c-bfa6-55b12fb89a96         2  <list[1]> #> 3: c933e926-0b78-4d7c-bfa6-55b12fb89a96         3  <list[1]>"},{"path":"https://mlr3.mlr-org.com/dev/reference/col_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Column Information for Backend — col_info","title":"Column Information for Backend — col_info","text":"Collects column information backend. Currently, includes: storage type levels (factor / ordered), primary key column","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/col_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Column Information for Backend — col_info","text":"","code":"col_info(x, ...)  # S3 method for class 'data.table' col_info(x, primary_key = character(), ...)  # S3 method for class 'DataBackend' col_info(x, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/col_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Column Information for Backend — col_info","text":"x () backend-like object retrieve column information. ... () Additional arguments. primary_key (character()) primary key backend.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/convert_task.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Task from One Type to Another — convert_task","title":"Convert a Task from One Type to Another — convert_task","text":"task's target replaced different column data.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/convert_task.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Task from One Type to Another — convert_task","text":"","code":"convert_task(   intask,   target = NULL,   new_type = NULL,   drop_original_target = FALSE,   drop_levels = TRUE )"},{"path":"https://mlr3.mlr-org.com/dev/reference/convert_task.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Task from One Type to Another — convert_task","text":"intask (Task) Task converted. target (character(1)) New target set, must column intask data. NULL, new target set, task converted -. new_type (character(1)) new task type. Must mlr_reflections$task_types]. NULL (default), new task task_type created. drop_original_target (logical(1)) FALSE (default), original target added feature. Otherwise original target dropped. drop_levels (logical(1)) TRUE (default), unused levels new target variable dropped.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/convert_task.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a Task from One Type to Another — convert_task","text":"Task requested type.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/default_fallback.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Fallback Learner — default_fallback","title":"Create a Fallback Learner — default_fallback","text":"Create fallback learner given learner. function searches suitable fallback learner based task type. Additional checks performed ensure fallback learner supports predict type.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/default_fallback.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Fallback Learner — default_fallback","text":"","code":"default_fallback(learner, ...)  # S3 method for class 'Learner' default_fallback(learner, ...)  # S3 method for class 'LearnerClassif' default_fallback(learner, ...)  # S3 method for class 'LearnerRegr' default_fallback(learner, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/default_fallback.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Fallback Learner — default_fallback","text":"learner Learner learner fallback learner created. ... ignored.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/default_fallback.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Fallback Learner — default_fallback","text":"Learner","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/default_measures.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Default Measure — default_measures","title":"Get the Default Measure — default_measures","text":"Gets default measures using information mlr_reflections$default_measures: \"classif.ce\" classification (\"classif\"). \"regr.mse\" regression (\"regr\"). Add-package may register additional default measures task types.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/default_measures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Default Measure — default_measures","text":"","code":"default_measures(task_type)"},{"path":"https://mlr3.mlr-org.com/dev/reference/default_measures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Default Measure — default_measures","text":"task_type (character(1)) Get default measure task type task_type, e.g., \"classif\" \"regr\". task_type NULL, empty list returned.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/default_measures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Default Measure — default_measures","text":"list Measure.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/default_measures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Default Measure — default_measures","text":"","code":"default_measures(\"classif\") #> $classif.ce #>  #> ── <MeasureClassifSimple> (classif.ce): Classification Error ─────────────────── #> • Packages: mlr3 and mlr3measures #> • Range: [0, 1] #> • Minimize: TRUE #> • Average: macro #> • Parameters: list() #> • Properties: weights #> • Predict type: response #> • Predict sets: test #> • Aggregator: mean() #>  default_measures(\"regr\") #> $regr.mse #>  #> ── <MeasureRegrSimple> (regr.mse): Mean Squared Error ────────────────────────── #> • Packages: mlr3 and mlr3measures #> • Range: [0, Inf] #> • Minimize: TRUE #> • Average: macro #> • Parameters: list() #> • Properties: weights #> • Predict type: response #> • Predict sets: test #> • Aggregator: mean() #>"},{"path":"https://mlr3.mlr-org.com/dev/reference/deprecated_binding.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Active Binding that Generates a Deprecation Warning — deprecated_binding","title":"Create an Active Binding that Generates a Deprecation Warning — deprecated_binding","text":"Creates active binding generates warning accessed, using warn_deprecated(). active binding otherwise read-.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/deprecated_binding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Active Binding that Generates a Deprecation Warning — deprecated_binding","text":"","code":"deprecated_binding(what, value)"},{"path":"https://mlr3.mlr-org.com/dev/reference/deprecated_binding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Active Binding that Generates a Deprecation Warning — deprecated_binding","text":"(character(1)) description deprecated binding. form \"Class$field\". value () value active binding. expression evaluated context active binding. , example, refer self.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/deprecated_binding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an Active Binding that Generates a Deprecation Warning — deprecated_binding","text":"","code":"MyClass = R6::R6Class(\"MyClass\", public = list(),   active = list(     foo = deprecated_binding(\"MyClass$foo\", \"bar\")   ) ) mco = MyClass$new() mco$foo #> Warning: MyClass$foo is deprecated and will be removed in the future. #> [1] \"bar\""},{"path":"https://mlr3.mlr-org.com/dev/reference/install_pkgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Install (Missing) Packages — install_pkgs","title":"Install (Missing) Packages — install_pkgs","text":"extract_pkgs() extracts required package various objects, including TaskGenerator, Learner, Measure objects extension packages mlr3pipelines mlr3filters. applied list, function called recursively elements. install_pkgs() calls extract_pkgs() internally proceeds installation extracted packages.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/install_pkgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install (Missing) Packages — install_pkgs","text":"","code":"install_pkgs(x, ...)  extract_pkgs(x)  # S3 method for class 'character' extract_pkgs(x)  # S3 method for class 'R6' extract_pkgs(x)  # S3 method for class 'list' extract_pkgs(x)  # S3 method for class 'ResampleResult' extract_pkgs(x)  # S3 method for class 'BenchmarkResult' extract_pkgs(x)"},{"path":"https://mlr3.mlr-org.com/dev/reference/install_pkgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install (Missing) Packages — install_pkgs","text":"x () Object package information (list objects). ... () Additional arguments passed remotes::install_cran() remotes::install_github(). Arguments force upgrade often important context.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/install_pkgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install (Missing) Packages — install_pkgs","text":"extract_pkgs() returns character() package strings, install_pkgs() returns names extracted packages invisibly.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/install_pkgs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install (Missing) Packages — install_pkgs","text":"package contains forward slash ('/'), assumed package hosted GitHub \"<user>/<repo>\" format, string passed remotes::install_github(). Otherwise, package name passed remotes::install_cran().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/install_pkgs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install (Missing) Packages — install_pkgs","text":"","code":"extract_pkgs(lrns(c(\"regr.rpart\", \"regr.featureless\"))) #> [1] \"mlr3\"  \"rpart\" \"stats\""},{"path":"https://mlr3.mlr-org.com/dev/reference/marshaling.html","id":null,"dir":"Reference","previous_headings":"","what":"(Un)marshal a Learner — marshaling","title":"(Un)marshal a Learner — marshaling","text":"Marshaling process processing model trained Learner successfully serialized deserialized. naming inspired marshal package plan fully migrate package CRAN. current implementation therfore considered temporary solution likely change future. central functions (methods used mlr3 internally) : S3 generic marshal_model(model, inplace, ...). takes model returns marshaled form. means, resulting object can serialized de-serialzed without loss information. model serializable anyway, nothing implemented generic fall back default implementation marshal_model, return object -. Otherwise, marshaled object list named elements marshaled packages, former contains marshaled object, latter package contains packages required unmarshal. importantly, list contain package contains unmarshal_model method. returned object classes original object suffix \"_marshaled\" appended root class set \"marshaled\". S3 generic unmarshal_model(model, inplace ...). takes marshaled model returns unmarshaled form. generic takes care packages specified \"marshal\" loaded, errs availabe. Calling function marshaled model reconstruct original model, .e. unmarshal_model(marshal_model(x)) return x. default implementation generic returns x -. function is_marshaled_model(model). (helper) function returns TRUE model inherits class \"marshaled\" FALSE otherwise. Note guarateed is_marshaled_model(marshal_model(x)) returns TRUE. default marshal_model(x) returns x -. marshal_model unmarshal_model, inplace argument determines whether -place marshaling performed. especially relevant context references semantics. inplace FALSE, original input modified, otherwise allowed. Note input output can still share references, even inplace FALSE.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/marshaling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Un)marshal a Learner — marshaling","text":"","code":"learner_unmarshal(.learner, ...)  learner_marshal(.learner, ...)  learner_marshaled(.learner)  marshal_model(model, inplace = FALSE, ...)  unmarshal_model(model, inplace = FALSE, ...)  is_marshaled_model(model)"},{"path":"https://mlr3.mlr-org.com/dev/reference/marshaling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Un)marshal a Learner — marshaling","text":".learner Learner learner. ... () Additional parameters, currently unused. model () Model marshal. inplace (logical(1)) Whether marshal -place.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/marshaling.html","id":"implementing-marshaling","dir":"Reference","previous_headings":"","what":"Implementing Marshaling","title":"(Un)marshal a Learner — marshaling","text":"order implement marshaling Learner, need overload marshal_model unmarshal_model methods class learner's model tag learner \"marshal\" property. make marshaling accessible R6-manner, also add public methods $marshal(), $unmarshal() active binding $marshaled. make convenient possible, functions learner_marshal(.learner, ...), learner_unmarshal(.learner, ...) learner_marshaled(.learner) provided can called public methods. can verify whether correctly implemented marshaling using internal test helper expect_marshalable_learner(learner, task). also run expect_learner() task provided. concrete example implement marshaling, see LearnerClassifDebug.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr3-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mlr3: Machine Learning in R - Next Generation — mlr3-package","title":"mlr3: Machine Learning in R - Next Generation — mlr3-package","text":"Efficient, object-oriented programming building blocks machine learning. Provides 'R6' objects tasks, learners, resamplings, measures. package geared towards scalability larger datasets supporting parallelization --memory data-backends like databases. 'mlr3' focuses core computational operations, add-packages provide additional functionality.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr3-package.html","id":"learn-mlr-","dir":"Reference","previous_headings":"","what":"Learn mlr3","title":"mlr3: Machine Learning in R - Next Generation — mlr3-package","text":"Book mlr3: https://mlr3book.mlr-org.com Use cases examples gallery: https://mlr3gallery.mlr-org.com Cheat Sheets: https://github.com/mlr-org/mlr3cheatsheets","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr3-package.html","id":"mlr-extensions","dir":"Reference","previous_headings":"","what":"mlr3 extensions","title":"mlr3: Machine Learning in R - Next Generation — mlr3-package","text":"Preprocessing machine learning pipelines: mlr3pipelines Analysis benchmark experiments: mlr3benchmark classification regression tasks: mlr3data Connector OpenML: mlr3oml Solid selection good classification regression learners: mlr3learners Even learners: https://github.com/mlr-org/mlr3extralearners Tuning hyperparameters: mlr3tuning Hyperband tuner: mlr3hyperband Visualizations many mlr3 objects: mlr3viz Survival analysis probabilistic regression: mlr3proba Cluster analysis: mlr3cluster Feature selection filters: mlr3filters Feature selection wrappers: mlr3fselect Interface real (--memory) data bases: mlr3db Performance measures plain functions: mlr3measures Resampling methods spatiotemporal data: mlr3spatiotempcv Data storage prediction support spatial objects: mlr3spatial","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr3-package.html","id":"suggested-packages","dir":"Reference","previous_headings":"","what":"Suggested packages","title":"mlr3: Machine Learning in R - Next Generation — mlr3-package","text":"Parallelization framework: future Progress bars: progressr Encapsulated evaluation: evaluate, callr (external process)","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr3-package.html","id":"package-options","dir":"Reference","previous_headings":"","what":"Package Options","title":"mlr3: Machine Learning in R - Next Generation — mlr3-package","text":"\"mlr3.exec_random\": Randomize order execution resample() benchmark() parallelization future. Defaults TRUE. Note affect order results. \"mlr3.exec_chunk_size\": Number iterations perform single future::future() parallelization future. Defaults 1. \"mlr3.exec_chunk_bins\": Number bins split iterations . set, \"mlr3.exec_chunk_size\" ignored. \"mlr3.debug\": set TRUE, parallelization via future disabled simplify debugging provide concise tracebacks. Note results computed debug mode use different seeding mechanism reproducible. \"mlr3.warn_version_mismatch\": Set FALSE silence warnings raised predict learner trained different version version mlr3. \"mlr3.prob_as_default\": Set TRUE set predict type classification learners \"prob\" default (support ).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr3-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"mlr3: Machine Learning in R - Next Generation — mlr3-package","text":"Lang M, Binder M, Richter J, Schratz P, Pfisterer F, Coors S, Au Q, Casalicchio G, Kotthoff L, Bischl B (2019). “mlr3: modern object-oriented machine learning framework R.” Journal Open Source Software. doi:10.21105/joss.01903 , https://joss.theoj.org/papers/10.21105/joss.01903.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr3-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mlr3: Machine Learning in R - Next Generation — mlr3-package","text":"Maintainer: Marc Becker marcbecker@posteo.de (ORCID) Authors: Michel Lang michellang@gmail.com (ORCID) Bernd Bischl bernd_bischl@gmx.net (ORCID) Jakob Richter jakob1richter@gmail.com (ORCID) Patrick Schratz patrick.schratz@gmail.com (ORCID) Martin Binder mlr.developer@mb706.com Florian Pfisterer pfistererf@googlemail.com (ORCID) Raphael Sonabend raphaelsonabend@gmail.com (ORCID) Sebastian Fischer sebf.fischer@gmail.com (ORCID) contributors: Giuseppe Casalicchio giuseppe.casalicchio@stat.uni-muenchen.de (ORCID) [contributor] Stefan Coors mail@stefancoors.de (ORCID) [contributor] Quay Au quayau@gmail.com (ORCID) [contributor] Lennart Schneider lennart.sch@web.de (ORCID) [contributor] Lona Koers lona.koers@gmail.com [contributor] John Zobolas bblodfon@gmail.com (ORCID) [contributor]","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr3.holdout_task.html","id":null,"dir":"Reference","previous_headings":"","what":"Callback Holdout Task — mlr3.holdout_task","title":"Callback Holdout Task — mlr3.holdout_task","text":"CallbackResample predicts additional holdout task training.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr3.holdout_task.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Callback Holdout Task — mlr3.holdout_task","text":"task (Task) holdout task.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr3.holdout_task.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Callback Holdout Task — mlr3.holdout_task","text":"","code":"task = tsk(\"pima\") task_holdout = task$clone() learner = lrn(\"classif.rpart\") resampling = rsmp(\"cv\", folds = 3) splits = partition(task, 0.7)  task$filter(splits$train) task_holdout$filter(splits$test)  callback = clbk(\"mlr3.holdout_task\", task = task_holdout)  rr = resample(task, learner, resampling = resampling, callbacks = callback)  rr$data_extra #> Key: <uhash, iteration> #>                                   uhash iteration data_extra #>                                  <char>     <int>     <list> #> 1: c1b7d507-3a99-4617-867e-789e148ad7f7         1  <list[1]> #> 2: c1b7d507-3a99-4617-867e-789e148ad7f7         2  <list[1]> #> 3: c1b7d507-3a99-4617-867e-789e148ad7f7         3  <list[1]>"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr3.model_extractor.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Extractor Callback — mlr3.model_extractor","title":"Model Extractor Callback — mlr3.model_extractor","text":"CallbackResample extracts information model training user-defined function. way information can extracted model without saving model (store_models = FALSE). fun must function takes learner input returns extracted information named list (see example). callback helpful call $selected_features(), $importance(), $oob_error() learner.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr3.model_extractor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Extractor Callback — mlr3.model_extractor","text":"fun (function(learner)) Function extract information learner. function must argument learner. function must return named list.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr3.model_extractor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model Extractor Callback — mlr3.model_extractor","text":"","code":"task = tsk(\"pima\") learner = lrn(\"classif.rpart\") resampling = rsmp(\"cv\", folds = 3)  # define function to extract selected features selected_features = function(learner) list(selected_features = learner$selected_features())  # create callback callback = clbk(\"mlr3.model_extractor\", fun = selected_features)  rr = resample(task, learner, resampling = resampling, store_models = FALSE, callbacks = callback)  rr$data_extra #> Key: <uhash, iteration> #>                                   uhash iteration data_extra #>                                  <char>     <int>     <list> #> 1: 30e2f815-73b1-4594-8e7f-dc2b9e1ef143         1  <list[1]> #> 2: 30e2f815-73b1-4594-8e7f-dc2b9e1ef143         2  <list[1]> #> 3: 30e2f815-73b1-4594-8e7f-dc2b9e1ef143         3  <list[1]>"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_assertions.html","id":null,"dir":"Reference","previous_headings":"","what":"Assertion for mlr3 Objects — mlr_assertions","title":"Assertion for mlr3 Objects — mlr_assertions","text":"Functions intended used packages extending mlr3. assertion functions ensure right class attribute, optionally additional properties. Additionally, following compound assertions implemented: assert_learnable(task, learner) (Task, Learner) -> NULL Checks learner applicable task. includes type checks type, feature types, properties. assertion fails, exception raised. Otherwise, input object returned invisibly. Asserts whether input valid value $validate field Learner.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_assertions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assertion for mlr3 Objects — mlr_assertions","text":"","code":"assert_backend(b, .var.name = vname(b))  assert_task(   task,   task_type = NULL,   feature_types = NULL,   task_properties = NULL,   .var.name = vname(task) )  assert_tasks(   tasks,   task_type = NULL,   feature_types = NULL,   task_properties = NULL,   .var.name = vname(tasks) )  assert_learner(   learner,   task = NULL,   task_type = NULL,   properties = character(),   .var.name = vname(learner) )  assert_learners(   learners,   task = NULL,   task_type = NULL,   properties = character(),   unique_ids = FALSE,   .var.name = vname(learners) )  assert_learnable(task, learner, param_values = NULL)  assert_predictable(task, learner)  assert_measure(   measure,   task = NULL,   learner = NULL,   prediction = NULL,   .var.name = vname(measure) )  assert_scorable(   measure,   task,   learner,   prediction = NULL,   .var.name = vname(measure) )  assert_measures(   measures,   task = NULL,   learner = NULL,   .var.name = vname(measures) )  assert_resampling(   resampling,   instantiated = NULL,   .var.name = vname(resampling) )  assert_resamplings(   resamplings,   instantiated = NULL,   .var.name = vname(resamplings) )  assert_prediction(prediction, .var.name = vname(prediction), null.ok = FALSE)  assert_resample_result(rr, .var.name = vname(rr))  assert_benchmark_result(bmr, .var.name = vname(bmr))  assert_row_ids(   row_ids,   task = NULL,   null.ok = FALSE,   .var.name = vname(row_ids) )  assert_has_backend(task)  assert_quantiles(learner, quantile_response = FALSE)  assert_validate(x)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_assertions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assertion for mlr3 Objects — mlr_assertions","text":"b (DataBackend). task (Task). task_type (character(1)). feature_types (character()) Feature types learner operates . Must subset mlr_reflections$task_feature_types. task_properties (character()) Set required task properties. tasks (list Task). learner (Learner). learners (list Learner). param_values (list()) TuneToken allowed parameter set learner. param_values overwrite TuneToken, assertion pass. measure (Measure). prediction (Prediction). measures (list Measure). resampling (Resampling). resamplings (list Resampling). rr (ResampleResult). bmr (BenchmarkResult). row_ids integer() Row indices. quantile_response (logical(1)) Whether check quantile response set. TRUE, learner must $quantile_response field set. x () input check.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners.html","id":null,"dir":"Reference","previous_headings":"","what":"Dictionary of Learners — mlr_learners","title":"Dictionary of Learners — mlr_learners","text":"simple mlr3misc::Dictionary storing objects class Learner. learner associated help page, see mlr_learners_[id]. dictionary can get populated additional learners add-packages. opinionated set solid classification regression learners, install load mlr3learners package. learners connected via https://github.com/mlr-org/mlr3extralearners. convenient way retrieve construct learners, see lrn()/lrns().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dictionary of Learners — mlr_learners","text":"R6::R6Class object inheriting mlr3misc::Dictionary.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Dictionary of Learners — mlr_learners","text":"See mlr3misc::Dictionary.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners.html","id":"s-methods","dir":"Reference","previous_headings":"","what":"S3 methods","title":"Dictionary of Learners — mlr_learners","text":".data.table(dict, ..., objects = FALSE)mlr3misc::Dictionary -> data.table::data.table() Returns data.table::data.table() fields \"key\", \"label\", \"task_type\", \"feature_types\", \"packages\", \"properties\", \"predict_types\" columns. objects set TRUE, constructed objects returned list column named object.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dictionary of Learners — mlr_learners","text":"","code":"as.data.table(mlr_learners) #> Key: <key> #>                    key                              label task_type #>                 <char>                             <char>    <char> #> 1:       classif.debug   Debug Learner for Classification   classif #> 2: classif.featureless Featureless Classification Learner   classif #> 3:       classif.rpart                Classification Tree   classif #> 4:          regr.debug       Debug Learner for Regression      regr #> 5:    regr.featureless     Featureless Regression Learner      regr #> 6:          regr.rpart                    Regression Tree      regr #>                                           feature_types   packages #>                                                  <list>     <list> #> 1:     logical,integer,numeric,character,factor,ordered       mlr3 #> 2: logical,integer,numeric,character,factor,ordered,...       mlr3 #> 3:               logical,integer,numeric,factor,ordered mlr3,rpart #> 4:     logical,integer,numeric,character,factor,ordered mlr3,stats #> 5: logical,integer,numeric,character,factor,ordered,... mlr3,stats #> 6:               logical,integer,numeric,factor,ordered mlr3,rpart #>                                                                   properties #>                                                                       <list> #> 1: hotstart_forward,internal_tuning,marshal,missings,multiclass,twoclass,... #> 2: featureless,importance,missings,multiclass,selected_features,twoclass,... #> 3:         importance,missings,multiclass,selected_features,twoclass,weights #> 4:                                                          missings,weights #> 5:                 featureless,importance,missings,selected_features,weights #> 6:                             importance,missings,selected_features,weights #>            predict_types #>                   <list> #> 1:         response,prob #> 2:         response,prob #> 3:         response,prob #> 4: response,se,quantiles #> 5: response,se,quantiles #> 6:              response mlr_learners$get(\"classif.featureless\") #>  #> ── <LearnerClassifFeatureless> (classif.featureless): Featureless Classification #> • Model: - #> • Parameters: method=mode #> • Packages: mlr3 #> • Predict Types: [response] and prob #> • Feature Types: logical, integer, numeric, character, factor, ordered, #> POSIXct, and Date #> • Encapsulation: none (fallback: -) #> • Properties: featureless, importance, missings, multiclass, selected_features, #> twoclass, and weights #> • Other settings: use_weights = 'use' lrn(\"classif.rpart\") #>  #> ── <LearnerClassifRpart> (classif.rpart): Classification Tree ────────────────── #> • Model: - #> • Parameters: xval=0 #> • Packages: mlr3 and rpart #> • Predict Types: [response] and prob #> • Feature Types: logical, integer, numeric, factor, and ordered #> • Encapsulation: none (fallback: -) #> • Properties: importance, missings, multiclass, selected_features, twoclass, #> and weights #> • Other settings: use_weights = 'use'"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":null,"dir":"Reference","previous_headings":"","what":"Classification Learner for Debugging — mlr_learners_classif.debug","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"simple LearnerClassif used primarily unit tests debugging purposes. hyperparameter set, simply constantly predicts randomly selected label. following hyperparameters trigger following actions: error_predict: Probability raise exception predict. error_train: Probability raises exception train. message_predict: Probability output message predict. message_train: Probability output message train. predict_missing: Ratio predictions NA. predict_missing_type: encode missingness. “na” insert NA values, “omit” just return fewer predictions requested. save_tasks: Saves input task model slot training prediction. segfault_predict: Probability provokes segfault predict. segfault_train: Probability provokes segfault train. sleep_train: Function returning single number determining many seconds sleep $train(). sleep_predict: Function returning single number determining many seconds sleep $predict(). threads: Number threads use. effect. warning_predict: Probability signal warning predict. warning_train: Probability signal warning train. x: Numeric tuning parameter. effect. iter: Integer parameter testing hotstarting. count_marshaling: TRUE, marshal_model increase marshal_count 1 time called. default FALSE. check_pid: TRUE, $predict() function throw error model unmarshaled session used prediction.) Note segfaults may triggered reliably operating system. Also note work intended, tear R session immediately!","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"classif.debug\") lrn(\"classif.debug\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"Task type: “classif” Predict Types: “response”, “prob” Feature Types: “logical”, “integer”, “numeric”, “character”, “factor”, “ordered” Required Packages: mlr3","code":""},{"path":[]},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"mlr3::Learner -> mlr3::LearnerClassif -> LearnerClassifDebug","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"marshaled (logical(1)) Whether learner marshaled. internal_valid_scores Retrieves internal validation scores named list(). Returns NULL learner trained yet. internal_tuned_values Retrieves internally tuned values named list(). Returns NULL learner trained yet. validate construct internal validation data. parameter can either NULL, ratio $(0, 1)$, \"test\", \"predefined\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train() mlr3::LearnerClassif$predict_newdata_fast()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"LearnerClassifDebug$new() LearnerClassifDebug$marshal() LearnerClassifDebug$unmarshal() LearnerClassifDebug$importance() LearnerClassifDebug$selected_features() LearnerClassifDebug$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"","code":"LearnerClassifDebug$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"method-marshal-","dir":"Reference","previous_headings":"","what":"Method marshal()","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"Marshal learner's model.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"","code":"LearnerClassifDebug$marshal(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"... () Additional arguments passed marshal_model().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"method-unmarshal-","dir":"Reference","previous_headings":"","what":"Method unmarshal()","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"Unmarshal learner's model.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"","code":"LearnerClassifDebug$unmarshal(...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"... () Additional arguments passed unmarshal_model().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"method-importance-","dir":"Reference","previous_headings":"","what":"Method importance()","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"Returns 0 feature seen training.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"","code":"LearnerClassifDebug$importance()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"Named numeric().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"method-selected-features-","dir":"Reference","previous_headings":"","what":"Method selected_features()","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"Always returns character(0).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"","code":"LearnerClassifDebug$selected_features()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"character().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"","code":"LearnerClassifDebug$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.debug.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classification Learner for Debugging — mlr_learners_classif.debug","text":"","code":"learner = lrn(\"classif.debug\") learner$param_set$set_values(message_train = 1, save_tasks = TRUE)  # this should signal a message task = tsk(\"penguins\") learner$train(task) #> Message from classif.debug->train() learner$predict(task) #>  #> ── <PredictionClassif> for 344 observations: ─────────────────────────────────── #>  row_ids     truth response #>        1    Adelie   Adelie #>        2    Adelie   Adelie #>        3    Adelie   Adelie #>      ---       ---      --- #>      342 Chinstrap   Adelie #>      343 Chinstrap   Adelie #>      344 Chinstrap   Adelie  # task_train and task_predict are the input tasks for train() and predict() names(learner$model) #> [1] \"response\"      \"pid\"           \"id\"            \"random_number\" #> [5] \"iter\"          \"task_train\"    \"task_predict\""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.featureless.html","id":null,"dir":"Reference","previous_headings":"","what":"Featureless Classification Learner — mlr_learners_classif.featureless","title":"Featureless Classification Learner — mlr_learners_classif.featureless","text":"simple LearnerClassif analyzes labels train, ignoring features. Hyperparameter method determines mode operation prediction: mode: Predicts frequent label. two labels tied, randomly selects one per prediction. Probabilities correspond relative frequency class labels training set. weighted data, label(s) highest weighted frequency selected. sample: Randomly predict label uniformly. Probabilities correspond uniform distribution class labels, .e. 1 divided number classes. Weights ignored, present. weighted.sample: Randomly predict label, probability estimated training distribution. consistency, probabilities 1 sampled label 0 labels. weighted data, sample weights used weight class labels.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.featureless.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Featureless Classification Learner — mlr_learners_classif.featureless","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"classif.featureless\") lrn(\"classif.featureless\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.featureless.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Featureless Classification Learner — mlr_learners_classif.featureless","text":"Task type: “classif” Predict Types: “response”, “prob” Feature Types: “logical”, “integer”, “numeric”, “character”, “factor”, “ordered”, “POSIXct”, “Date” Required Packages: mlr3","code":""},{"path":[]},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.featureless.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Featureless Classification Learner — mlr_learners_classif.featureless","text":"mlr3::Learner -> mlr3::LearnerClassif -> LearnerClassifFeatureless","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.featureless.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Featureless Classification Learner — mlr_learners_classif.featureless","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train() mlr3::LearnerClassif$predict_newdata_fast()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.featureless.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Featureless Classification Learner — mlr_learners_classif.featureless","text":"LearnerClassifFeatureless$new() LearnerClassifFeatureless$importance() LearnerClassifFeatureless$selected_features() LearnerClassifFeatureless$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.featureless.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Featureless Classification Learner — mlr_learners_classif.featureless","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.featureless.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Featureless Classification Learner — mlr_learners_classif.featureless","text":"","code":"LearnerClassifFeatureless$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.featureless.html","id":"method-importance-","dir":"Reference","previous_headings":"","what":"Method importance()","title":"Featureless Classification Learner — mlr_learners_classif.featureless","text":"features score 0 learner.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.featureless.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Featureless Classification Learner — mlr_learners_classif.featureless","text":"","code":"LearnerClassifFeatureless$importance()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.featureless.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Featureless Classification Learner — mlr_learners_classif.featureless","text":"Named numeric().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.featureless.html","id":"method-selected-features-","dir":"Reference","previous_headings":"","what":"Method selected_features()","title":"Featureless Classification Learner — mlr_learners_classif.featureless","text":"Selected features always empty set learner.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.featureless.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Featureless Classification Learner — mlr_learners_classif.featureless","text":"","code":"LearnerClassifFeatureless$selected_features()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.featureless.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Featureless Classification Learner — mlr_learners_classif.featureless","text":"character(0).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.featureless.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Featureless Classification Learner — mlr_learners_classif.featureless","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.featureless.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Featureless Classification Learner — mlr_learners_classif.featureless","text":"","code":"LearnerClassifFeatureless$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.featureless.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Featureless Classification Learner — mlr_learners_classif.featureless","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.rpart.html","id":null,"dir":"Reference","previous_headings":"","what":"Classification Tree Learner — mlr_learners_classif.rpart","title":"Classification Tree Learner — mlr_learners_classif.rpart","text":"LearnerClassif classification tree implemented rpart::rpart() package rpart.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.rpart.html","id":"initial-parameter-values","dir":"Reference","previous_headings":"","what":"Initial parameter values","title":"Classification Tree Learner — mlr_learners_classif.rpart","text":"Parameter xval initialized 0 order save computation time.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.rpart.html","id":"custom-mlr-parameters","dir":"Reference","previous_headings":"","what":"Custom mlr3 parameters","title":"Classification Tree Learner — mlr_learners_classif.rpart","text":"Parameter model renamed keep_model.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.rpart.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Classification Tree Learner — mlr_learners_classif.rpart","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"classif.rpart\") lrn(\"classif.rpart\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.rpart.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Classification Tree Learner — mlr_learners_classif.rpart","text":"Task type: “classif” Predict Types: “response”, “prob” Feature Types: “logical”, “integer”, “numeric”, “factor”, “ordered” Required Packages: mlr3, rpart","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.rpart.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Classification Tree Learner — mlr_learners_classif.rpart","text":"Breiman L, Friedman JH, Olshen RA, Stone CJ (1984). Classification Regression Trees. Routledge. doi:10.1201/9781315139470 .","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.rpart.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Classification Tree Learner — mlr_learners_classif.rpart","text":"mlr3::Learner -> mlr3::LearnerClassif -> LearnerClassifRpart","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.rpart.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Classification Tree Learner — mlr_learners_classif.rpart","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train() mlr3::LearnerClassif$predict_newdata_fast()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.rpart.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Classification Tree Learner — mlr_learners_classif.rpart","text":"LearnerClassifRpart$new() LearnerClassifRpart$importance() LearnerClassifRpart$selected_features() LearnerClassifRpart$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.rpart.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Classification Tree Learner — mlr_learners_classif.rpart","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.rpart.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Tree Learner — mlr_learners_classif.rpart","text":"","code":"LearnerClassifRpart$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.rpart.html","id":"method-importance-","dir":"Reference","previous_headings":"","what":"Method importance()","title":"Classification Tree Learner — mlr_learners_classif.rpart","text":"importance scores extracted model slot variable.importance.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.rpart.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Tree Learner — mlr_learners_classif.rpart","text":"","code":"LearnerClassifRpart$importance()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.rpart.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Classification Tree Learner — mlr_learners_classif.rpart","text":"Named numeric().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.rpart.html","id":"method-selected-features-","dir":"Reference","previous_headings":"","what":"Method selected_features()","title":"Classification Tree Learner — mlr_learners_classif.rpart","text":"Selected features extracted model slot frame$var.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.rpart.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Tree Learner — mlr_learners_classif.rpart","text":"","code":"LearnerClassifRpart$selected_features()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.rpart.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Classification Tree Learner — mlr_learners_classif.rpart","text":"character().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.rpart.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Classification Tree Learner — mlr_learners_classif.rpart","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.rpart.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Tree Learner — mlr_learners_classif.rpart","text":"","code":"LearnerClassifRpart$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_classif.rpart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classification Tree Learner — mlr_learners_classif.rpart","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.debug.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression Learner for Debugging — mlr_learners_regr.debug","title":"Regression Learner for Debugging — mlr_learners_regr.debug","text":"simple LearnerRegr used primarily unit tests debugging purposes. hyperparameter set, simply constantly predicts mean value training data. following hyperparameters trigger following actions: predict_missing: Ratio predictions NA. predict_missing_type: encode missingness. “na” insert NA values, “omit” just return fewer predictions requested. save_tasks: Saves input task model slot training prediction. threads: Number threads use. effect. x: Numeric tuning parameter. effect.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.debug.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Regression Learner for Debugging — mlr_learners_regr.debug","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"regr.debug\") lrn(\"regr.debug\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.debug.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Regression Learner for Debugging — mlr_learners_regr.debug","text":"Task type: “regr” Predict Types: “response”, “se”, “quantiles” Feature Types: “logical”, “integer”, “numeric”, “character”, “factor”, “ordered” Required Packages: mlr3, 'stats'","code":""},{"path":[]},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.debug.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Regression Learner for Debugging — mlr_learners_regr.debug","text":"mlr3::Learner -> mlr3::LearnerRegr -> LearnerRegrDebug","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.debug.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Regression Learner for Debugging — mlr_learners_regr.debug","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train() mlr3::LearnerRegr$predict_newdata_fast()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.debug.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Regression Learner for Debugging — mlr_learners_regr.debug","text":"LearnerRegrDebug$new() LearnerRegrDebug$importance() LearnerRegrDebug$selected_features() LearnerRegrDebug$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.debug.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Regression Learner for Debugging — mlr_learners_regr.debug","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.debug.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression Learner for Debugging — mlr_learners_regr.debug","text":"","code":"LearnerRegrDebug$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.debug.html","id":"method-importance-","dir":"Reference","previous_headings":"","what":"Method importance()","title":"Regression Learner for Debugging — mlr_learners_regr.debug","text":"Returns 0 feature seen training.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.debug.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression Learner for Debugging — mlr_learners_regr.debug","text":"","code":"LearnerRegrDebug$importance()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.debug.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Regression Learner for Debugging — mlr_learners_regr.debug","text":"Named numeric().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.debug.html","id":"method-selected-features-","dir":"Reference","previous_headings":"","what":"Method selected_features()","title":"Regression Learner for Debugging — mlr_learners_regr.debug","text":"Always returns character(0).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.debug.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression Learner for Debugging — mlr_learners_regr.debug","text":"","code":"LearnerRegrDebug$selected_features()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.debug.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Regression Learner for Debugging — mlr_learners_regr.debug","text":"character().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.debug.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Regression Learner for Debugging — mlr_learners_regr.debug","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.debug.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression Learner for Debugging — mlr_learners_regr.debug","text":"","code":"LearnerRegrDebug$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.debug.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression Learner for Debugging — mlr_learners_regr.debug","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.debug.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regression Learner for Debugging — mlr_learners_regr.debug","text":"","code":"task = tsk(\"mtcars\") learner = lrn(\"regr.debug\", save_tasks = TRUE) learner$train(task, row_ids = 1:20) prediction = learner$predict(task, row_ids = 21:32)  learner$model$task_train #>  #> ── <TaskRegr> (20x11): Motor Trends ──────────────────────────────────────────── #> • Target: mpg #> • Properties: - #> • Features (10): #>   • dbl (10): am, carb, cyl, disp, drat, gear, hp, qsec, vs, wt learner$model$task_predict #>  #> ── <TaskRegr> (12x11): Motor Trends ──────────────────────────────────────────── #> • Target: mpg #> • Properties: - #> • Features (10): #>   • dbl (10): am, carb, cyl, disp, drat, gear, hp, qsec, vs, wt"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.featureless.html","id":null,"dir":"Reference","previous_headings":"","what":"Featureless Regression Learner — mlr_learners_regr.featureless","title":"Featureless Regression Learner — mlr_learners_regr.featureless","text":"simple LearnerRegr analyzes response train, ignoring features. hyperparameter robust FALSE (default), constantly predicts mean(y) response sd(y) standard error. robust TRUE, median() mad() used instead mean() sd(), respectively. weighted data, response weighted mean (weighted median robust regression). predicted standard error square root weighted variance estimator bias correction based effective degrees freedom:   robust TRUE, weighted median absolute deviation used, adjusted factor 1.4826 consistency mad().","code":"sd(y, weights) = sqrt(   sum(weights * (y - weighted.mean(y, weights))^2) /     (sum(weights) - sum(weights ^2) / sum(weights)) )"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.featureless.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Featureless Regression Learner — mlr_learners_regr.featureless","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"regr.featureless\") lrn(\"regr.featureless\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.featureless.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Featureless Regression Learner — mlr_learners_regr.featureless","text":"Task type: “regr” Predict Types: “response”, “se”, “quantiles” Feature Types: “logical”, “integer”, “numeric”, “character”, “factor”, “ordered”, “POSIXct”, “Date” Required Packages: mlr3, 'stats'","code":""},{"path":[]},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.featureless.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Featureless Regression Learner — mlr_learners_regr.featureless","text":"mlr3::Learner -> mlr3::LearnerRegr -> LearnerRegrFeatureless","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.featureless.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Featureless Regression Learner — mlr_learners_regr.featureless","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train() mlr3::LearnerRegr$predict_newdata_fast()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.featureless.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Featureless Regression Learner — mlr_learners_regr.featureless","text":"LearnerRegrFeatureless$new() LearnerRegrFeatureless$importance() LearnerRegrFeatureless$selected_features() LearnerRegrFeatureless$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.featureless.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Featureless Regression Learner — mlr_learners_regr.featureless","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.featureless.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Featureless Regression Learner — mlr_learners_regr.featureless","text":"","code":"LearnerRegrFeatureless$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.featureless.html","id":"method-importance-","dir":"Reference","previous_headings":"","what":"Method importance()","title":"Featureless Regression Learner — mlr_learners_regr.featureless","text":"features score 0 learner.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.featureless.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Featureless Regression Learner — mlr_learners_regr.featureless","text":"","code":"LearnerRegrFeatureless$importance()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.featureless.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Featureless Regression Learner — mlr_learners_regr.featureless","text":"Named numeric().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.featureless.html","id":"method-selected-features-","dir":"Reference","previous_headings":"","what":"Method selected_features()","title":"Featureless Regression Learner — mlr_learners_regr.featureless","text":"Selected features always empty set learner.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.featureless.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Featureless Regression Learner — mlr_learners_regr.featureless","text":"","code":"LearnerRegrFeatureless$selected_features()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.featureless.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Featureless Regression Learner — mlr_learners_regr.featureless","text":"character(0).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.featureless.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Featureless Regression Learner — mlr_learners_regr.featureless","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.featureless.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Featureless Regression Learner — mlr_learners_regr.featureless","text":"","code":"LearnerRegrFeatureless$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.featureless.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Featureless Regression Learner — mlr_learners_regr.featureless","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.rpart.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression Tree Learner — mlr_learners_regr.rpart","title":"Regression Tree Learner — mlr_learners_regr.rpart","text":"LearnerRegr regression tree implemented rpart::rpart() package rpart.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.rpart.html","id":"initial-parameter-values","dir":"Reference","previous_headings":"","what":"Initial parameter values","title":"Regression Tree Learner — mlr_learners_regr.rpart","text":"Parameter xval initialized 0 order save computation time.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.rpart.html","id":"custom-mlr-parameters","dir":"Reference","previous_headings":"","what":"Custom mlr3 parameters","title":"Regression Tree Learner — mlr_learners_regr.rpart","text":"Parameter model renamed keep_model.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.rpart.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Regression Tree Learner — mlr_learners_regr.rpart","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"regr.rpart\") lrn(\"regr.rpart\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.rpart.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Regression Tree Learner — mlr_learners_regr.rpart","text":"Task type: “regr” Predict Types: “response” Feature Types: “logical”, “integer”, “numeric”, “factor”, “ordered” Required Packages: mlr3, rpart","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.rpart.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Regression Tree Learner — mlr_learners_regr.rpart","text":"Breiman L, Friedman JH, Olshen RA, Stone CJ (1984). Classification Regression Trees. Routledge. doi:10.1201/9781315139470 .","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.rpart.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Regression Tree Learner — mlr_learners_regr.rpart","text":"mlr3::Learner -> mlr3::LearnerRegr -> LearnerRegrRpart","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.rpart.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Regression Tree Learner — mlr_learners_regr.rpart","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train() mlr3::LearnerRegr$predict_newdata_fast()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.rpart.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Regression Tree Learner — mlr_learners_regr.rpart","text":"LearnerRegrRpart$new() LearnerRegrRpart$importance() LearnerRegrRpart$selected_features() LearnerRegrRpart$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.rpart.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Regression Tree Learner — mlr_learners_regr.rpart","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.rpart.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression Tree Learner — mlr_learners_regr.rpart","text":"","code":"LearnerRegrRpart$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.rpart.html","id":"method-importance-","dir":"Reference","previous_headings":"","what":"Method importance()","title":"Regression Tree Learner — mlr_learners_regr.rpart","text":"importance scores extracted model slot variable.importance.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.rpart.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression Tree Learner — mlr_learners_regr.rpart","text":"","code":"LearnerRegrRpart$importance()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.rpart.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Regression Tree Learner — mlr_learners_regr.rpart","text":"Named numeric().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.rpart.html","id":"method-selected-features-","dir":"Reference","previous_headings":"","what":"Method selected_features()","title":"Regression Tree Learner — mlr_learners_regr.rpart","text":"Selected features extracted model slot frame$var.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.rpart.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression Tree Learner — mlr_learners_regr.rpart","text":"","code":"LearnerRegrRpart$selected_features()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.rpart.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Regression Tree Learner — mlr_learners_regr.rpart","text":"character().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.rpart.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Regression Tree Learner — mlr_learners_regr.rpart","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.rpart.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression Tree Learner — mlr_learners_regr.rpart","text":"","code":"LearnerRegrRpart$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_learners_regr.rpart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression Tree Learner — mlr_learners_regr.rpart","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures.html","id":null,"dir":"Reference","previous_headings":"","what":"Dictionary of Performance Measures — mlr_measures","title":"Dictionary of Performance Measures — mlr_measures","text":"simple mlr3misc::Dictionary storing objects class Measure. measure associated help page, see mlr_measures_[id]. dictionary can get populated additional measures add-packages. E.g., mlr3proba adds survival measures mlr3cluster adds cluster analysis measures. convenient way retrieve construct measures, see msr()/msrs().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dictionary of Performance Measures — mlr_measures","text":"R6::R6Class object inheriting mlr3misc::Dictionary.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Dictionary of Performance Measures — mlr_measures","text":"See mlr3misc::Dictionary.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures.html","id":"s-methods","dir":"Reference","previous_headings":"","what":"S3 methods","title":"Dictionary of Performance Measures — mlr_measures","text":".data.table(dict, ..., objects = FALSE)mlr3misc::Dictionary -> data.table::data.table() Returns data.table::data.table() fields \"key\", \"label\", \"task_type\", \"packages\", \"predict_type\", \"task_properties\" columns. objects set TRUE, constructed objects returned list column named object.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dictionary of Performance Measures — mlr_measures","text":"","code":"as.data.table(mlr_measures) #> Key: <key> #>                      key                                               label #>                   <char>                                              <char> #>  1:                  aic                        Akaike Information Criterion #>  2:                  bic                      Bayesian Information Criterion #>  3:          classif.acc                             Classification Accuracy #>  4:          classif.auc                            Area Under the ROC Curve #>  5:         classif.bacc                                   Balanced Accuracy #>  6:       classif.bbrier                                  Binary Brier Score #>  7:           classif.ce                                Classification Error #>  8:        classif.costs                       Cost-sensitive Classification #>  9:          classif.dor                               Diagnostic Odds Ratio #> 10:        classif.fbeta                                        F-beta score #> 11:          classif.fdr                                False Discovery Rate #> 12:           classif.fn                                     False Negatives #> 13:          classif.fnr                                 False Negative Rate #> 14:         classif.fomr                                 False Omission Rate #> 15:           classif.fp                                     False Positives #> 16:          classif.fpr                                 False Positive Rate #> 17:      classif.logloss                                            Log Loss #> 18:    classif.mauc_au1p             Weighted average 1 vs. 1 multiclass AUC #> 19:    classif.mauc_au1u                      Average 1 vs. 1 multiclass AUC #> 20:    classif.mauc_aunp          Weighted average 1 vs. rest multiclass AUC #> 21:    classif.mauc_aunu                   Average 1 vs. rest multiclass AUC #> 22:      classif.mauc_mu                                   Multiclass mu AUC #> 23:       classif.mbrier                              Multiclass Brier Score #> 24:          classif.mcc                    Matthews Correlation Coefficient #> 25:          classif.npv                           Negative Predictive Value #> 26:          classif.ppv                           Positive Predictive Value #> 27:        classif.prauc                              Precision-Recall Curve #> 28:    classif.precision                                           Precision #> 29:       classif.recall                                              Recall #> 30:  classif.sensitivity                                         Sensitivity #> 31:  classif.specificity                                         Specificity #> 32:           classif.tn                                      True Negatives #> 33:          classif.tnr                                  True Negative Rate #> 34:           classif.tp                                      True Positives #> 35:          classif.tpr                                  True Positive Rate #> 36:        debug_classif                        Debug Classification Measure #> 37: internal_valid_score                           Internal Validation Score #> 38:            oob_error                                    Out-of-bag Error #> 39:            regr.bias                                                Bias #> 40:            regr.ktau                                       Kendall's tau #> 41:             regr.mae                                 Mean Absolute Error #> 42:            regr.mape                         Mean Absolute Percent Error #> 43:           regr.maxae                                  Max Absolute Error #> 44:           regr.medae                               Median Absolute Error #> 45:           regr.medse                                Median Squared Error #> 46:             regr.mse                                  Mean Squared Error #> 47:            regr.msle                              Mean Squared Log Error #> 48:           regr.pbias                                        Percent Bias #> 49:         regr.pinball                                                <NA> #> 50:            regr.rmse                             Root Mean Squared Error #> 51:           regr.rmsle                         Root Mean Squared Log Error #> 52:             regr.rqr                                                <NA> #> 53:             regr.rsq                                                <NA> #> 54:             regr.sae                              Sum of Absolute Errors #> 55:           regr.smape               Symmetric Mean Absolute Percent Error #> 56:            regr.srho                                      Spearman's rho #> 57:             regr.sse                               Sum of Squared Errors #> 58:    selected_features Absolute or Relative Frequency of Selected Features #> 59:          sim.jaccard                            Jaccard Similarity Index #> 60:              sim.phi                          Phi Coefficient Similarity #> 61:            time_both                                        Elapsed Time #> 62:         time_predict                                        Elapsed Time #> 63:           time_train                                        Elapsed Time #>                      key                                               label #>     task_type          packages predict_type #>        <char>            <list>       <char> #>  1:      <NA>              mlr3         <NA> #>  2:      <NA>              mlr3         <NA> #>  3:   classif mlr3,mlr3measures     response #>  4:   classif mlr3,mlr3measures         prob #>  5:   classif mlr3,mlr3measures     response #>  6:   classif mlr3,mlr3measures         prob #>  7:   classif mlr3,mlr3measures     response #>  8:   classif              mlr3     response #>  9:   classif mlr3,mlr3measures     response #> 10:   classif mlr3,mlr3measures     response #> 11:   classif mlr3,mlr3measures     response #> 12:   classif mlr3,mlr3measures     response #> 13:   classif mlr3,mlr3measures     response #> 14:   classif mlr3,mlr3measures     response #> 15:   classif mlr3,mlr3measures     response #> 16:   classif mlr3,mlr3measures     response #> 17:   classif mlr3,mlr3measures         prob #> 18:   classif mlr3,mlr3measures         prob #> 19:   classif mlr3,mlr3measures         prob #> 20:   classif mlr3,mlr3measures         prob #> 21:   classif mlr3,mlr3measures         prob #> 22:   classif mlr3,mlr3measures         prob #> 23:   classif mlr3,mlr3measures         prob #> 24:   classif mlr3,mlr3measures     response #> 25:   classif mlr3,mlr3measures     response #> 26:   classif mlr3,mlr3measures     response #> 27:   classif mlr3,mlr3measures         prob #> 28:   classif mlr3,mlr3measures     response #> 29:   classif mlr3,mlr3measures     response #> 30:   classif mlr3,mlr3measures     response #> 31:   classif mlr3,mlr3measures     response #> 32:   classif mlr3,mlr3measures     response #> 33:   classif mlr3,mlr3measures     response #> 34:   classif mlr3,mlr3measures     response #> 35:   classif mlr3,mlr3measures     response #> 36:      <NA>              mlr3     response #> 37:      <NA>              mlr3         <NA> #> 38:      <NA>              mlr3         <NA> #> 39:      regr mlr3,mlr3measures     response #> 40:      regr mlr3,mlr3measures     response #> 41:      regr mlr3,mlr3measures     response #> 42:      regr mlr3,mlr3measures     response #> 43:      regr mlr3,mlr3measures     response #> 44:      regr mlr3,mlr3measures     response #> 45:      regr mlr3,mlr3measures     response #> 46:      regr mlr3,mlr3measures     response #> 47:      regr mlr3,mlr3measures     response #> 48:      regr mlr3,mlr3measures     response #> 49:      regr              mlr3    quantiles #> 50:      regr mlr3,mlr3measures     response #> 51:      regr mlr3,mlr3measures     response #> 52:      regr              mlr3    quantiles #> 53:      regr              mlr3     response #> 54:      regr mlr3,mlr3measures     response #> 55:      regr mlr3,mlr3measures     response #> 56:      regr mlr3,mlr3measures     response #> 57:      regr mlr3,mlr3measures     response #> 58:      <NA>              mlr3         <NA> #> 59:      <NA> mlr3,mlr3measures         <NA> #> 60:      <NA> mlr3,mlr3measures         <NA> #> 61:      <NA>              mlr3         <NA> #> 62:      <NA>              mlr3         <NA> #> 63:      <NA>              mlr3         <NA> #>     task_type          packages predict_type #>                                                               properties #>                                                                   <list> #>  1:      na_score,requires_learner,requires_model,requires_no_prediction #>  2:      na_score,requires_learner,requires_model,requires_no_prediction #>  3:                                                              weights #>  4:                                                                      #>  5:                                                              weights #>  6:                                                              weights #>  7:                                                              weights #>  8:                                                              weights #>  9:                                                                      #> 10:                                                                      #> 11:                                                                      #> 12:                                                                      #> 13:                                                                      #> 14:                                                                      #> 15:                                                                      #> 16:                                                                      #> 17:                                                              weights #> 18:                                                                      #> 19:                                                                      #> 20:                                                                      #> 21:                                                                      #> 22:                                                                      #> 23:                                                                      #> 24:                                                                      #> 25:                                                                      #> 26:                                                                      #> 27:                                                                      #> 28:                                                                      #> 29:                                                                      #> 30:                                                                      #> 31:                                                                      #> 32:                                                                      #> 33:                                                                      #> 34:                                                                      #> 35:                                                                      #> 36:                                                             na_score #> 37:                     na_score,requires_learner,requires_no_prediction #> 38:                     na_score,requires_learner,requires_no_prediction #> 39:                                                              weights #> 40:                                                                      #> 41:                                                              weights #> 42:                                                              weights #> 43:                                                                      #> 44:                                                                      #> 45:                                                                      #> 46:                                                              weights #> 47:                                                              weights #> 48:                                                              weights #> 49:                                                                      #> 50:                                                              weights #> 51:                                                              weights #> 52:                                                               [NULL] #> 53:                                                              weights #> 54:                                                                      #> 55:                                                                      #> 56:                                                                      #> 57:                                                                      #> 58: requires_task,requires_learner,requires_model,requires_no_prediction #> 59:                                requires_model,requires_no_prediction #> 60:                                requires_model,requires_no_prediction #> 61:                              requires_learner,requires_no_prediction #> 62:                              requires_learner,requires_no_prediction #> 63:                              requires_learner,requires_no_prediction #>                                                               properties #>     task_properties #>              <list> #>  1:                 #>  2:                 #>  3:                 #>  4:        twoclass #>  5:                 #>  6:        twoclass #>  7:                 #>  8:                 #>  9:        twoclass #> 10:        twoclass #> 11:        twoclass #> 12:        twoclass #> 13:        twoclass #> 14:        twoclass #> 15:        twoclass #> 16:        twoclass #> 17:                 #> 18:                 #> 19:                 #> 20:                 #> 21:                 #> 22:                 #> 23:                 #> 24:                 #> 25:        twoclass #> 26:        twoclass #> 27:        twoclass #> 28:        twoclass #> 29:        twoclass #> 30:        twoclass #> 31:        twoclass #> 32:        twoclass #> 33:        twoclass #> 34:        twoclass #> 35:        twoclass #> 36:                 #> 37:                 #> 38:                 #> 39:                 #> 40:                 #> 41:                 #> 42:                 #> 43:                 #> 44:                 #> 45:                 #> 46:                 #> 47:                 #> 48:                 #> 49:                 #> 50:                 #> 51:                 #> 52:                 #> 53:                 #> 54:                 #> 55:                 #> 56:                 #> 57:                 #> 58:                 #> 59:                 #> 60:                 #> 61:                 #> 62:                 #> 63:                 #>     task_properties mlr_measures$get(\"classif.ce\") #>  #> ── <MeasureClassifSimple> (classif.ce): Classification Error ─────────────────── #> • Packages: mlr3 and mlr3measures #> • Range: [0, 1] #> • Minimize: TRUE #> • Average: macro #> • Parameters: list() #> • Properties: weights #> • Predict type: response #> • Predict sets: test #> • Aggregator: mean() msr(\"regr.mse\") #>  #> ── <MeasureRegrSimple> (regr.mse): Mean Squared Error ────────────────────────── #> • Packages: mlr3 and mlr3measures #> • Range: [0, Inf] #> • Minimize: TRUE #> • Average: macro #> • Parameters: list() #> • Properties: weights #> • Predict type: response #> • Predict sets: test #> • Aggregator: mean()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_aic.html","id":null,"dir":"Reference","previous_headings":"","what":"Akaike Information Criterion Measure — mlr_measures_aic","title":"Akaike Information Criterion Measure — mlr_measures_aic","text":"Calculates Akaike Information Criterion (AIC) trade-goodness fit (measured terms log-likelihood) model complexity (measured terms number included features). Internally, stats::AIC() called parameter k (defaulting 2). Requires learner property \"loglik\", NA returned unsupported learners.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_aic.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Akaike Information Criterion Measure — mlr_measures_aic","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"aic\") msr(\"aic\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_aic.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Akaike Information Criterion Measure — mlr_measures_aic","text":"Task type: “NA” Range: \\((-\\infty, \\infty)\\) Minimize: TRUE Average: macro Required Prediction: “NA” Required Packages: mlr3","code":""},{"path":[]},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_aic.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Akaike Information Criterion Measure — mlr_measures_aic","text":"mlr3::Measure -> MeasureAIC","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_aic.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Akaike Information Criterion Measure — mlr_measures_aic","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_aic.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Akaike Information Criterion Measure — mlr_measures_aic","text":"MeasureAIC$new() MeasureAIC$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_aic.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Akaike Information Criterion Measure — mlr_measures_aic","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_aic.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Akaike Information Criterion Measure — mlr_measures_aic","text":"","code":"MeasureAIC$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_aic.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Akaike Information Criterion Measure — mlr_measures_aic","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_aic.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Akaike Information Criterion Measure — mlr_measures_aic","text":"","code":"MeasureAIC$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_aic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Akaike Information Criterion Measure — mlr_measures_aic","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_bic.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian Information Criterion Measure — mlr_measures_bic","title":"Bayesian Information Criterion Measure — mlr_measures_bic","text":"Calculates Bayesian Information Criterion (BIC) trade-goodness fit (measured terms log-likelihood) model complexity (measured terms number included features). Internally, stats::BIC() called. Requires learner property \"loglik\", NA returned unsupported learners.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_bic.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Bayesian Information Criterion Measure — mlr_measures_bic","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"bic\") msr(\"bic\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_bic.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Bayesian Information Criterion Measure — mlr_measures_bic","text":"Task type: “NA” Range: \\((-\\infty, \\infty)\\) Minimize: TRUE Average: macro Required Prediction: “NA” Required Packages: mlr3","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_bic.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Bayesian Information Criterion Measure — mlr_measures_bic","text":"Empty ParamSet","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_bic.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Bayesian Information Criterion Measure — mlr_measures_bic","text":"mlr3::Measure -> MeasureBIC","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_bic.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Bayesian Information Criterion Measure — mlr_measures_bic","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_bic.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Bayesian Information Criterion Measure — mlr_measures_bic","text":"MeasureBIC$new() MeasureBIC$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_bic.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Bayesian Information Criterion Measure — mlr_measures_bic","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_bic.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian Information Criterion Measure — mlr_measures_bic","text":"","code":"MeasureBIC$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_bic.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Bayesian Information Criterion Measure — mlr_measures_bic","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_bic.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian Information Criterion Measure — mlr_measures_bic","text":"","code":"MeasureBIC$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_bic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian Information Criterion Measure — mlr_measures_bic","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.acc.html","id":null,"dir":"Reference","previous_headings":"","what":"Classification Accuracy — mlr_measures_classif.acc","title":"Classification Accuracy — mlr_measures_classif.acc","text":"Measure compare true observed labels predicted labels multiclass classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.acc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Classification Accuracy — mlr_measures_classif.acc","text":"Classification Accuracy defined $$   \\frac{1}{n} \\sum_{=1}^n w_i \\mathbf{1} \\left( t_i = r_i \\right), $$ \\(w_i\\) normalized weights observations \\(x_i\\).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.acc.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Classification Accuracy — mlr_measures_classif.acc","text":"score function calls mlr3measures::acc() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.acc.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Classification Accuracy — mlr_measures_classif.acc","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.acc\") msr(\"classif.acc\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.acc.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Classification Accuracy — mlr_measures_classif.acc","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.acc.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Classification Accuracy — mlr_measures_classif.acc","text":"Type: \"classif\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.auc.html","id":null,"dir":"Reference","previous_headings":"","what":"Area Under the ROC Curve — mlr_measures_classif.auc","title":"Area Under the ROC Curve — mlr_measures_classif.auc","text":"Measure compare true observed labels predicted probabilities binary classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.auc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Area Under the ROC Curve — mlr_measures_classif.auc","text":"Computes area Receiver Operator Characteristic (ROC) curve. AUC can interpreted probability randomly chosen positive observation higher predicted probability randomly chosen negative observation. measure undefined true values either positive negative.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.auc.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Area Under the ROC Curve — mlr_measures_classif.auc","text":"score function calls mlr3measures::auc() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.auc.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Area Under the ROC Curve — mlr_measures_classif.auc","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.auc\") msr(\"classif.auc\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.auc.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Area Under the ROC Curve — mlr_measures_classif.auc","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.auc.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Area Under the ROC Curve — mlr_measures_classif.auc","text":"Type: \"binary\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: prob","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.bacc.html","id":null,"dir":"Reference","previous_headings":"","what":"Balanced Accuracy — mlr_measures_classif.bacc","title":"Balanced Accuracy — mlr_measures_classif.bacc","text":"Measure compare true observed labels predicted labels multiclass classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.bacc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Balanced Accuracy — mlr_measures_classif.bacc","text":"Balanced Accuracy computes weighted balanced accuracy, suitable imbalanced data sets. defined analogously definition sklearn. First, sample weights \\(w_i\\) normalized per class class influence: $$  \\hat{w}_i = \\frac{w_i}{\\sum_{j=1}^n w_j \\cdot \\mathbf{1}(t_j = t_i)}. $$ Balanced Accuracy calculated $$  \\frac{1}{\\sum_{=1}^n \\hat{w}_i} \\sum_{=1}^n \\hat{w}_i \\cdot \\mathbf{1}(r_i = t_i). $$ definition equivalent acc() class-balanced sample weights.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.bacc.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Balanced Accuracy — mlr_measures_classif.bacc","text":"score function calls mlr3measures::bacc() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.bacc.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Balanced Accuracy — mlr_measures_classif.bacc","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.bacc\") msr(\"classif.bacc\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.bacc.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Balanced Accuracy — mlr_measures_classif.bacc","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.bacc.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Balanced Accuracy — mlr_measures_classif.bacc","text":"Type: \"classif\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.bbrier.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary Brier Score — mlr_measures_classif.bbrier","title":"Binary Brier Score — mlr_measures_classif.bbrier","text":"Measure compare true observed labels predicted probabilities binary classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.bbrier.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Binary Brier Score — mlr_measures_classif.bbrier","text":"Binary Brier Score defined $$    \\frac{1}{n} \\sum_{=1}^n w_i (I_i - p_i)^2, $$ \\(w_i\\) sample weights, \\(I_{}\\) 1 observation \\(x_i\\) belongs positive class, 0 otherwise. Note (common) definition Brier score equivalent original definition multi-class Brier score (see mbrier()) divided 2.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.bbrier.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Binary Brier Score — mlr_measures_classif.bbrier","text":"score function calls mlr3measures::bbrier() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.bbrier.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Binary Brier Score — mlr_measures_classif.bbrier","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.bbrier\") msr(\"classif.bbrier\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.bbrier.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Binary Brier Score — mlr_measures_classif.bbrier","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.bbrier.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Binary Brier Score — mlr_measures_classif.bbrier","text":"Type: \"binary\" Range: \\([0, 1]\\) Minimize: TRUE Required prediction: prob","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.ce.html","id":null,"dir":"Reference","previous_headings":"","what":"Classification Error — mlr_measures_classif.ce","title":"Classification Error — mlr_measures_classif.ce","text":"Measure compare true observed labels predicted labels multiclass classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.ce.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Classification Error — mlr_measures_classif.ce","text":"Classification Error defined $$   \\frac{1}{n} \\sum_{=1}^n w_i \\mathbf{1} \\left( t_i \\neq r_i \\right), $$ \\(w_i\\) normalized weights observation \\(x_i\\).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.ce.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Classification Error — mlr_measures_classif.ce","text":"score function calls mlr3measures::ce() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.ce.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Classification Error — mlr_measures_classif.ce","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.ce\") msr(\"classif.ce\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.ce.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Classification Error — mlr_measures_classif.ce","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.ce.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Classification Error — mlr_measures_classif.ce","text":"Type: \"classif\" Range: \\([0, 1]\\) Minimize: TRUE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.costs.html","id":null,"dir":"Reference","previous_headings":"","what":"Cost-sensitive Classification Measure — mlr_measures_classif.costs","title":"Cost-sensitive Classification Measure — mlr_measures_classif.costs","text":"Uses cost matrix create classification measure. True labels must arranged columns, predicted labels must arranged  rows. cost matrix stored slot $costs. calculation score, confusion matrix multiplied element-wise cost matrix. costs summed (potentially divided number observations normalize set TRUE (default)).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.costs.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Cost-sensitive Classification Measure — mlr_measures_classif.costs","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.costs\") msr(\"classif.costs\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.costs.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Cost-sensitive Classification Measure — mlr_measures_classif.costs","text":"Task type: “classif” Range: \\((-\\infty, \\infty)\\) Minimize: TRUE Average: macro Required Prediction: “response” Required Packages: mlr3","code":""},{"path":[]},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.costs.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Cost-sensitive Classification Measure — mlr_measures_classif.costs","text":"mlr3::Measure -> mlr3::MeasureClassif -> MeasureClassifCosts","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.costs.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Cost-sensitive Classification Measure — mlr_measures_classif.costs","text":"costs (numeric matrix()) Matrix costs (truth columns, predicted response rows).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.costs.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Cost-sensitive Classification Measure — mlr_measures_classif.costs","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.costs.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Cost-sensitive Classification Measure — mlr_measures_classif.costs","text":"MeasureClassifCosts$new() MeasureClassifCosts$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.costs.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Cost-sensitive Classification Measure — mlr_measures_classif.costs","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.costs.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cost-sensitive Classification Measure — mlr_measures_classif.costs","text":"","code":"MeasureClassifCosts$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.costs.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Cost-sensitive Classification Measure — mlr_measures_classif.costs","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.costs.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Cost-sensitive Classification Measure — mlr_measures_classif.costs","text":"","code":"MeasureClassifCosts$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.costs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cost-sensitive Classification Measure — mlr_measures_classif.costs","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.costs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cost-sensitive Classification Measure — mlr_measures_classif.costs","text":"","code":"# get a cost sensitive task task = tsk(\"german_credit\")  # cost matrix as given on the UCI page of the german credit data set # https://archive.ics.uci.edu/ml/datasets/statlog+(german+credit+data) costs = matrix(c(0, 5, 1, 0), nrow = 2) dimnames(costs) = list(truth = task$class_names, predicted = task$class_names) print(costs) #>       predicted #> truth  good bad #>   good    0   1 #>   bad     5   0  # mlr3 needs truth in columns, predictions in rows costs = t(costs)  # create a cost measure which calculates the absolute costs m = msr(\"classif.costs\", id = \"german_credit_costs\", costs = costs, normalize = FALSE)  # fit models and evaluate with the cost measure learner = lrn(\"classif.rpart\") rr = resample(task, learner, rsmp(\"cv\", folds = 3)) rr$aggregate(m) #> german_credit_costs  #>                 334"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.dor.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnostic Odds Ratio — mlr_measures_classif.dor","title":"Diagnostic Odds Ratio — mlr_measures_classif.dor","text":"Measure compare true observed labels predicted labels binary classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.dor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Diagnostic Odds Ratio — mlr_measures_classif.dor","text":"Diagnostic Odds Ratio defined $$    \\frac{\\mathrm{TP}/\\mathrm{FP}}{\\mathrm{FN}/\\mathrm{TN}}. $$ measure undefined FP = 0 FN = 0.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.dor.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Diagnostic Odds Ratio — mlr_measures_classif.dor","text":"score function calls mlr3measures::dor() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.dor.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Diagnostic Odds Ratio — mlr_measures_classif.dor","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.dor\") msr(\"classif.dor\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.dor.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Diagnostic Odds Ratio — mlr_measures_classif.dor","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.dor.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Diagnostic Odds Ratio — mlr_measures_classif.dor","text":"Type: \"binary\" Range: \\([0, \\infty)\\) Minimize: FALSE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fbeta.html","id":null,"dir":"Reference","previous_headings":"","what":"F-beta Score — mlr_measures_classif.fbeta","title":"F-beta Score — mlr_measures_classif.fbeta","text":"Measure compare true observed labels predicted labels binary classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fbeta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"F-beta Score — mlr_measures_classif.fbeta","text":"\\(P\\) precision() \\(R\\) recall(), F-beta Score defined $$    (1 + \\beta^2) \\frac{P \\cdot R}{(\\beta^2 P) + R}. $$ measures effectiveness retrieval respect user attaches \\(\\beta\\) times much importance recall precision. \\(\\beta = 1\\), measure called \"F1\" score. measure undefined precision recall undefined, .e. TP + FP = 0 TP + FN = 0.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fbeta.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"F-beta Score — mlr_measures_classif.fbeta","text":"score function calls mlr3measures::fbeta() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fbeta.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"F-beta Score — mlr_measures_classif.fbeta","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.fbeta\") msr(\"classif.fbeta\")"},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fbeta.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"F-beta Score — mlr_measures_classif.fbeta","text":"Type: \"binary\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fdr.html","id":null,"dir":"Reference","previous_headings":"","what":"False Discovery Rate — mlr_measures_classif.fdr","title":"False Discovery Rate — mlr_measures_classif.fdr","text":"Measure compare true observed labels predicted labels binary classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fdr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"False Discovery Rate — mlr_measures_classif.fdr","text":"False Discovery Rate defined $$    \\frac{\\mathrm{FP}}{\\mathrm{TP} + \\mathrm{FP}}. $$ measure undefined TP + FP = 0.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fdr.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"False Discovery Rate — mlr_measures_classif.fdr","text":"score function calls mlr3measures::fdr() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fdr.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"False Discovery Rate — mlr_measures_classif.fdr","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.fdr\") msr(\"classif.fdr\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fdr.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"False Discovery Rate — mlr_measures_classif.fdr","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fdr.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"False Discovery Rate — mlr_measures_classif.fdr","text":"Type: \"binary\" Range: \\([0, 1]\\) Minimize: TRUE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fn.html","id":null,"dir":"Reference","previous_headings":"","what":"False Negatives — mlr_measures_classif.fn","title":"False Negatives — mlr_measures_classif.fn","text":"Measure compare true observed labels predicted labels binary classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"False Negatives — mlr_measures_classif.fn","text":"measure counts false negatives (type 2 error), .e. number predictions indicating negative class label fact positive. sometimes also called \"miss\" \"underestimation\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fn.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"False Negatives — mlr_measures_classif.fn","text":"score function calls mlr3measures::fn() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fn.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"False Negatives — mlr_measures_classif.fn","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.fn\") msr(\"classif.fn\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fn.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"False Negatives — mlr_measures_classif.fn","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fn.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"False Negatives — mlr_measures_classif.fn","text":"Type: \"binary\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fnr.html","id":null,"dir":"Reference","previous_headings":"","what":"False Negative Rate — mlr_measures_classif.fnr","title":"False Negative Rate — mlr_measures_classif.fnr","text":"Measure compare true observed labels predicted labels binary classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fnr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"False Negative Rate — mlr_measures_classif.fnr","text":"False Negative Rate defined $$    \\frac{\\mathrm{FN}}{\\mathrm{TP} + \\mathrm{FN}}. $$ Also know \"miss rate\". measure undefined TP + FN = 0.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fnr.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"False Negative Rate — mlr_measures_classif.fnr","text":"score function calls mlr3measures::fnr() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fnr.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"False Negative Rate — mlr_measures_classif.fnr","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.fnr\") msr(\"classif.fnr\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fnr.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"False Negative Rate — mlr_measures_classif.fnr","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fnr.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"False Negative Rate — mlr_measures_classif.fnr","text":"Type: \"binary\" Range: \\([0, 1]\\) Minimize: TRUE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fomr.html","id":null,"dir":"Reference","previous_headings":"","what":"False Omission Rate — mlr_measures_classif.fomr","title":"False Omission Rate — mlr_measures_classif.fomr","text":"Measure compare true observed labels predicted labels binary classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fomr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"False Omission Rate — mlr_measures_classif.fomr","text":"False Omission Rate defined $$    \\frac{\\mathrm{FN}}{\\mathrm{FN} + \\mathrm{TN}}. $$ measure undefined FN + TN = 0.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fomr.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"False Omission Rate — mlr_measures_classif.fomr","text":"score function calls mlr3measures::fomr() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fomr.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"False Omission Rate — mlr_measures_classif.fomr","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.fomr\") msr(\"classif.fomr\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fomr.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"False Omission Rate — mlr_measures_classif.fomr","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fomr.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"False Omission Rate — mlr_measures_classif.fomr","text":"Type: \"binary\" Range: \\([0, 1]\\) Minimize: TRUE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fp.html","id":null,"dir":"Reference","previous_headings":"","what":"False Positives — mlr_measures_classif.fp","title":"False Positives — mlr_measures_classif.fp","text":"Measure compare true observed labels predicted labels binary classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"False Positives — mlr_measures_classif.fp","text":"measure counts false positives (type 1 error), .e. number predictions indicating positive class label fact negative. sometimes also called \"false alarm\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"False Positives — mlr_measures_classif.fp","text":"score function calls mlr3measures::fp() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fp.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"False Positives — mlr_measures_classif.fp","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.fp\") msr(\"classif.fp\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fp.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"False Positives — mlr_measures_classif.fp","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fp.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"False Positives — mlr_measures_classif.fp","text":"Type: \"binary\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fpr.html","id":null,"dir":"Reference","previous_headings":"","what":"False Positive Rate — mlr_measures_classif.fpr","title":"False Positive Rate — mlr_measures_classif.fpr","text":"Measure compare true observed labels predicted labels binary classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fpr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"False Positive Rate — mlr_measures_classif.fpr","text":"False Positive Rate defined $$    \\frac{\\mathrm{FP}}{\\mathrm{FP} + \\mathrm{TN}}. $$ Also know fall probability false alarm. measure undefined FP + TN = 0.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fpr.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"False Positive Rate — mlr_measures_classif.fpr","text":"score function calls mlr3measures::fpr() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fpr.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"False Positive Rate — mlr_measures_classif.fpr","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.fpr\") msr(\"classif.fpr\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fpr.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"False Positive Rate — mlr_measures_classif.fpr","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.fpr.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"False Positive Rate — mlr_measures_classif.fpr","text":"Type: \"binary\" Range: \\([0, 1]\\) Minimize: TRUE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.logloss.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Loss — mlr_measures_classif.logloss","title":"Log Loss — mlr_measures_classif.logloss","text":"Measure compare true observed labels predicted probabilities multiclass classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.logloss.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log Loss — mlr_measures_classif.logloss","text":"Log Loss (.k.Benoulli Loss, Logistic Loss, Cross-Entropy Loss) defined $$   -\\frac{1}{n} \\sum_{=1}^n w_i \\log \\left(  p_i \\right ) $$ \\(p_i\\) probability true class observation \\(\\) \\(w_i\\) normalized weights observation \\(x_i\\).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.logloss.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Log Loss — mlr_measures_classif.logloss","text":"score function calls mlr3measures::logloss() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.logloss.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Log Loss — mlr_measures_classif.logloss","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.logloss\") msr(\"classif.logloss\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.logloss.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Log Loss — mlr_measures_classif.logloss","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.logloss.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Log Loss — mlr_measures_classif.logloss","text":"Type: \"classif\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: prob","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_au1p.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiclass AUC Scores — mlr_measures_classif.mauc_au1p","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_au1p","text":"Measure compare true observed labels predicted probabilities multiclass classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_au1p.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_au1p","text":"Multiclass AUC measures. AUNU: AUC class rest, using uniform class distribution. Computes AUC treating c-dimensional classifier c two-dimensional 1-vs-rest classifiers, classes assumed uniform distribution, order measure independent class distribution change (Fawcett 2001). AUNP: AUC class rest, using -priori class distribution. Computes AUC treating c-dimensional classifier c two-dimensional 1-vs-rest classifiers, taking account prior probability class (Fawcett 2001). AU1U: AUC class , using uniform class distribution. Computes something like AUC c(c - 1) binary classifiers (possible pairwise combinations). See Hand (2001) details. AU1P: AUC class , using -priori class distribution. Computes something like AUC c(c - 1) binary classifiers considering -priori distribution classes suggested Ferri (2009). Note deviate definition Ferri (2009) factor c. MU: Multiclass AUC defined Kleinman Page (2019). measure average pairwise AUCs classes. measure tested Python implementation Ross Kleinman.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_au1p.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_au1p","text":"score function calls mlr3measures::mauc_au1p() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_au1p.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_au1p","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.mauc_au1p\") msr(\"classif.mauc_au1p\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_au1p.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_au1p","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_au1p.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_au1p","text":"Type: \"classif\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: prob","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_au1u.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiclass AUC Scores — mlr_measures_classif.mauc_au1u","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_au1u","text":"Measure compare true observed labels predicted probabilities multiclass classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_au1u.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_au1u","text":"Multiclass AUC measures. AUNU: AUC class rest, using uniform class distribution. Computes AUC treating c-dimensional classifier c two-dimensional 1-vs-rest classifiers, classes assumed uniform distribution, order measure independent class distribution change (Fawcett 2001). AUNP: AUC class rest, using -priori class distribution. Computes AUC treating c-dimensional classifier c two-dimensional 1-vs-rest classifiers, taking account prior probability class (Fawcett 2001). AU1U: AUC class , using uniform class distribution. Computes something like AUC c(c - 1) binary classifiers (possible pairwise combinations). See Hand (2001) details. AU1P: AUC class , using -priori class distribution. Computes something like AUC c(c - 1) binary classifiers considering -priori distribution classes suggested Ferri (2009). Note deviate definition Ferri (2009) factor c. MU: Multiclass AUC defined Kleinman Page (2019). measure average pairwise AUCs classes. measure tested Python implementation Ross Kleinman.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_au1u.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_au1u","text":"score function calls mlr3measures::mauc_au1u() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_au1u.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_au1u","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.mauc_au1u\") msr(\"classif.mauc_au1u\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_au1u.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_au1u","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_au1u.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_au1u","text":"Type: \"classif\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: prob","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_aunp.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiclass AUC Scores — mlr_measures_classif.mauc_aunp","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_aunp","text":"Measure compare true observed labels predicted probabilities multiclass classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_aunp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_aunp","text":"Multiclass AUC measures. AUNU: AUC class rest, using uniform class distribution. Computes AUC treating c-dimensional classifier c two-dimensional 1-vs-rest classifiers, classes assumed uniform distribution, order measure independent class distribution change (Fawcett 2001). AUNP: AUC class rest, using -priori class distribution. Computes AUC treating c-dimensional classifier c two-dimensional 1-vs-rest classifiers, taking account prior probability class (Fawcett 2001). AU1U: AUC class , using uniform class distribution. Computes something like AUC c(c - 1) binary classifiers (possible pairwise combinations). See Hand (2001) details. AU1P: AUC class , using -priori class distribution. Computes something like AUC c(c - 1) binary classifiers considering -priori distribution classes suggested Ferri (2009). Note deviate definition Ferri (2009) factor c. MU: Multiclass AUC defined Kleinman Page (2019). measure average pairwise AUCs classes. measure tested Python implementation Ross Kleinman.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_aunp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_aunp","text":"score function calls mlr3measures::mauc_aunp() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_aunp.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_aunp","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.mauc_aunp\") msr(\"classif.mauc_aunp\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_aunp.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_aunp","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_aunp.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_aunp","text":"Type: \"classif\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: prob","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_aunu.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiclass AUC Scores — mlr_measures_classif.mauc_aunu","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_aunu","text":"Measure compare true observed labels predicted probabilities multiclass classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_aunu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_aunu","text":"Multiclass AUC measures. AUNU: AUC class rest, using uniform class distribution. Computes AUC treating c-dimensional classifier c two-dimensional 1-vs-rest classifiers, classes assumed uniform distribution, order measure independent class distribution change (Fawcett 2001). AUNP: AUC class rest, using -priori class distribution. Computes AUC treating c-dimensional classifier c two-dimensional 1-vs-rest classifiers, taking account prior probability class (Fawcett 2001). AU1U: AUC class , using uniform class distribution. Computes something like AUC c(c - 1) binary classifiers (possible pairwise combinations). See Hand (2001) details. AU1P: AUC class , using -priori class distribution. Computes something like AUC c(c - 1) binary classifiers considering -priori distribution classes suggested Ferri (2009). Note deviate definition Ferri (2009) factor c. MU: Multiclass AUC defined Kleinman Page (2019). measure average pairwise AUCs classes. measure tested Python implementation Ross Kleinman.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_aunu.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_aunu","text":"score function calls mlr3measures::mauc_aunu() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_aunu.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_aunu","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.mauc_aunu\") msr(\"classif.mauc_aunu\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_aunu.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_aunu","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_aunu.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_aunu","text":"Type: \"classif\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: prob","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_mu.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiclass AUC Scores — mlr_measures_classif.mauc_mu","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_mu","text":"Measure compare true observed labels predicted probabilities multiclass classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_mu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_mu","text":"Multiclass AUC measures. AUNU: AUC class rest, using uniform class distribution. Computes AUC treating c-dimensional classifier c two-dimensional 1-vs-rest classifiers, classes assumed uniform distribution, order measure independent class distribution change (Fawcett 2001). AUNP: AUC class rest, using -priori class distribution. Computes AUC treating c-dimensional classifier c two-dimensional 1-vs-rest classifiers, taking account prior probability class (Fawcett 2001). AU1U: AUC class , using uniform class distribution. Computes something like AUC c(c - 1) binary classifiers (possible pairwise combinations). See Hand (2001) details. AU1P: AUC class , using -priori class distribution. Computes something like AUC c(c - 1) binary classifiers considering -priori distribution classes suggested Ferri (2009). Note deviate definition Ferri (2009) factor c. MU: Multiclass AUC defined Kleinman Page (2019). measure average pairwise AUCs classes. measure tested Python implementation Ross Kleinman.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_mu.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_mu","text":"score function calls mlr3measures::mauc_mu() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_mu.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_mu","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.mauc_mu\") msr(\"classif.mauc_mu\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_mu.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_mu","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mauc_mu.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Multiclass AUC Scores — mlr_measures_classif.mauc_mu","text":"Type: \"classif\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: prob","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mbrier.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiclass Brier Score — mlr_measures_classif.mbrier","title":"Multiclass Brier Score — mlr_measures_classif.mbrier","text":"Measure compare true observed labels predicted probabilities multiclass classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mbrier.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiclass Brier Score — mlr_measures_classif.mbrier","text":"Brier score multi-class classification problems \\(k\\) labels defined $$    \\frac{1}{n} \\sum_{=1}^n \\sum_{j=1}^k (I_{ij} - p_{ij})^2. $$ \\(I_{ij}\\) 1 observation \\(x_i\\) true label \\(j\\), 0 otherwise. \\(p_{ij}\\) probability observation \\(x_i\\) belongs class \\(j\\). Note also common definition Brier score binary classification problems bbrier().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mbrier.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Multiclass Brier Score — mlr_measures_classif.mbrier","text":"score function calls mlr3measures::mbrier() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mbrier.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Multiclass Brier Score — mlr_measures_classif.mbrier","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.mbrier\") msr(\"classif.mbrier\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mbrier.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Multiclass Brier Score — mlr_measures_classif.mbrier","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mbrier.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Multiclass Brier Score — mlr_measures_classif.mbrier","text":"Type: \"classif\" Range: \\([0, 2]\\) Minimize: TRUE Required prediction: prob","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mcc.html","id":null,"dir":"Reference","previous_headings":"","what":"Matthews Correlation Coefficient — mlr_measures_classif.mcc","title":"Matthews Correlation Coefficient — mlr_measures_classif.mcc","text":"Measure compare true observed labels predicted labels multiclass classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mcc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Matthews Correlation Coefficient — mlr_measures_classif.mcc","text":"binary case, Matthews Correlation Coefficient defined $$    \\frac{\\mathrm{TP} \\cdot \\mathrm{TN} - \\mathrm{FP} \\cdot \\mathrm{FN}}{\\sqrt{(\\mathrm{TP} + \\mathrm{FP}) (\\mathrm{TP} + \\mathrm{FN}) (\\mathrm{TN} + \\mathrm{FP}) (\\mathrm{TN} + \\mathrm{FN})}}, $$ \\(TP\\), \\(FP\\), \\(TN\\), \\(TP\\) number true positives, false positives, true negatives, false negatives respectively. multi-class case, Matthews Correlation Coefficient defined multi-class confusion matrix \\(C\\) \\(K\\) classes: $$    \\frac{c \\cdot s - \\sum_k^K p_k \\cdot t_k}{\\sqrt{(s^2 - \\sum_k^K p_k^2) \\cdot (s^2 - \\sum_k^K t_k^2)}}, $$ \\(s = \\sum_i^K \\sum_j^K C_{ij}\\): total number samples \\(c = \\sum_k^K C_{kk}\\): total number correctly predicted samples \\(t_k = \\sum_i^K C_{ik}\\): number predictions class \\(k\\) \\(p_k = \\sum_j^K C_{kj}\\): number true occurrences class \\(k\\). formula undefined four sums denominator 0 binary case generally either \\(s^2 - \\sum_k^K p_k^2\\) \\(s^2 - \\sum_k^K t_k^2)\\) equal 0. denominator set 1. two classes, MCC longer range -1 +1. Instead, minimum value -1 0 depending true distribution. maximum value always +1.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mcc.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Matthews Correlation Coefficient — mlr_measures_classif.mcc","text":"score function calls mlr3measures::mcc() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mcc.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Matthews Correlation Coefficient — mlr_measures_classif.mcc","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.mcc\") msr(\"classif.mcc\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mcc.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Matthews Correlation Coefficient — mlr_measures_classif.mcc","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.mcc.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Matthews Correlation Coefficient — mlr_measures_classif.mcc","text":"Type: \"classif\" Range: \\([-1, 1]\\) Minimize: FALSE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.npv.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative Predictive Value — mlr_measures_classif.npv","title":"Negative Predictive Value — mlr_measures_classif.npv","text":"Measure compare true observed labels predicted labels binary classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.npv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Negative Predictive Value — mlr_measures_classif.npv","text":"Negative Predictive Value defined $$    \\frac{\\mathrm{TN}}{\\mathrm{FN} + \\mathrm{TN}}. $$ measure undefined FN + TN = 0.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.npv.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Negative Predictive Value — mlr_measures_classif.npv","text":"score function calls mlr3measures::npv() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.npv.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Negative Predictive Value — mlr_measures_classif.npv","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.npv\") msr(\"classif.npv\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.npv.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Negative Predictive Value — mlr_measures_classif.npv","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.npv.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Negative Predictive Value — mlr_measures_classif.npv","text":"Type: \"binary\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.ppv.html","id":null,"dir":"Reference","previous_headings":"","what":"Positive Predictive Value — mlr_measures_classif.ppv","title":"Positive Predictive Value — mlr_measures_classif.ppv","text":"Measure compare true observed labels predicted labels binary classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.ppv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Positive Predictive Value — mlr_measures_classif.ppv","text":"Positive Predictive Value defined $$    \\frac{\\mathrm{TP}}{\\mathrm{TP} + \\mathrm{FP}}. $$ Also know \"precision\". measure undefined TP + FP = 0.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.ppv.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Positive Predictive Value — mlr_measures_classif.ppv","text":"score function calls mlr3measures::ppv() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.ppv.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Positive Predictive Value — mlr_measures_classif.ppv","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.ppv\") msr(\"classif.ppv\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.ppv.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Positive Predictive Value — mlr_measures_classif.ppv","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.ppv.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Positive Predictive Value — mlr_measures_classif.ppv","text":"Type: \"binary\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.prauc.html","id":null,"dir":"Reference","previous_headings":"","what":"Area Under the Precision-Recall Curve — mlr_measures_classif.prauc","title":"Area Under the Precision-Recall Curve — mlr_measures_classif.prauc","text":"Measure compare true observed labels predicted probabilities binary classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.prauc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Area Under the Precision-Recall Curve — mlr_measures_classif.prauc","text":"Computes area Precision-Recall curve (PRC). PRC can interpreted relationship precision recall (sensitivity), considered appropriate measure unbalanced datasets ROC curve. AUC-PRC computed integration piecewise function. measure undefined true values either positive negative.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.prauc.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Area Under the Precision-Recall Curve — mlr_measures_classif.prauc","text":"score function calls mlr3measures::prauc() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.prauc.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Area Under the Precision-Recall Curve — mlr_measures_classif.prauc","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.prauc\") msr(\"classif.prauc\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.prauc.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Area Under the Precision-Recall Curve — mlr_measures_classif.prauc","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.prauc.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Area Under the Precision-Recall Curve — mlr_measures_classif.prauc","text":"Type: \"binary\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: prob","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.precision.html","id":null,"dir":"Reference","previous_headings":"","what":"Positive Predictive Value — mlr_measures_classif.precision","title":"Positive Predictive Value — mlr_measures_classif.precision","text":"Measure compare true observed labels predicted labels binary classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.precision.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Positive Predictive Value — mlr_measures_classif.precision","text":"Positive Predictive Value defined $$    \\frac{\\mathrm{TP}}{\\mathrm{TP} + \\mathrm{FP}}. $$ Also know \"precision\". measure undefined TP + FP = 0.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.precision.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Positive Predictive Value — mlr_measures_classif.precision","text":"score function calls mlr3measures::precision() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.precision.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Positive Predictive Value — mlr_measures_classif.precision","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.precision\") msr(\"classif.precision\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.precision.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Positive Predictive Value — mlr_measures_classif.precision","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.precision.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Positive Predictive Value — mlr_measures_classif.precision","text":"Type: \"binary\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.recall.html","id":null,"dir":"Reference","previous_headings":"","what":"True Positive Rate — mlr_measures_classif.recall","title":"True Positive Rate — mlr_measures_classif.recall","text":"Measure compare true observed labels predicted labels binary classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.recall.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"True Positive Rate — mlr_measures_classif.recall","text":"True Positive Rate defined $$   \\frac{\\mathrm{TP}}{\\mathrm{TP} + \\mathrm{FN}}. $$ also know \"recall\", \"sensitivity\", \"probability detection\". measure undefined TP + FN = 0.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.recall.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"True Positive Rate — mlr_measures_classif.recall","text":"score function calls mlr3measures::recall() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.recall.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"True Positive Rate — mlr_measures_classif.recall","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.recall\") msr(\"classif.recall\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.recall.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"True Positive Rate — mlr_measures_classif.recall","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.recall.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"True Positive Rate — mlr_measures_classif.recall","text":"Type: \"binary\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.sensitivity.html","id":null,"dir":"Reference","previous_headings":"","what":"True Positive Rate — mlr_measures_classif.sensitivity","title":"True Positive Rate — mlr_measures_classif.sensitivity","text":"Measure compare true observed labels predicted labels binary classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.sensitivity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"True Positive Rate — mlr_measures_classif.sensitivity","text":"True Positive Rate defined $$   \\frac{\\mathrm{TP}}{\\mathrm{TP} + \\mathrm{FN}}. $$ also know \"recall\", \"sensitivity\", \"probability detection\". measure undefined TP + FN = 0.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.sensitivity.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"True Positive Rate — mlr_measures_classif.sensitivity","text":"score function calls mlr3measures::sensitivity() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.sensitivity.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"True Positive Rate — mlr_measures_classif.sensitivity","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.sensitivity\") msr(\"classif.sensitivity\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.sensitivity.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"True Positive Rate — mlr_measures_classif.sensitivity","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.sensitivity.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"True Positive Rate — mlr_measures_classif.sensitivity","text":"Type: \"binary\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.specificity.html","id":null,"dir":"Reference","previous_headings":"","what":"True Negative Rate — mlr_measures_classif.specificity","title":"True Negative Rate — mlr_measures_classif.specificity","text":"Measure compare true observed labels predicted labels binary classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.specificity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"True Negative Rate — mlr_measures_classif.specificity","text":"True Negative Rate defined $$    \\frac{\\mathrm{TN}}{\\mathrm{FP} + \\mathrm{TN}}. $$ Also know \"specificity\" \"selectivity\". measure undefined FP + TN = 0.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.specificity.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"True Negative Rate — mlr_measures_classif.specificity","text":"score function calls mlr3measures::specificity() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.specificity.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"True Negative Rate — mlr_measures_classif.specificity","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.specificity\") msr(\"classif.specificity\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.specificity.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"True Negative Rate — mlr_measures_classif.specificity","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.specificity.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"True Negative Rate — mlr_measures_classif.specificity","text":"Type: \"binary\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tn.html","id":null,"dir":"Reference","previous_headings":"","what":"True Negatives — mlr_measures_classif.tn","title":"True Negatives — mlr_measures_classif.tn","text":"Measure compare true observed labels predicted labels binary classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"True Negatives — mlr_measures_classif.tn","text":"measure counts true negatives, .e. number predictions correctly indicating negative class label. sometimes also called \"correct rejection\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tn.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"True Negatives — mlr_measures_classif.tn","text":"score function calls mlr3measures::tn() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tn.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"True Negatives — mlr_measures_classif.tn","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.tn\") msr(\"classif.tn\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tn.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"True Negatives — mlr_measures_classif.tn","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tn.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"True Negatives — mlr_measures_classif.tn","text":"Type: \"binary\" Range: \\([0, \\infty)\\) Minimize: FALSE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tnr.html","id":null,"dir":"Reference","previous_headings":"","what":"True Negative Rate — mlr_measures_classif.tnr","title":"True Negative Rate — mlr_measures_classif.tnr","text":"Measure compare true observed labels predicted labels binary classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tnr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"True Negative Rate — mlr_measures_classif.tnr","text":"True Negative Rate defined $$    \\frac{\\mathrm{TN}}{\\mathrm{FP} + \\mathrm{TN}}. $$ Also know \"specificity\" \"selectivity\". measure undefined FP + TN = 0.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tnr.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"True Negative Rate — mlr_measures_classif.tnr","text":"score function calls mlr3measures::tnr() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tnr.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"True Negative Rate — mlr_measures_classif.tnr","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.tnr\") msr(\"classif.tnr\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tnr.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"True Negative Rate — mlr_measures_classif.tnr","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tnr.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"True Negative Rate — mlr_measures_classif.tnr","text":"Type: \"binary\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tp.html","id":null,"dir":"Reference","previous_headings":"","what":"True Positives — mlr_measures_classif.tp","title":"True Positives — mlr_measures_classif.tp","text":"Measure compare true observed labels predicted labels binary classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"True Positives — mlr_measures_classif.tp","text":"measure counts true positives, .e. number predictions correctly indicating positive class label. sometimes also called \"hit\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"True Positives — mlr_measures_classif.tp","text":"score function calls mlr3measures::tp() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tp.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"True Positives — mlr_measures_classif.tp","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.tp\") msr(\"classif.tp\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tp.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"True Positives — mlr_measures_classif.tp","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tp.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"True Positives — mlr_measures_classif.tp","text":"Type: \"binary\" Range: \\([0, \\infty)\\) Minimize: FALSE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tpr.html","id":null,"dir":"Reference","previous_headings":"","what":"True Positive Rate — mlr_measures_classif.tpr","title":"True Positive Rate — mlr_measures_classif.tpr","text":"Measure compare true observed labels predicted labels binary classification tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tpr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"True Positive Rate — mlr_measures_classif.tpr","text":"True Positive Rate defined $$   \\frac{\\mathrm{TP}}{\\mathrm{TP} + \\mathrm{FN}}. $$ also know \"recall\", \"sensitivity\", \"probability detection\". measure undefined TP + FN = 0.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tpr.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"True Positive Rate — mlr_measures_classif.tpr","text":"score function calls mlr3measures::tpr() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tpr.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"True Positive Rate — mlr_measures_classif.tpr","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"classif.tpr\") msr(\"classif.tpr\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tpr.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"True Positive Rate — mlr_measures_classif.tpr","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_classif.tpr.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"True Positive Rate — mlr_measures_classif.tpr","text":"Type: \"binary\" Range: \\([0, 1]\\) Minimize: FALSE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_debug_classif.html","id":null,"dir":"Reference","previous_headings":"","what":"Debug Measure for Classification — mlr_measures_debug_classif","title":"Debug Measure for Classification — mlr_measures_debug_classif","text":"measure returns number observations PredictionClassif object. main purpose debugging. parameter na_ratio (numeric(1)) controls ratio scores randomly set NA, 0 (default) 1.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_debug_classif.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Debug Measure for Classification — mlr_measures_debug_classif","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"debug_classif\") msr(\"debug_classif\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_debug_classif.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Debug Measure for Classification — mlr_measures_debug_classif","text":"Task type: “NA” Range: \\([0, \\infty)\\) Minimize: NA Average: macro Required Prediction: “response” Required Packages: mlr3","code":""},{"path":[]},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_debug_classif.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Debug Measure for Classification — mlr_measures_debug_classif","text":"mlr3::Measure -> MeasureDebugClassif","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_debug_classif.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Debug Measure for Classification — mlr_measures_debug_classif","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_debug_classif.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Debug Measure for Classification — mlr_measures_debug_classif","text":"MeasureDebugClassif$new() MeasureDebugClassif$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_debug_classif.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Debug Measure for Classification — mlr_measures_debug_classif","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_debug_classif.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Debug Measure for Classification — mlr_measures_debug_classif","text":"","code":"MeasureDebugClassif$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_debug_classif.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Debug Measure for Classification — mlr_measures_debug_classif","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_debug_classif.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Debug Measure for Classification — mlr_measures_debug_classif","text":"","code":"MeasureDebugClassif$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_debug_classif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Debug Measure for Classification — mlr_measures_debug_classif","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_debug_classif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Debug Measure for Classification — mlr_measures_debug_classif","text":"","code":"task = tsk(\"wine\") learner = lrn(\"classif.featureless\") measure = msr(\"debug_classif\", na_ratio = 0.5) rr = resample(task, learner, rsmp(\"cv\", folds = 5)) rr$score(measure) #>    task_id          learner_id resampling_id iteration debug_classif #>     <char>              <char>        <char>     <int>         <num> #> 1:    wine classif.featureless            cv         1            36 #> 2:    wine classif.featureless            cv         2            NA #> 3:    wine classif.featureless            cv         3            36 #> 4:    wine classif.featureless            cv         4            35 #> 5:    wine classif.featureless            cv         5            35 #> Hidden columns: task, learner, resampling, prediction_test"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_elapsed_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Elapsed Time Measure — mlr_measures_elapsed_time","title":"Elapsed Time Measure — mlr_measures_elapsed_time","text":"Measures elapsed time train (\"time_train\"), predict (\"time_predict\"), (\"time_both\"). Aggregation elapsed time defaults mean can configured via field aggregator Measure. predictions multiple predict sets made resample() benchmark(), predict time shows cumulative duration predictions. learner$predict() called manually, last predict time gets overwritten. elapsed time accounts training duration primary learner, excluding time required training fallback learner.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_elapsed_time.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Elapsed Time Measure — mlr_measures_elapsed_time","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"time_train\") msr(\"time_train\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_elapsed_time.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Elapsed Time Measure — mlr_measures_elapsed_time","text":"Task type: “NA” Range: \\([0, \\infty)\\) Minimize: TRUE Average: macro Required Prediction: “NA” Required Packages: mlr3","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_elapsed_time.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Elapsed Time Measure — mlr_measures_elapsed_time","text":"Empty ParamSet","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_elapsed_time.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Elapsed Time Measure — mlr_measures_elapsed_time","text":"mlr3::Measure -> MeasureElapsedTime","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_elapsed_time.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Elapsed Time Measure — mlr_measures_elapsed_time","text":"stages (character()) stages learner measure? Usually set construction.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_elapsed_time.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Elapsed Time Measure — mlr_measures_elapsed_time","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_elapsed_time.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Elapsed Time Measure — mlr_measures_elapsed_time","text":"MeasureElapsedTime$new() MeasureElapsedTime$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_elapsed_time.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Elapsed Time Measure — mlr_measures_elapsed_time","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_elapsed_time.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Elapsed Time Measure — mlr_measures_elapsed_time","text":"","code":"MeasureElapsedTime$new(id = \"elapsed_time\", stages)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_elapsed_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Elapsed Time Measure — mlr_measures_elapsed_time","text":"id (character(1)) Identifier new instance. stages (character()) Subset (\"train\", \"predict\"). runtime provided stages summed.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_elapsed_time.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Elapsed Time Measure — mlr_measures_elapsed_time","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_elapsed_time.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Elapsed Time Measure — mlr_measures_elapsed_time","text":"","code":"MeasureElapsedTime$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_elapsed_time.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Elapsed Time Measure — mlr_measures_elapsed_time","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_internal_valid_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Measure Internal Validation Score — mlr_measures_internal_valid_score","title":"Measure Internal Validation Score — mlr_measures_internal_valid_score","text":"Returns selected internal validation score Learner learners property \"validation\". Returns NA unsupported learners, validation done, selected id found. id measure set value select provided.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_internal_valid_score.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Measure Internal Validation Score — mlr_measures_internal_valid_score","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"internal_valid_score\") msr(\"internal_valid_score\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_internal_valid_score.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Measure Internal Validation Score — mlr_measures_internal_valid_score","text":"Task type: “NA” Range: \\((-\\infty, \\infty)\\) Minimize: NA Average: macro Required Prediction: “NA” Required Packages: mlr3","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_internal_valid_score.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Measure Internal Validation Score — mlr_measures_internal_valid_score","text":"Empty ParamSet","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_internal_valid_score.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Measure Internal Validation Score — mlr_measures_internal_valid_score","text":"mlr3::Measure -> MeasureInternalValidScore","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_internal_valid_score.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Measure Internal Validation Score — mlr_measures_internal_valid_score","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_internal_valid_score.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Measure Internal Validation Score — mlr_measures_internal_valid_score","text":"MeasureInternalValidScore$new() MeasureInternalValidScore$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_internal_valid_score.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Measure Internal Validation Score — mlr_measures_internal_valid_score","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_internal_valid_score.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure Internal Validation Score — mlr_measures_internal_valid_score","text":"","code":"MeasureInternalValidScore$new(select = NULL, minimize = NA)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_internal_valid_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure Internal Validation Score — mlr_measures_internal_valid_score","text":"select (character(1)) internal validation scores select. scores available depends learner configuration. default, first score chosen. minimize (logical(1)) Whether smaller values better. Must set use tuning.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_internal_valid_score.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Measure Internal Validation Score — mlr_measures_internal_valid_score","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_internal_valid_score.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure Internal Validation Score — mlr_measures_internal_valid_score","text":"","code":"MeasureInternalValidScore$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_internal_valid_score.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure Internal Validation Score — mlr_measures_internal_valid_score","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_internal_valid_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measure Internal Validation Score — mlr_measures_internal_valid_score","text":"","code":"rr = resample(tsk(\"iris\"), lrn(\"classif.debug\", validate = 0.3), rsmp(\"holdout\")) rr$score(msr(\"internal_valid_score\", select = \"acc\")) #>    task_id    learner_id resampling_id iteration       acc #>     <char>        <char>        <char>     <int>     <num> #> 1:    iris classif.debug       holdout         1 0.3333333 #> Hidden columns: task, learner, resampling, prediction_test"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_oob_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Out-of-bag Error Measure — mlr_measures_oob_error","title":"Out-of-bag Error Measure — mlr_measures_oob_error","text":"Returns --bag error Learner learners support (learners property \"oob_error\"). Returns NA unsupported learners.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_oob_error.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Out-of-bag Error Measure — mlr_measures_oob_error","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"oob_error\") msr(\"oob_error\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_oob_error.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Out-of-bag Error Measure — mlr_measures_oob_error","text":"Task type: “NA” Range: \\((-\\infty, \\infty)\\) Minimize: TRUE Average: macro Required Prediction: “NA” Required Packages: mlr3","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_oob_error.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Out-of-bag Error Measure — mlr_measures_oob_error","text":"Empty ParamSet","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_oob_error.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Out-of-bag Error Measure — mlr_measures_oob_error","text":"mlr3::Measure -> MeasureOOBError","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_oob_error.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Out-of-bag Error Measure — mlr_measures_oob_error","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_oob_error.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Out-of-bag Error Measure — mlr_measures_oob_error","text":"MeasureOOBError$new() MeasureOOBError$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_oob_error.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Out-of-bag Error Measure — mlr_measures_oob_error","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_oob_error.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Out-of-bag Error Measure — mlr_measures_oob_error","text":"","code":"MeasureOOBError$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_oob_error.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Out-of-bag Error Measure — mlr_measures_oob_error","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_oob_error.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Out-of-bag Error Measure — mlr_measures_oob_error","text":"","code":"MeasureOOBError$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_oob_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Out-of-bag Error Measure — mlr_measures_oob_error","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.bias.html","id":null,"dir":"Reference","previous_headings":"","what":"Bias — mlr_measures_regr.bias","title":"Bias — mlr_measures_regr.bias","text":"Measure compare true observed response predicted response regression tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.bias.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bias — mlr_measures_regr.bias","text":"Bias defined $$   \\frac{1}{n} \\sum_{=1}^n w_i \\left( t_i - r_i \\right), $$ \\(w_i\\) normalized sample weights. Good predictions score close 0.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.bias.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Bias — mlr_measures_regr.bias","text":"score function calls mlr3measures::bias() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.bias.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Bias — mlr_measures_regr.bias","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"regr.bias\") msr(\"regr.bias\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.bias.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Bias — mlr_measures_regr.bias","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.bias.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Bias — mlr_measures_regr.bias","text":"Type: \"regr\" Range: \\((-\\infty, \\infty)\\) Minimize: NA Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.ktau.html","id":null,"dir":"Reference","previous_headings":"","what":"Kendall's tau — mlr_measures_regr.ktau","title":"Kendall's tau — mlr_measures_regr.ktau","text":"Measure compare true observed response predicted response regression tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.ktau.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kendall's tau — mlr_measures_regr.ktau","text":"Kendall's tau defined Kendall's rank correlation coefficient truth response. defined $$   \\tau = \\frac{(\\mathrm{number concordant pairs)} - (\\mathrm{number discordant pairs)}}{\\mathrm{(number pairs)}}   $$ Calls stats::cor() method set \"kendall\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.ktau.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Kendall's tau — mlr_measures_regr.ktau","text":"score function calls mlr3measures::ktau() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.ktau.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Kendall's tau — mlr_measures_regr.ktau","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"regr.ktau\") msr(\"regr.ktau\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.ktau.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Kendall's tau — mlr_measures_regr.ktau","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.ktau.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Kendall's tau — mlr_measures_regr.ktau","text":"Type: \"regr\" Range: \\([-1, 1]\\) Minimize: FALSE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.mae.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Absolute Error — mlr_measures_regr.mae","title":"Mean Absolute Error — mlr_measures_regr.mae","text":"Measure compare true observed response predicted response regression tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.mae.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mean Absolute Error — mlr_measures_regr.mae","text":"Mean Absolute Error defined $$   \\frac{1}{n} \\sum_{=1}^n w_i \\left| t_i - r_i \\right|, $$ \\(w_i\\) normalized sample weights.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.mae.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Mean Absolute Error — mlr_measures_regr.mae","text":"score function calls mlr3measures::mae() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.mae.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Mean Absolute Error — mlr_measures_regr.mae","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"regr.mae\") msr(\"regr.mae\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.mae.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Mean Absolute Error — mlr_measures_regr.mae","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.mae.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Mean Absolute Error — mlr_measures_regr.mae","text":"Type: \"regr\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.mape.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Absolute Percent Error — mlr_measures_regr.mape","title":"Mean Absolute Percent Error — mlr_measures_regr.mape","text":"Measure compare true observed response predicted response regression tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.mape.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mean Absolute Percent Error — mlr_measures_regr.mape","text":"Mean Absolute Percent Error defined $$   \\frac{1}{n} \\sum_{=1}^n w_i \\left| \\frac{ t_i - r_i}{t_i} \\right|,  $$ \\(w_i\\) normalized sample weights. measure undefined element \\(t\\) \\(0\\).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.mape.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Mean Absolute Percent Error — mlr_measures_regr.mape","text":"score function calls mlr3measures::mape() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.mape.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Mean Absolute Percent Error — mlr_measures_regr.mape","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"regr.mape\") msr(\"regr.mape\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.mape.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Mean Absolute Percent Error — mlr_measures_regr.mape","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.mape.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Mean Absolute Percent Error — mlr_measures_regr.mape","text":"Type: \"regr\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.maxae.html","id":null,"dir":"Reference","previous_headings":"","what":"Max Absolute Error — mlr_measures_regr.maxae","title":"Max Absolute Error — mlr_measures_regr.maxae","text":"Measure compare true observed response predicted response regression tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.maxae.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Max Absolute Error — mlr_measures_regr.maxae","text":"Max Absolute Error defined $$   \\max \\left( \\left| t_i - r_i \\right| \\right).  $$","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.maxae.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Max Absolute Error — mlr_measures_regr.maxae","text":"score function calls mlr3measures::maxae() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.maxae.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Max Absolute Error — mlr_measures_regr.maxae","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"regr.maxae\") msr(\"regr.maxae\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.maxae.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Max Absolute Error — mlr_measures_regr.maxae","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.maxae.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Max Absolute Error — mlr_measures_regr.maxae","text":"Type: \"regr\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.medae.html","id":null,"dir":"Reference","previous_headings":"","what":"Median Absolute Error — mlr_measures_regr.medae","title":"Median Absolute Error — mlr_measures_regr.medae","text":"Measure compare true observed response predicted response regression tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.medae.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Median Absolute Error — mlr_measures_regr.medae","text":"Median Absolute Error defined $$   \\mathop{\\mathrm{median}} \\left| t_i - r_i \\right|. $$","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.medae.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Median Absolute Error — mlr_measures_regr.medae","text":"score function calls mlr3measures::medae() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.medae.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Median Absolute Error — mlr_measures_regr.medae","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"regr.medae\") msr(\"regr.medae\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.medae.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Median Absolute Error — mlr_measures_regr.medae","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.medae.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Median Absolute Error — mlr_measures_regr.medae","text":"Type: \"regr\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.medse.html","id":null,"dir":"Reference","previous_headings":"","what":"Median Squared Error — mlr_measures_regr.medse","title":"Median Squared Error — mlr_measures_regr.medse","text":"Measure compare true observed response predicted response regression tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.medse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Median Squared Error — mlr_measures_regr.medse","text":"Median Squared Error defined $$   \\mathop{\\mathrm{median}} \\left[ \\left( t_i - r_i \\right)^2 \\right]. $$","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.medse.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Median Squared Error — mlr_measures_regr.medse","text":"score function calls mlr3measures::medse() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.medse.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Median Squared Error — mlr_measures_regr.medse","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"regr.medse\") msr(\"regr.medse\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.medse.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Median Squared Error — mlr_measures_regr.medse","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.medse.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Median Squared Error — mlr_measures_regr.medse","text":"Type: \"regr\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.mse.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Squared Error — mlr_measures_regr.mse","title":"Mean Squared Error — mlr_measures_regr.mse","text":"Measure compare true observed response predicted response regression tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.mse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mean Squared Error — mlr_measures_regr.mse","text":"Mean Squared Error defined $$   \\frac{1}{n} \\sum_{=1}^n w_i \\left( t_i - r_i \\right)^2, $$ \\(w_i\\) normalized sample weights.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.mse.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Mean Squared Error — mlr_measures_regr.mse","text":"score function calls mlr3measures::mse() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.mse.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Mean Squared Error — mlr_measures_regr.mse","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"regr.mse\") msr(\"regr.mse\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.mse.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Mean Squared Error — mlr_measures_regr.mse","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.mse.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Mean Squared Error — mlr_measures_regr.mse","text":"Type: \"regr\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.msle.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Squared Log Error — mlr_measures_regr.msle","title":"Mean Squared Log Error — mlr_measures_regr.msle","text":"Measure compare true observed response predicted response regression tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.msle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mean Squared Log Error — mlr_measures_regr.msle","text":"Mean Squared Log Error defined $$   \\frac{1}{n} \\sum_{=1}^n w_i \\left( \\ln (1 + t_i) - \\ln (1 + r_i) \\right)^2, $$ \\(w_i\\) normalized sample weights. measure undefined element \\(t\\) \\(r\\) less equal \\(-1\\).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.msle.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Mean Squared Log Error — mlr_measures_regr.msle","text":"score function calls mlr3measures::msle() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.msle.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Mean Squared Log Error — mlr_measures_regr.msle","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"regr.msle\") msr(\"regr.msle\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.msle.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Mean Squared Log Error — mlr_measures_regr.msle","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.msle.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Mean Squared Log Error — mlr_measures_regr.msle","text":"Type: \"regr\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.pbias.html","id":null,"dir":"Reference","previous_headings":"","what":"Percent Bias — mlr_measures_regr.pbias","title":"Percent Bias — mlr_measures_regr.pbias","text":"Measure compare true observed response predicted response regression tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.pbias.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Percent Bias — mlr_measures_regr.pbias","text":"Percent Bias defined $$   \\frac{1}{n} \\sum_{=1}^n w_i \\frac{\\left( t_i - r_i \\right)}{\\left| t_i \\right|}, $$ \\(w_i\\) normalized sample weights. Good predictions score close 0.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.pbias.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Percent Bias — mlr_measures_regr.pbias","text":"score function calls mlr3measures::pbias() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.pbias.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Percent Bias — mlr_measures_regr.pbias","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"regr.pbias\") msr(\"regr.pbias\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.pbias.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Percent Bias — mlr_measures_regr.pbias","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.pbias.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Percent Bias — mlr_measures_regr.pbias","text":"Type: \"regr\" Range: \\((-\\infty, \\infty)\\) Minimize: NA Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.pinball.html","id":null,"dir":"Reference","previous_headings":"","what":"Average Pinball Loss — mlr_measures_regr.pinball","title":"Average Pinball Loss — mlr_measures_regr.pinball","text":"Measure compare true observed response predicted response regression tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.pinball.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Average Pinball Loss — mlr_measures_regr.pinball","text":"pinball loss quantile regression defined $$ \\text{Average Pinball Loss} = \\frac{1}{n} \\sum_{=1}^{n} w_{} \\begin{cases} q \\cdot (t_i - r_i) & \\text{} t_i \\geq r_i \\\\ (1 - q) \\cdot (r_i - t_i) & \\text{} t_i < r_i \\end{cases} $$ \\(q\\) quantile \\(w_i\\) normalized sample weights.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.pinball.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Average Pinball Loss — mlr_measures_regr.pinball","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"regr.pinball\") msr(\"regr.pinball\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.pinball.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Average Pinball Loss — mlr_measures_regr.pinball","text":"Task type: “regr” Range: \\((-\\infty, \\infty)\\) Minimize: TRUE Average: macro Required Prediction: “quantiles” Required Packages: mlr3","code":""},{"path":[]},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.pinball.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Average Pinball Loss — mlr_measures_regr.pinball","text":"mlr3::Measure -> mlr3::MeasureRegr -> MeasureRegrPinball","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.pinball.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Average Pinball Loss — mlr_measures_regr.pinball","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.pinball.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Average Pinball Loss — mlr_measures_regr.pinball","text":"MeasureRegrPinball$new() MeasureRegrPinball$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.pinball.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Average Pinball Loss — mlr_measures_regr.pinball","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.pinball.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Average Pinball Loss — mlr_measures_regr.pinball","text":"","code":"MeasureRegrPinball$new(alpha = 0.5)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.pinball.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Average Pinball Loss — mlr_measures_regr.pinball","text":"alpha numeric(1) quantile compute pinball loss. Must one quantiles Learner trained .","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.pinball.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Average Pinball Loss — mlr_measures_regr.pinball","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.pinball.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Average Pinball Loss — mlr_measures_regr.pinball","text":"","code":"MeasureRegrPinball$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.pinball.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Average Pinball Loss — mlr_measures_regr.pinball","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rmse.html","id":null,"dir":"Reference","previous_headings":"","what":"Root Mean Squared Error — mlr_measures_regr.rmse","title":"Root Mean Squared Error — mlr_measures_regr.rmse","text":"Measure compare true observed response predicted response regression tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rmse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Root Mean Squared Error — mlr_measures_regr.rmse","text":"Root Mean Squared Error defined $$   \\sqrt{\\frac{1}{n} \\sum_{=1}^n w_i \\left( t_i - r_i \\right)^2}, $$ \\(w_i\\) normalized sample weights.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rmse.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Root Mean Squared Error — mlr_measures_regr.rmse","text":"score function calls mlr3measures::rmse() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rmse.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Root Mean Squared Error — mlr_measures_regr.rmse","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"regr.rmse\") msr(\"regr.rmse\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rmse.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Root Mean Squared Error — mlr_measures_regr.rmse","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rmse.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Root Mean Squared Error — mlr_measures_regr.rmse","text":"Type: \"regr\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rmsle.html","id":null,"dir":"Reference","previous_headings":"","what":"Root Mean Squared Log Error — mlr_measures_regr.rmsle","title":"Root Mean Squared Log Error — mlr_measures_regr.rmsle","text":"Measure compare true observed response predicted response regression tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rmsle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Root Mean Squared Log Error — mlr_measures_regr.rmsle","text":"Root Mean Squared Log Error defined $$   \\sqrt{\\frac{1}{n} \\sum_{=1}^n w_i \\left( \\ln (1 + t_i) - \\ln (1 + r_i) \\right)^2}, $$ \\(w_i\\) normalized sample weights. measure undefined element \\(t\\) \\(r\\) less equal \\(-1\\).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rmsle.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Root Mean Squared Log Error — mlr_measures_regr.rmsle","text":"score function calls mlr3measures::rmsle() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rmsle.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Root Mean Squared Log Error — mlr_measures_regr.rmsle","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"regr.rmsle\") msr(\"regr.rmsle\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rmsle.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Root Mean Squared Log Error — mlr_measures_regr.rmsle","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rmsle.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Root Mean Squared Log Error — mlr_measures_regr.rmsle","text":"Type: \"regr\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rqr.html","id":null,"dir":"Reference","previous_headings":"","what":"R-Squared for Quantile Regression — mlr_measures_regr.rqr","title":"R-Squared for Quantile Regression — mlr_measures_regr.rqr","text":"Measure compare true observed response predicted quantiles regression tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rqr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R-Squared for Quantile Regression — mlr_measures_regr.rqr","text":"\\(R^1(\\alpha)\\) defined $$   1 - \\frac{\\sum_{=1}^n \\rho_\\alpha \\left( t_i - r_i(\\alpha) \\right)}{\\sum_{=1}^n \\rho_\\alpha \\left( t_i - q_{\\alpha} \\right)}, $$ quantile \\(\\alpha\\), \\(\\rho_\\alpha\\) pinball function, \\(r_i(\\alpha)\\) predictions quantile \\(q_{\\alpha}\\) empirical \\(\\alpha\\)-quantile test training data. \\(R^1(\\alpha)\\) analogous \\(R^2\\) regression tasks. compares pinball function predictions relative naive model predicting empirical quantile. measure undefined constant \\(t\\).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rqr.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"R-Squared for Quantile Regression — mlr_measures_regr.rqr","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"regr.rqr\") msr(\"regr.rqr\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rqr.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"R-Squared for Quantile Regression — mlr_measures_regr.rqr","text":"Task type: “regr” Range: \\((-\\infty, 1]\\) Minimize: FALSE Average: macro Required Prediction: “quantiles” Required Packages: mlr3","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rqr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"R-Squared for Quantile Regression — mlr_measures_regr.rqr","text":"Koenker, Roger, Machado, F. JA (1999). “Goodness Fit Related Inference Processes Quantile Regression.” Journal American Statistical Association, 94(448), 1296–1310. doi:10.1080/01621459.1999.10473882 .","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rqr.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"R-Squared for Quantile Regression — mlr_measures_regr.rqr","text":"mlr3::Measure -> mlr3::MeasureRegr -> MeasureRQR","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rqr.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"R-Squared for Quantile Regression — mlr_measures_regr.rqr","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rqr.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R-Squared for Quantile Regression — mlr_measures_regr.rqr","text":"MeasureRegrRQR$new() MeasureRegrRQR$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rqr.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R-Squared for Quantile Regression — mlr_measures_regr.rqr","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rqr.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R-Squared for Quantile Regression — mlr_measures_regr.rqr","text":"","code":"MeasureRegrRQR$new(alpha = 0.5, pred_set_mean = TRUE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rqr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R-Squared for Quantile Regression — mlr_measures_regr.rqr","text":"alpha numeric(1) quantile compute measure. Must one quantiles Learner trained . pred_set_mean logical(1) TRUE, mean true values calculated prediction set. FALSE, mean true values calculated training set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rqr.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R-Squared for Quantile Regression — mlr_measures_regr.rqr","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rqr.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R-Squared for Quantile Regression — mlr_measures_regr.rqr","text":"","code":"MeasureRegrRQR$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rqr.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R-Squared for Quantile Regression — mlr_measures_regr.rqr","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rsq.html","id":null,"dir":"Reference","previous_headings":"","what":"R-Squared — mlr_measures_regr.rsq","title":"R-Squared — mlr_measures_regr.rsq","text":"Measure compare true observed response predicted response regression tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rsq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R-Squared — mlr_measures_regr.rsq","text":"R Squared defined $$   1 - \\frac{\\sum_{=1}^n w_i \\left( t_i - r_i \\right)^2}{\\sum_{=1}^n w_i \\left( t_i - \\bar{t} \\right)^2}, $$ \\(\\bar{t} = \\frac{1}{n} \\sum_{=1}^n t_i\\) \\(w_i\\) weights. Also known coefficient determination explained variation. compares squared error predictions relative naive model predicting mean. Note weights used scale squared error individual predictions (numerator denominator), \"plug \" value \\(\\bar{t}\\) computed without weights. measure undefined constant \\(t\\).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rsq.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"R-Squared — mlr_measures_regr.rsq","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"regr.rsq\") msr(\"regr.rsq\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rsq.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"R-Squared — mlr_measures_regr.rsq","text":"Task type: “regr” Range: \\((-\\infty, 1]\\) Minimize: FALSE Average: macro Required Prediction: “response” Required Packages: mlr3","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rsq.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"R-Squared — mlr_measures_regr.rsq","text":"Empty ParamSet","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rsq.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"R-Squared — mlr_measures_regr.rsq","text":"mlr3::Measure -> mlr3::MeasureRegr -> MeasureRSQ","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rsq.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"R-Squared — mlr_measures_regr.rsq","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rsq.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R-Squared — mlr_measures_regr.rsq","text":"MeasureRegrRSQ$new() MeasureRegrRSQ$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rsq.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R-Squared — mlr_measures_regr.rsq","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rsq.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R-Squared — mlr_measures_regr.rsq","text":"","code":"MeasureRegrRSQ$new(pred_set_mean = TRUE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rsq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R-Squared — mlr_measures_regr.rsq","text":"pred_set_mean logical(1) TRUE, mean true values calculated prediction set. FALSE, mean true values calculated training set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rsq.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R-Squared — mlr_measures_regr.rsq","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rsq.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R-Squared — mlr_measures_regr.rsq","text":"","code":"MeasureRegrRSQ$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.rsq.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R-Squared — mlr_measures_regr.rsq","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.sae.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum of Absolute Errors — mlr_measures_regr.sae","title":"Sum of Absolute Errors — mlr_measures_regr.sae","text":"Measure compare true observed response predicted response regression tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.sae.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sum of Absolute Errors — mlr_measures_regr.sae","text":"Sum Absolute Errors defined $$   \\sum_{=1}^n \\left| t_i - r_i \\right|. $$","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.sae.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sum of Absolute Errors — mlr_measures_regr.sae","text":"score function calls mlr3measures::sae() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.sae.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Sum of Absolute Errors — mlr_measures_regr.sae","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"regr.sae\") msr(\"regr.sae\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.sae.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Sum of Absolute Errors — mlr_measures_regr.sae","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.sae.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Sum of Absolute Errors — mlr_measures_regr.sae","text":"Type: \"regr\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.smape.html","id":null,"dir":"Reference","previous_headings":"","what":"Symmetric Mean Absolute Percent Error — mlr_measures_regr.smape","title":"Symmetric Mean Absolute Percent Error — mlr_measures_regr.smape","text":"Measure compare true observed response predicted response regression tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.smape.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Symmetric Mean Absolute Percent Error — mlr_measures_regr.smape","text":"Symmetric Mean Absolute Percent Error defined $$   \\frac{2}{n} \\sum_{=1}^n \\frac{\\left| t_i - r_i \\right|}{\\left| t_i \\right| + \\left| r_i \\right|}. $$ measure undefined \\(|t| + |r|\\) equal \\(0\\).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.smape.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Symmetric Mean Absolute Percent Error — mlr_measures_regr.smape","text":"score function calls mlr3measures::smape() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.smape.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Symmetric Mean Absolute Percent Error — mlr_measures_regr.smape","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"regr.smape\") msr(\"regr.smape\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.smape.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Symmetric Mean Absolute Percent Error — mlr_measures_regr.smape","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.smape.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Symmetric Mean Absolute Percent Error — mlr_measures_regr.smape","text":"Type: \"regr\" Range: \\([0, 2]\\) Minimize: TRUE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.srho.html","id":null,"dir":"Reference","previous_headings":"","what":"Spearman's rho — mlr_measures_regr.srho","title":"Spearman's rho — mlr_measures_regr.srho","text":"Measure compare true observed response predicted response regression tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.srho.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spearman's rho — mlr_measures_regr.srho","text":"Spearman's rho defined Spearman's rank correlation coefficient truth response. Calls stats::cor() method set \"spearman\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.srho.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Spearman's rho — mlr_measures_regr.srho","text":"score function calls mlr3measures::srho() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.srho.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Spearman's rho — mlr_measures_regr.srho","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"regr.srho\") msr(\"regr.srho\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.srho.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Spearman's rho — mlr_measures_regr.srho","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.srho.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Spearman's rho — mlr_measures_regr.srho","text":"Type: \"regr\" Range: \\([-1, 1]\\) Minimize: FALSE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.sse.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum of Squared Errors — mlr_measures_regr.sse","title":"Sum of Squared Errors — mlr_measures_regr.sse","text":"Measure compare true observed response predicted response regression tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.sse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sum of Squared Errors — mlr_measures_regr.sse","text":"Sum Squared Errors defined $$   \\sum_{=1}^n \\left( t_i - r_i \\right)^2. $$","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.sse.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sum of Squared Errors — mlr_measures_regr.sse","text":"score function calls mlr3measures::sse() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.sse.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Sum of Squared Errors — mlr_measures_regr.sse","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"regr.sse\") msr(\"regr.sse\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.sse.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Sum of Squared Errors — mlr_measures_regr.sse","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_regr.sse.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Sum of Squared Errors — mlr_measures_regr.sse","text":"Type: \"regr\" Range: \\([0, \\infty)\\) Minimize: TRUE Required prediction: response","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_selected_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Selected Features Measure — mlr_measures_selected_features","title":"Selected Features Measure — mlr_measures_selected_features","text":"Measures number selected features extracting learners property \"selected_features\". parameter normalize set TRUE, relative number features instead absolute number features returned. Note models must stored able extract information. learner support extraction used features, NA returned. measure requires Task Learner scoring.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_selected_features.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Selected Features Measure — mlr_measures_selected_features","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"selected_features\") msr(\"selected_features\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_selected_features.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Selected Features Measure — mlr_measures_selected_features","text":"Task type: “NA” Range: \\([0, \\infty)\\) Minimize: TRUE Average: macro Required Prediction: “NA” Required Packages: mlr3","code":""},{"path":[]},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_selected_features.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Selected Features Measure — mlr_measures_selected_features","text":"mlr3::Measure -> MeasureSelectedFeatures","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_selected_features.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Selected Features Measure — mlr_measures_selected_features","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_selected_features.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Selected Features Measure — mlr_measures_selected_features","text":"MeasureSelectedFeatures$new() MeasureSelectedFeatures$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_selected_features.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Selected Features Measure — mlr_measures_selected_features","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_selected_features.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selected Features Measure — mlr_measures_selected_features","text":"","code":"MeasureSelectedFeatures$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_selected_features.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Selected Features Measure — mlr_measures_selected_features","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_selected_features.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Selected Features Measure — mlr_measures_selected_features","text":"","code":"MeasureSelectedFeatures$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_selected_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selected Features Measure — mlr_measures_selected_features","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_selected_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Selected Features Measure — mlr_measures_selected_features","text":"","code":"task = tsk(\"german_credit\") learner = lrn(\"classif.rpart\") rr = resample(task, learner, rsmp(\"cv\", folds = 3), store_models = TRUE)  scores = rr$score(msr(\"selected_features\")) scores[, c(\"iteration\", \"selected_features\")] #>    iteration selected_features #>        <int>             <num> #> 1:         1                12 #> 2:         2                 7 #> 3:         3                 7"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_sim.jaccard.html","id":null,"dir":"Reference","previous_headings":"","what":"Jaccard Similarity Index — mlr_measures_sim.jaccard","title":"Jaccard Similarity Index — mlr_measures_sim.jaccard","text":"Measure compare two sets w.r.t. similarity.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_sim.jaccard.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Jaccard Similarity Index — mlr_measures_sim.jaccard","text":"two sets \\(\\) \\(B\\), Jaccard Index defined $$   J(, B) = \\frac{|\\cap B|}{|\\cup B|}. $$ two sets provided, mean pairwise scores calculated. measure undefined two sets empty.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_sim.jaccard.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Jaccard Similarity Index — mlr_measures_sim.jaccard","text":"measure requires learners property \"selected_features\". extracted feature sets passed mlr3measures::jaccard() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_sim.jaccard.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Jaccard Similarity Index — mlr_measures_sim.jaccard","text":"Empty ParamSet","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_sim.jaccard.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Jaccard Similarity Index — mlr_measures_sim.jaccard","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"sim.jaccard\") msr(\"sim.jaccard\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_sim.jaccard.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Jaccard Similarity Index — mlr_measures_sim.jaccard","text":"Type: \"similarity\" Range: \\([0, 1]\\) Minimize: FALSE","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_sim.phi.html","id":null,"dir":"Reference","previous_headings":"","what":"Phi Coefficient Similarity — mlr_measures_sim.phi","title":"Phi Coefficient Similarity — mlr_measures_sim.phi","text":"Measure compare two sets w.r.t. similarity.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_sim.phi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Phi Coefficient Similarity — mlr_measures_sim.phi","text":"Phi Coefficient defined Pearson correlation binary representation two sets \\(\\) \\(B\\). binary representation \\(\\) logical vector length \\(p\\) -th element 1 corresponding element \\(\\), 0 otherwise. two sets provided, mean pairwise scores calculated. measure undefined one set contains none possible elements.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_sim.phi.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Phi Coefficient Similarity — mlr_measures_sim.phi","text":"measure requires learners property \"selected_features\". extracted feature sets passed mlr3measures::phi() package mlr3measures. measure undefined input, NaN returned. can customized setting field na_value.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_sim.phi.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Phi Coefficient Similarity — mlr_measures_sim.phi","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"sim.phi\") msr(\"sim.phi\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_measures_sim.phi.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Phi Coefficient Similarity — mlr_measures_sim.phi","text":"Type: \"similarity\" Range: \\([-1, 1]\\) Minimize: FALSE","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_reflections.html","id":null,"dir":"Reference","previous_headings":"","what":"Reflections for mlr3 — mlr_reflections","title":"Reflections for mlr3 — mlr_reflections","text":"Environment stores various information allow objects examine introspect structure properties (c.f. Reflections). environment modified third-party packages, e.g. adding information new task types extending set allowed feature types. Third-party packages modify reflections must register loaded_packages field. following objects set mlr3: task_types (data.table()) Table task type (\"type\"), implementing package (\"pkg\"), names generators corresponding Task (\"task\"), Learner (\"learner\"), Prediction (\"prediction\"), Measure (\"measure\") fallback Learner. column \"type\" must unique row. task_feature_types (named character()) Vector base R types supported Task features, named 3 letter abbreviation. task_row_roles (character()) Vector supported row roles Task. task_col_roles (list character()) List vectors supported column roles Task, named task type. task_properties (list character()) List vectors supported Task properties, named task type. task_mandatory_properties (list character()) List vectors Task properties necessarily must supported Learner. .e., task property found set learner properties, exception raised. task_print_col_roles (list named character()) Vector column roles print via print(task) role empty, either task's target, properties features. names column roles values, names correspond labels use printer. learner_properties (list character()) List vectors supported Learner properties, named task type. learner_predict_types (list list character()) List lists supported Learner predict_types, named task type. inner list translates \"predict_type\" predict types returned, e.g. predict type \"prob\" LearnerClassif provides probabilities well predicted labels, therefore \"prob\" maps c(\"response\", \"prob\"). learner_predict_types (list list character()) List lists supported Learner predict_types, named task type. learner_param_tags (character()) Character vector allowed 'tags' paradox::ParamSets Learner. predict_sets (character()) Vector possible predict sets. Currently supported \"train\", \"test\" \"holdout\". measure_properties (list character()) List vectors supported Measure properties, named task type. default_measures (list character()) List keys default Measures, named task type. rr_names (character()) Names objects stored ResampleResult. auto_converters (environment()) Environment converter functions used rbind-ing data tasks. Functions named using pattern \"[from_type]___[to_type]\". Can extended third-party additional converters.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_reflections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reflections for mlr3 — mlr_reflections","text":"","code":"mlr_reflections"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_reflections.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Reflections for mlr3 — mlr_reflections","text":"environment.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_reflections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reflections for mlr3 — mlr_reflections","text":"","code":"ls.str(mlr_reflections) #> auto_converters : <environment: 0x55987275a4d8>  #> default_measures : List of 3 #>  $ classif     : chr \"classif.ce\" #>  $ regr        : chr \"regr.mse\" #>  $ unsupervised: chr NA #> learner_param_tags :  chr [1:7] \"train\" \"predict\" \"hotstart\" \"importance\" \"threads\" \"required\" ... #> learner_predict_types : List of 2 #>  $ classif:List of 2 #>  $ regr   :List of 4 #> learner_properties : List of 2 #>  $ classif: chr [1:14] \"featureless\" \"missings\" \"weights\" \"importance\" ... #>  $ regr   : chr [1:12] \"featureless\" \"missings\" \"weights\" \"importance\" ... #> loaded_packages :  chr \"mlr3\" #> measure_properties : List of 2 #>  $ classif: chr [1:8] \"na_score\" \"requires_task\" \"requires_learner\" \"requires_model\" ... #>  $ regr   : chr [1:8] \"na_score\" \"requires_task\" \"requires_learner\" \"requires_model\" ... #> package_version : Classes 'package_version', 'numeric_version'  hidden list of 1 #>  $ : int [1:4] 1 1 0 9000 #> predict_sets :  chr [1:3] \"train\" \"test\" \"internal_valid\" #> resampling_properties :  chr [1:2] \"duplicated_ids\" \"weights\" #> rr_names :  chr [1:4] \"task\" \"learner\" \"resampling\" \"iteration\" #> task_col_roles : List of 3 #>  $ regr        : chr [1:9] \"feature\" \"target\" \"name\" \"order\" ... #>  $ classif     : chr [1:9] \"feature\" \"target\" \"name\" \"order\" ... #>  $ unsupervised: chr [1:3] \"feature\" \"name\" \"order\" #> task_feature_types :  Named chr [1:8] \"logical\" \"integer\" \"numeric\" \"character\" \"factor\" ... #> task_mandatory_properties : List of 1 #>  $ classif: chr [1:2] \"twoclass\" \"multiclass\" #> task_print_col_roles : List of 2 #>  $ before: chr(0)  #>  $ after : Named chr [1:6] \"order\" \"stratum\" \"group\" \"offset\" ... #> task_properties : List of 3 #>  $ classif     : chr [1:7] \"strata\" \"groups\" \"offset\" \"weights_learner\" ... #>  $ regr        : chr [1:5] \"strata\" \"groups\" \"offset\" \"weights_learner\" ... #>  $ unsupervised: chr(0)  #> task_row_roles :  chr \"use\" #> task_types : Classes ‘data.table’ and 'data.frame':\t3 obs. of  7 variables: #>  $ type           : chr  \"classif\" \"regr\" \"unsupervised\" #>  $ package        : chr  \"mlr3\" \"mlr3\" \"mlr3\" #>  $ task           : chr  \"TaskClassif\" \"TaskRegr\" \"TaskUnsupervised\" #>  $ learner        : chr  \"LearnerClassif\" \"LearnerRegr\" \"Learner\" #>  $ prediction     : chr  \"PredictionClassif\" \"PredictionRegr\" NA #>  $ prediction_data: chr  \"PredictionDataClassif\" \"PredictionDataRegr\" NA #>  $ measure        : chr  \"MeasureClassif\" \"MeasureRegr\" NA"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings.html","id":null,"dir":"Reference","previous_headings":"","what":"Dictionary of Resampling Strategies — mlr_resamplings","title":"Dictionary of Resampling Strategies — mlr_resamplings","text":"simple mlr3misc::Dictionary storing objects class Resampling. resampling associated help page, see mlr_resamplings_[id]. dictionary can get populated additional resampling strategies add-packages. convenient way retrieve construct resampling strategies, see rsmp()/rsmps().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dictionary of Resampling Strategies — mlr_resamplings","text":"R6::R6Class object inheriting mlr3misc::Dictionary.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Dictionary of Resampling Strategies — mlr_resamplings","text":"See mlr3misc::Dictionary.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings.html","id":"s-methods","dir":"Reference","previous_headings":"","what":"S3 methods","title":"Dictionary of Resampling Strategies — mlr_resamplings","text":".data.table(dict, ..., objects = FALSE)mlr3misc::Dictionary -> data.table::data.table() Returns data.table::data.table() columns \"key\", \"label\", \"params\", \"iters\". objects set TRUE, constructed objects returned list column named object.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dictionary of Resampling Strategies — mlr_resamplings","text":"","code":"as.data.table(mlr_resamplings) #> Key: <key> #>            key                         label        params iters #>         <char>                        <char>        <list> <int> #> 1:   bootstrap                     Bootstrap ratio,repeats    30 #> 2:      custom                 Custom Splits                  NA #> 3:   custom_cv Custom Split Cross-Validation                  NA #> 4:          cv              Cross-Validation         folds    10 #> 5:     holdout                       Holdout         ratio     1 #> 6:    insample           Insample Resampling                   1 #> 7:         loo                 Leave-One-Out                  NA #> 8: repeated_cv     Repeated Cross-Validation folds,repeats   100 #> 9: subsampling                   Subsampling ratio,repeats    30 mlr_resamplings$get(\"cv\") #>  #> ── <ResamplingCV> : Cross-Validation ─────────────────────────────────────────── #> • Iterations: 10 #> • Instantiated: FALSE #> • Parameters: folds=10 rsmp(\"subsampling\") #>  #> ── <ResamplingSubsampling> : Subsampling ─────────────────────────────────────── #> • Iterations: 30 #> • Instantiated: FALSE #> • Parameters: ratio=0.6667, repeats=30"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap Resampling — mlr_resamplings_bootstrap","title":"Bootstrap Resampling — mlr_resamplings_bootstrap","text":"Splits data bootstrap samples (sampling replacement). Hyperparameters number bootstrap iterations (repeats, default: 30) ratio observations draw per iteration (ratio, default: 1) training set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_bootstrap.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Bootstrap Resampling — mlr_resamplings_bootstrap","text":"Resampling can instantiated via dictionary mlr_resamplings associated sugar function rsmp():","code":"mlr_resamplings$get(\"bootstrap\") rsmp(\"bootstrap\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_bootstrap.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Bootstrap Resampling — mlr_resamplings_bootstrap","text":"repeats (integer(1)) Number repetitions. ratio (numeric(1)) Ratio observations put training set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_bootstrap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bootstrap Resampling — mlr_resamplings_bootstrap","text":"Bischl B, Mersmann O, Trautmann H, Weihs C (2012). “Resampling Methods Meta-Model Validation Recommendations Evolutionary Computation.” Evolutionary Computation, 20(2), 249–275. doi:10.1162/evco_a_00069 .","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_bootstrap.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Bootstrap Resampling — mlr_resamplings_bootstrap","text":"mlr3::Resampling -> ResamplingBootstrap","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_bootstrap.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Bootstrap Resampling — mlr_resamplings_bootstrap","text":"iters (integer(1)) Returns number resampling iterations, depending values stored param_set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_bootstrap.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Bootstrap Resampling — mlr_resamplings_bootstrap","text":"mlr3::Resampling$format() mlr3::Resampling$help() mlr3::Resampling$instantiate() mlr3::Resampling$print() mlr3::Resampling$test_set() mlr3::Resampling$train_set()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_bootstrap.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Bootstrap Resampling — mlr_resamplings_bootstrap","text":"ResamplingBootstrap$new() ResamplingBootstrap$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_bootstrap.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Bootstrap Resampling — mlr_resamplings_bootstrap","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_bootstrap.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap Resampling — mlr_resamplings_bootstrap","text":"","code":"ResamplingBootstrap$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_bootstrap.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Bootstrap Resampling — mlr_resamplings_bootstrap","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_bootstrap.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap Resampling — mlr_resamplings_bootstrap","text":"","code":"ResamplingBootstrap$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap Resampling — mlr_resamplings_bootstrap","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_bootstrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap Resampling — mlr_resamplings_bootstrap","text":"","code":"# Create a task with 10 observations task = tsk(\"penguins\") task$filter(1:10)  # Instantiate Resampling bootstrap = rsmp(\"bootstrap\", repeats = 2, ratio = 1) bootstrap$instantiate(task)  # Individual sets: bootstrap$train_set(1) #>  [1] 2 2 3 4 4 5 5 7 8 9 bootstrap$test_set(1) #> [1]  1  6 10  # Disjunct sets: intersect(bootstrap$train_set(1), bootstrap$test_set(1)) #> integer(0)  # Internal storage: bootstrap$instance$M # Matrix of counts #>         #>         [,1] [,2] #>    [1,]    0    3 #>    [2,]    2    1 #>    [3,]    1    1 #>    [4,]    2    0 #>    [5,]    2    1 #>    [6,]    0    0 #>    [7,]    1    2 #>    [8,]    1    0 #>    [9,]    1    0 #>   [10,]    0    2"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom Resampling — mlr_resamplings_custom","title":"Custom Resampling — mlr_resamplings_custom","text":"Splits data training test sets using manually provided indices.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Custom Resampling — mlr_resamplings_custom","text":"Resampling can instantiated via dictionary mlr_resamplings associated sugar function rsmp():","code":"mlr_resamplings$get(\"custom\") rsmp(\"custom\")"},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Custom Resampling — mlr_resamplings_custom","text":"mlr3::Resampling -> ResamplingCustom","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Custom Resampling — mlr_resamplings_custom","text":"iters (integer(1)) Returns number resampling iterations, depending values stored param_set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Custom Resampling — mlr_resamplings_custom","text":"mlr3::Resampling$format() mlr3::Resampling$help() mlr3::Resampling$print() mlr3::Resampling$test_set() mlr3::Resampling$train_set()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Custom Resampling — mlr_resamplings_custom","text":"ResamplingCustom$new() ResamplingCustom$instantiate() ResamplingCustom$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Custom Resampling — mlr_resamplings_custom","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom Resampling — mlr_resamplings_custom","text":"","code":"ResamplingCustom$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom.html","id":"method-instantiate-","dir":"Reference","previous_headings":"","what":"Method instantiate()","title":"Custom Resampling — mlr_resamplings_custom","text":"Instantiate Resampling custom splits training test set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom Resampling — mlr_resamplings_custom","text":"","code":"ResamplingCustom$instantiate(task, train_sets, test_sets)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom Resampling — mlr_resamplings_custom","text":"task Task Mainly used check train_sets test_sets feasible. train_sets (list integer()) List row ids training, one list element per iteration. Must length test_sets. test_sets (list integer()) List row ids testing, one list element per iteration. Must length train_sets.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Custom Resampling — mlr_resamplings_custom","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom Resampling — mlr_resamplings_custom","text":"","code":"ResamplingCustom$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom Resampling — mlr_resamplings_custom","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Custom Resampling — mlr_resamplings_custom","text":"","code":"# Create a task with 10 observations task = tsk(\"penguins\") task$filter(1:10)  # Instantiate Resampling custom = rsmp(\"custom\") train_sets = list(1:5, 5:10) test_sets = list(5:10, 1:5) custom$instantiate(task, train_sets, test_sets)  custom$train_set(1) #> [1] 1 2 3 4 5 custom$test_set(1) #> [1]  5  6  7  8  9 10"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom Cross-Validation — mlr_resamplings_custom_cv","title":"Custom Cross-Validation — mlr_resamplings_custom_cv","text":"Splits data training test sets cross-validation fashion based user-provided categorical vector. vector can passed instantiation either via arbitrary factor f length task$nrow, via single string col referring column task. alternative equivalent approach using leave-one-resampling showcased examples mlr_resamplings_loo.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom_cv.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Custom Cross-Validation — mlr_resamplings_custom_cv","text":"Resampling can instantiated via dictionary mlr_resamplings associated sugar function rsmp():","code":"mlr_resamplings$get(\"custom_cv\") rsmp(\"custom_cv\")"},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom_cv.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Custom Cross-Validation — mlr_resamplings_custom_cv","text":"mlr3::Resampling -> ResamplingCustomCV","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom_cv.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Custom Cross-Validation — mlr_resamplings_custom_cv","text":"iters (integer(1)) Returns number resampling iterations, depending values stored param_set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom_cv.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Custom Cross-Validation — mlr_resamplings_custom_cv","text":"mlr3::Resampling$format() mlr3::Resampling$help() mlr3::Resampling$print() mlr3::Resampling$test_set() mlr3::Resampling$train_set()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom_cv.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Custom Cross-Validation — mlr_resamplings_custom_cv","text":"ResamplingCustomCV$new() ResamplingCustomCV$instantiate() ResamplingCustomCV$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom_cv.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Custom Cross-Validation — mlr_resamplings_custom_cv","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom_cv.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom Cross-Validation — mlr_resamplings_custom_cv","text":"","code":"ResamplingCustomCV$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom_cv.html","id":"method-instantiate-","dir":"Reference","previous_headings":"","what":"Method instantiate()","title":"Custom Cross-Validation — mlr_resamplings_custom_cv","text":"Instantiate Resampling cross-validation custom splits.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom_cv.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom Cross-Validation — mlr_resamplings_custom_cv","text":"","code":"ResamplingCustomCV$instantiate(task, f = NULL, col = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom Cross-Validation — mlr_resamplings_custom_cv","text":"task Task Used extract row ids. f (factor() | character()) Vector type factor character length task$nrow. Row ids split vector, distinct value results fold. Empty factor levels dropped row ids corresponding missing values removed, c.f. split(). col (character(1)) Name task column use splitting. Alternative mutually exclusive providing factor levels vector via parameter f.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom_cv.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Custom Cross-Validation — mlr_resamplings_custom_cv","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom_cv.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom Cross-Validation — mlr_resamplings_custom_cv","text":"","code":"ResamplingCustomCV$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom_cv.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom Cross-Validation — mlr_resamplings_custom_cv","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_custom_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Custom Cross-Validation — mlr_resamplings_custom_cv","text":"","code":"# Create a task with 10 observations task = tsk(\"penguins\") task$filter(1:10)  # Instantiate Resampling: custom_cv = rsmp(\"custom_cv\") f = factor(c(rep(letters[1:3], each = 3), NA)) custom_cv$instantiate(task, f = f) custom_cv$iters # 3 folds #> [1] 3  # Individual sets: custom_cv$train_set(1) #> [1] 4 5 6 7 8 9 custom_cv$test_set(1) #> [1] 1 2 3  # Disjunct sets: intersect(custom_cv$train_set(1), custom_cv$test_set(1)) #> integer(0)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-Validation Resampling — mlr_resamplings_cv","title":"Cross-Validation Resampling — mlr_resamplings_cv","text":"Splits data using folds-folds (default: 10 folds) cross-validation.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_cv.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Cross-Validation Resampling — mlr_resamplings_cv","text":"Resampling can instantiated via dictionary mlr_resamplings associated sugar function rsmp():","code":"mlr_resamplings$get(\"cv\") rsmp(\"cv\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_cv.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Cross-Validation Resampling — mlr_resamplings_cv","text":"folds (integer(1)) Number folds.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_cv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cross-Validation Resampling — mlr_resamplings_cv","text":"Bischl B, Mersmann O, Trautmann H, Weihs C (2012). “Resampling Methods Meta-Model Validation Recommendations Evolutionary Computation.” Evolutionary Computation, 20(2), 249–275. doi:10.1162/evco_a_00069 .","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_cv.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Cross-Validation Resampling — mlr_resamplings_cv","text":"mlr3::Resampling -> ResamplingCV","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_cv.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Cross-Validation Resampling — mlr_resamplings_cv","text":"iters (integer(1)) Returns number resampling iterations, depending values stored param_set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_cv.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Cross-Validation Resampling — mlr_resamplings_cv","text":"mlr3::Resampling$format() mlr3::Resampling$help() mlr3::Resampling$instantiate() mlr3::Resampling$print() mlr3::Resampling$test_set() mlr3::Resampling$train_set()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_cv.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Cross-Validation Resampling — mlr_resamplings_cv","text":"ResamplingCV$new() ResamplingCV$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_cv.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Cross-Validation Resampling — mlr_resamplings_cv","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_cv.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-Validation Resampling — mlr_resamplings_cv","text":"","code":"ResamplingCV$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_cv.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Cross-Validation Resampling — mlr_resamplings_cv","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_cv.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-Validation Resampling — mlr_resamplings_cv","text":"","code":"ResamplingCV$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross-Validation Resampling — mlr_resamplings_cv","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross-Validation Resampling — mlr_resamplings_cv","text":"","code":"# Create a task with 10 observations task = tsk(\"penguins\") task$filter(1:10)  # Instantiate Resampling cv = rsmp(\"cv\", folds = 3) cv$instantiate(task)  # Individual sets: cv$train_set(1) #> [1]  1  2  7  3  5 10 cv$test_set(1) #> [1] 4 6 8 9  # Disjunct sets: intersect(cv$train_set(1), cv$test_set(1)) #> integer(0)  # Internal storage: cv$instance # table #> Key: <fold> #>     row_id  fold #>      <int> <int> #>  1:      4     1 #>  2:      6     1 #>  3:      8     1 #>  4:      9     1 #>  5:      1     2 #>  6:      2     2 #>  7:      7     2 #>  8:      3     3 #>  9:      5     3 #> 10:     10     3"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_holdout.html","id":null,"dir":"Reference","previous_headings":"","what":"Holdout Resampling — mlr_resamplings_holdout","title":"Holdout Resampling — mlr_resamplings_holdout","text":"Splits data training set test set. Parameter ratio determines ratio observation going training set (default: 2/3).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_holdout.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Holdout Resampling — mlr_resamplings_holdout","text":"Resampling can instantiated via dictionary mlr_resamplings associated sugar function rsmp():","code":"mlr_resamplings$get(\"holdout\") rsmp(\"holdout\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_holdout.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Holdout Resampling — mlr_resamplings_holdout","text":"ratio (numeric(1)) Ratio observations put training set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_holdout.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Holdout Resampling — mlr_resamplings_holdout","text":"Bischl B, Mersmann O, Trautmann H, Weihs C (2012). “Resampling Methods Meta-Model Validation Recommendations Evolutionary Computation.” Evolutionary Computation, 20(2), 249–275. doi:10.1162/evco_a_00069 .","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_holdout.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Holdout Resampling — mlr_resamplings_holdout","text":"mlr3::Resampling -> ResamplingHoldout","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_holdout.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Holdout Resampling — mlr_resamplings_holdout","text":"iters (integer(1)) Returns number resampling iterations, depending values stored param_set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_holdout.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Holdout Resampling — mlr_resamplings_holdout","text":"mlr3::Resampling$format() mlr3::Resampling$help() mlr3::Resampling$instantiate() mlr3::Resampling$print() mlr3::Resampling$test_set() mlr3::Resampling$train_set()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_holdout.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Holdout Resampling — mlr_resamplings_holdout","text":"ResamplingHoldout$new() ResamplingHoldout$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_holdout.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Holdout Resampling — mlr_resamplings_holdout","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_holdout.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Holdout Resampling — mlr_resamplings_holdout","text":"","code":"ResamplingHoldout$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_holdout.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Holdout Resampling — mlr_resamplings_holdout","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_holdout.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Holdout Resampling — mlr_resamplings_holdout","text":"","code":"ResamplingHoldout$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_holdout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Holdout Resampling — mlr_resamplings_holdout","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_holdout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Holdout Resampling — mlr_resamplings_holdout","text":"","code":"# Create a task with 10 observations task = tsk(\"penguins\") task$filter(1:10)  # Instantiate Resampling holdout = rsmp(\"holdout\", ratio = 0.5) holdout$instantiate(task)  # Individual sets: holdout$train_set(1) #> [1]  1  3  5  9 10 holdout$test_set(1) #> [1] 2 4 6 7 8  # Disjunct sets: intersect(holdout$train_set(1), holdout$test_set(1)) #> integer(0)  # Internal storage: holdout$instance # simple list #> $train #> [1]  1  3  5  9 10 #>  #> $test #> [1] 2 4 6 7 8 #>"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_insample.html","id":null,"dir":"Reference","previous_headings":"","what":"Insample Resampling — mlr_resamplings_insample","title":"Insample Resampling — mlr_resamplings_insample","text":"Uses observations training test set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_insample.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Insample Resampling — mlr_resamplings_insample","text":"Resampling can instantiated via dictionary mlr_resamplings associated sugar function rsmp():","code":"mlr_resamplings$get(\"insample\") rsmp(\"insample\")"},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_insample.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Insample Resampling — mlr_resamplings_insample","text":"mlr3::Resampling -> ResamplingInsample","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_insample.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Insample Resampling — mlr_resamplings_insample","text":"iters (integer(1)) Returns number resampling iterations, depending values stored param_set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_insample.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Insample Resampling — mlr_resamplings_insample","text":"mlr3::Resampling$format() mlr3::Resampling$help() mlr3::Resampling$instantiate() mlr3::Resampling$print() mlr3::Resampling$test_set() mlr3::Resampling$train_set()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_insample.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Insample Resampling — mlr_resamplings_insample","text":"ResamplingInsample$new() ResamplingInsample$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_insample.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Insample Resampling — mlr_resamplings_insample","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_insample.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insample Resampling — mlr_resamplings_insample","text":"","code":"ResamplingInsample$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_insample.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Insample Resampling — mlr_resamplings_insample","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_insample.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Insample Resampling — mlr_resamplings_insample","text":"","code":"ResamplingInsample$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_insample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insample Resampling — mlr_resamplings_insample","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_insample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insample Resampling — mlr_resamplings_insample","text":"","code":"# Create a task with 10 observations task = tsk(\"penguins\") task$filter(1:10)  # Instantiate Resampling insample = rsmp(\"insample\") insample$instantiate(task)  # Train set equal to test set: setequal(insample$train_set(1), insample$test_set(1)) #> [1] TRUE  # Internal storage: insample$instance # just row ids #>  [1]  1  2  3  4  5  6  7  8  9 10"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_loo.html","id":null,"dir":"Reference","previous_headings":"","what":"Leave-One-Out Cross-Validation — mlr_resamplings_loo","title":"Leave-One-Out Cross-Validation — mlr_resamplings_loo","text":"Splits data using leave-one-observation-. identical cross-validation number folds set number observations. resampling combined grouping features tasks, possible create custom splits based arbitrary factor variable, see examples.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_loo.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Leave-One-Out Cross-Validation — mlr_resamplings_loo","text":"Resampling can instantiated via dictionary mlr_resamplings associated sugar function rsmp():","code":"mlr_resamplings$get(\"loo\") rsmp(\"loo\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_loo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Leave-One-Out Cross-Validation — mlr_resamplings_loo","text":"Bischl B, Mersmann O, Trautmann H, Weihs C (2012). “Resampling Methods Meta-Model Validation Recommendations Evolutionary Computation.” Evolutionary Computation, 20(2), 249–275. doi:10.1162/evco_a_00069 .","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_loo.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Leave-One-Out Cross-Validation — mlr_resamplings_loo","text":"mlr3::Resampling -> ResamplingLOO","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_loo.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Leave-One-Out Cross-Validation — mlr_resamplings_loo","text":"iters (integer(1)) Returns number resampling iterations number rows task provided instantiate. NA resampling instantiated.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_loo.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Leave-One-Out Cross-Validation — mlr_resamplings_loo","text":"mlr3::Resampling$format() mlr3::Resampling$help() mlr3::Resampling$instantiate() mlr3::Resampling$print() mlr3::Resampling$test_set() mlr3::Resampling$train_set()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_loo.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Leave-One-Out Cross-Validation — mlr_resamplings_loo","text":"ResamplingLOO$new() ResamplingLOO$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_loo.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Leave-One-Out Cross-Validation — mlr_resamplings_loo","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_loo.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Leave-One-Out Cross-Validation — mlr_resamplings_loo","text":"","code":"ResamplingLOO$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_loo.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Leave-One-Out Cross-Validation — mlr_resamplings_loo","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_loo.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Leave-One-Out Cross-Validation — mlr_resamplings_loo","text":"","code":"ResamplingLOO$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_loo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Leave-One-Out Cross-Validation — mlr_resamplings_loo","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_loo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Leave-One-Out Cross-Validation — mlr_resamplings_loo","text":"","code":"# Create a task with 10 observations task = tsk(\"penguins\") task$filter(1:10)  # Instantiate Resampling loo = rsmp(\"loo\") loo$instantiate(task)  # Individual sets: loo$train_set(1) #> [1]  3  6  4  1  5 10  7  2  9 loo$test_set(1) #> [1] 8  # Disjunct sets: intersect(loo$train_set(1), loo$test_set(1)) #> integer(0)  # Internal storage: loo$instance # vector #>  [1]  8  3  6  4  1  5 10  7  2  9  # Combine with group feature of tasks: task = tsk(\"penguins\") task$set_col_roles(\"island\", add_to = \"group\") loo$instantiate(task) loo$iters # one fold for each level of \"island\" #> [1] 3"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_repeated_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","title":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","text":"Splits data repeats (default: 10) times using folds-fold (default: 10) cross-validation. iteration counter translates repeats blocks folds cross-validations, .e., first folds iterations belong single cross-validation. Iteration numbers can translated folds repeats provided methods.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_repeated_cv.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","text":"Resampling can instantiated via dictionary mlr_resamplings associated sugar function rsmp():","code":"mlr_resamplings$get(\"repeated_cv\") rsmp(\"repeated_cv\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_repeated_cv.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","text":"repeats (integer(1)) Number repetitions. folds (integer(1)) Number folds.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_repeated_cv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","text":"Bischl B, Mersmann O, Trautmann H, Weihs C (2012). “Resampling Methods Meta-Model Validation Recommendations Evolutionary Computation.” Evolutionary Computation, 20(2), 249–275. doi:10.1162/evco_a_00069 .","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_repeated_cv.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","text":"mlr3::Resampling -> ResamplingRepeatedCV","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_repeated_cv.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","text":"iters (integer(1)) Returns number resampling iterations, depending values stored param_set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_repeated_cv.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","text":"mlr3::Resampling$format() mlr3::Resampling$help() mlr3::Resampling$instantiate() mlr3::Resampling$print() mlr3::Resampling$test_set() mlr3::Resampling$train_set()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_repeated_cv.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","text":"ResamplingRepeatedCV$new() ResamplingRepeatedCV$folds() ResamplingRepeatedCV$repeats() ResamplingRepeatedCV$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_repeated_cv.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_repeated_cv.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","text":"","code":"ResamplingRepeatedCV$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_repeated_cv.html","id":"method-folds-","dir":"Reference","previous_headings":"","what":"Method folds()","title":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","text":"Translates iteration numbers fold numbers.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_repeated_cv.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","text":"","code":"ResamplingRepeatedCV$folds(iters)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_repeated_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","text":"iters (integer()) Iteration number.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_repeated_cv.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","text":"integer() fold numbers.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_repeated_cv.html","id":"method-repeats-","dir":"Reference","previous_headings":"","what":"Method repeats()","title":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","text":"Translates iteration numbers repetition numbers.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_repeated_cv.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","text":"","code":"ResamplingRepeatedCV$repeats(iters)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_repeated_cv.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","text":"iters (integer()) Iteration number.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_repeated_cv.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","text":"integer() repetition numbers.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_repeated_cv.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_repeated_cv.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","text":"","code":"ResamplingRepeatedCV$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_repeated_cv.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_repeated_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Repeated Cross-Validation Resampling — mlr_resamplings_repeated_cv","text":"","code":"# Create a task with 10 observations task = tsk(\"penguins\") task$filter(1:10)  # Instantiate Resampling repeated_cv = rsmp(\"repeated_cv\", repeats = 2, folds = 3) repeated_cv$instantiate(task) repeated_cv$iters #> [1] 6 repeated_cv$folds(1:6) #> [1] 1 2 3 1 2 3 repeated_cv$repeats(1:6) #> [1] 1 1 1 2 2 2  # Individual sets: repeated_cv$train_set(1) #> [1]  2  6  9  7  8 10 repeated_cv$test_set(1) #> [1] 1 3 4 5  # Disjunct sets: intersect(repeated_cv$train_set(1), repeated_cv$test_set(1)) #> integer(0)  # Internal storage: repeated_cv$instance # table #>     row_id   rep  fold #>      <int> <int> <int> #>  1:      1     1     1 #>  2:      2     1     2 #>  3:      3     1     1 #>  4:      4     1     1 #>  5:      5     1     1 #>  6:      6     1     2 #>  7:      7     1     3 #>  8:      8     1     3 #>  9:      9     1     2 #> 10:     10     1     3 #> 11:      1     2     2 #> 12:      2     2     3 #> 13:      3     2     1 #> 14:      4     2     3 #> 15:      5     2     3 #> 16:      6     2     1 #> 17:      7     2     2 #> 18:      8     2     1 #> 19:      9     2     2 #> 20:     10     2     1 #>     row_id   rep  fold"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_subsampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Subsampling Resampling — mlr_resamplings_subsampling","title":"Subsampling Resampling — mlr_resamplings_subsampling","text":"Splits data repeats (default: 30) times training test set ratio ratio (default: 2/3) observations going training set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_subsampling.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Subsampling Resampling — mlr_resamplings_subsampling","text":"Resampling can instantiated via dictionary mlr_resamplings associated sugar function rsmp():","code":"mlr_resamplings$get(\"subsampling\") rsmp(\"subsampling\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_subsampling.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Subsampling Resampling — mlr_resamplings_subsampling","text":"repeats (integer(1)) Number repetitions. ratio (numeric(1)) Ratio observations put training set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_subsampling.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Subsampling Resampling — mlr_resamplings_subsampling","text":"Bischl B, Mersmann O, Trautmann H, Weihs C (2012). “Resampling Methods Meta-Model Validation Recommendations Evolutionary Computation.” Evolutionary Computation, 20(2), 249–275. doi:10.1162/evco_a_00069 .","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_subsampling.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Subsampling Resampling — mlr_resamplings_subsampling","text":"mlr3::Resampling -> ResamplingSubsampling","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_subsampling.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Subsampling Resampling — mlr_resamplings_subsampling","text":"iters (integer(1)) Returns number resampling iterations, depending values stored param_set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_subsampling.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Subsampling Resampling — mlr_resamplings_subsampling","text":"mlr3::Resampling$format() mlr3::Resampling$help() mlr3::Resampling$instantiate() mlr3::Resampling$print() mlr3::Resampling$test_set() mlr3::Resampling$train_set()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_subsampling.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Subsampling Resampling — mlr_resamplings_subsampling","text":"ResamplingSubsampling$new() ResamplingSubsampling$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_subsampling.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Subsampling Resampling — mlr_resamplings_subsampling","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_subsampling.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subsampling Resampling — mlr_resamplings_subsampling","text":"","code":"ResamplingSubsampling$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_subsampling.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Subsampling Resampling — mlr_resamplings_subsampling","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_subsampling.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Subsampling Resampling — mlr_resamplings_subsampling","text":"","code":"ResamplingSubsampling$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_subsampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subsampling Resampling — mlr_resamplings_subsampling","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_resamplings_subsampling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subsampling Resampling — mlr_resamplings_subsampling","text":"","code":"# Create a task with 10 observations task = tsk(\"penguins\") task$filter(1:10)  # Instantiate Resampling subsampling = rsmp(\"subsampling\", repeats = 2, ratio = 0.5) subsampling$instantiate(task)  # Individual sets: subsampling$train_set(1) #> [1] 7 1 8 2 4 subsampling$test_set(1) #> [1]  3  5  6  9 10  # Disjunct sets: intersect(subsampling$train_set(1), subsampling$test_set(1)) #> integer(0)  # Internal storage: subsampling$instance$train # list of index vectors #> [[1]] #> [1] 7 1 8 2 4 #>  #> [[2]] #> [1] 10  9  4  8  7 #>"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_sugar.html","id":null,"dir":"Reference","previous_headings":"","what":"Syntactic Sugar for Object Construction — mlr_sugar","title":"Syntactic Sugar for Object Construction — mlr_sugar","text":"Functions retrieve objects, set hyperparameters assign fields one go. Relies mlr3misc::dictionary_sugar_get() extract objects respective mlr3misc::Dictionary: tsk() Task mlr_tasks. tsks() list Tasks mlr_tasks. tgen() TaskGenerator mlr_task_generators. tgens() list TaskGenerators mlr_task_generators. lrn() Learner mlr_learners. lrns() list Learners mlr_learners. rsmp() Resampling mlr_resamplings. rsmps() list Resamplings mlr_resamplings. msr() Measure mlr_measures. msrs() list Measures mlr_measures. Helper function configure $validate field(s) Learner. especially useful learners AutoTuner mlr3tuning GraphLearner mlr3pipelines multiple levels $validate fields., $validate fields need configured multiple levels.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_sugar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syntactic Sugar for Object Construction — mlr_sugar","text":"","code":"tsk(.key, ...)  tsks(.keys, ...)  tgen(.key, ...)  tgens(.keys, ...)  lrn(.key, ...)  lrns(.keys, ...)  rsmp(.key, ...)  rsmps(.keys, ...)  msr(.key, ...)  msrs(.keys, ...)  set_validate(learner, validate, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_sugar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syntactic Sugar for Object Construction — mlr_sugar","text":".key (character(1)) Key passed respective dictionary retrieve object. ... () Additional arguments. .keys (character()) Keys passed respective dictionary retrieve multiple objects. learner () learner. validate (numeric(1), \"predefined\", \"test\", NULL) validation set use.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_sugar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Syntactic Sugar for Object Construction — mlr_sugar","text":"R6::R6Class object respective type, list R6::R6Class objects plural versions. Modified Learner","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_sugar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Syntactic Sugar for Object Construction — mlr_sugar","text":"","code":"# penguins task with new id tsk(\"penguins\", id = \"penguins2\") #>  #> ── <TaskClassif> (344x8): Palmer Penguins ────────────────────────────────────── #> • Target: species #> • Target classes: Adelie (44%), Gentoo (36%), Chinstrap (20%) #> • Properties: multiclass #> • Features (7): #>   • int (3): body_mass, flipper_length, year #>   • dbl (2): bill_depth, bill_length #>   • fct (2): island, sex  # classification tree with different hyperparameters # and predict type set to predict probabilities lrn(\"classif.rpart\", cp = 0.1, predict_type = \"prob\") #>  #> ── <LearnerClassifRpart> (classif.rpart): Classification Tree ────────────────── #> • Model: - #> • Parameters: cp=0.1, xval=0 #> • Packages: mlr3 and rpart #> • Predict Types: response and [prob] #> • Feature Types: logical, integer, numeric, factor, and ordered #> • Encapsulation: none (fallback: -) #> • Properties: importance, missings, multiclass, selected_features, twoclass, #> and weights #> • Other settings: use_weights = 'use'  # multiple learners with predict type 'prob' lrns(c(\"classif.featureless\", \"classif.rpart\"), predict_type = \"prob\") #> $classif.featureless #>  #> ── <LearnerClassifFeatureless> (classif.featureless): Featureless Classification #> • Model: - #> • Parameters: method=mode #> • Packages: mlr3 #> • Predict Types: response and [prob] #> • Feature Types: logical, integer, numeric, character, factor, ordered, #> POSIXct, and Date #> • Encapsulation: none (fallback: -) #> • Properties: featureless, importance, missings, multiclass, selected_features, #> twoclass, and weights #> • Other settings: use_weights = 'use' #>  #> $classif.rpart #>  #> ── <LearnerClassifRpart> (classif.rpart): Classification Tree ────────────────── #> • Model: - #> • Parameters: xval=0 #> • Packages: mlr3 and rpart #> • Predict Types: response and [prob] #> • Feature Types: logical, integer, numeric, factor, and ordered #> • Encapsulation: none (fallback: -) #> • Properties: importance, missings, multiclass, selected_features, twoclass, #> and weights #> • Other settings: use_weights = 'use' #>  learner = lrn(\"classif.debug\") set_validate(learner, 0.2) learner$validate #> [1] 0.2"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators.html","id":null,"dir":"Reference","previous_headings":"","what":"Dictionary of Task Generators — mlr_task_generators","title":"Dictionary of Task Generators — mlr_task_generators","text":"simple mlr3misc::Dictionary storing objects class TaskGenerator. task generator associated help page, see mlr_task_generators_[id]. dictionary can get populated additional task generators add-packages. convenient way retrieve construct task generators, see tgen()/tgens().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dictionary of Task Generators — mlr_task_generators","text":"R6::R6Class object inheriting mlr3misc::Dictionary.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Dictionary of Task Generators — mlr_task_generators","text":"See mlr3misc::Dictionary.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators.html","id":"s-methods","dir":"Reference","previous_headings":"","what":"S3 methods","title":"Dictionary of Task Generators — mlr_task_generators","text":".data.table(dict, ..., objects = FALSE)mlr3misc::Dictionary -> data.table::data.table() Returns data.table::data.table() fields \"key\", \"label\", \"task_type\", \"params\", \"packages\" columns. objects set TRUE, constructed objects returned list column named object.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dictionary of Task Generators — mlr_task_generators","text":"","code":"mlr_task_generators$get(\"smiley\") #>  #> ── <TaskGeneratorSmiley> (smiley): Smiley Classification ─────────────────────── #> • Task type: classif #> • Packages: mlr3 and mlbench #> • Parameters: list() #> • Manual: `?mlr3::mlr_task_generators_smiley()` tgen(\"2dnormals\") #>  #> ── <TaskGenerator2DNormals> (2dnormals): 2D Normals Classification ───────────── #> • Task type: classif #> • Packages: mlr3 and mlbench #> • Parameters: list() #> • Manual: `?mlr3::mlr_task_generators_2dnormals()`"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_2dnormals.html","id":null,"dir":"Reference","previous_headings":"","what":"2D Normals Classification Task Generator — mlr_task_generators_2dnormals","title":"2D Normals Classification Task Generator — mlr_task_generators_2dnormals","text":"TaskGenerator 2d normals task mlbench::mlbench.2dnormals().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_2dnormals.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"2D Normals Classification Task Generator — mlr_task_generators_2dnormals","text":"TaskGenerator can instantiated via dictionary mlr_task_generators associated sugar function tgen():","code":"mlr_task_generators$get(\"2dnormals\") tgen(\"2dnormals\")"},{"path":[]},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_2dnormals.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"2D Normals Classification Task Generator — mlr_task_generators_2dnormals","text":"mlr3::TaskGenerator -> TaskGenerator2DNormals","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_2dnormals.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"2D Normals Classification Task Generator — mlr_task_generators_2dnormals","text":"mlr3::TaskGenerator$format() mlr3::TaskGenerator$generate() mlr3::TaskGenerator$print()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_2dnormals.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"2D Normals Classification Task Generator — mlr_task_generators_2dnormals","text":"TaskGenerator2DNormals$new() TaskGenerator2DNormals$plot() TaskGenerator2DNormals$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_2dnormals.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"2D Normals Classification Task Generator — mlr_task_generators_2dnormals","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_2dnormals.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2D Normals Classification Task Generator — mlr_task_generators_2dnormals","text":"","code":"TaskGenerator2DNormals$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_2dnormals.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"2D Normals Classification Task Generator — mlr_task_generators_2dnormals","text":"Creates simple plot generated data.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_2dnormals.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"2D Normals Classification Task Generator — mlr_task_generators_2dnormals","text":"","code":"TaskGenerator2DNormals$plot(n = 200L, pch = 19L, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_2dnormals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"2D Normals Classification Task Generator — mlr_task_generators_2dnormals","text":"n (integer(1)) Number samples draw plot. Default 200. pch (integer(1)) Point char. Passed plot(). ... () Additional arguments passed plot().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_2dnormals.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"2D Normals Classification Task Generator — mlr_task_generators_2dnormals","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_2dnormals.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"2D Normals Classification Task Generator — mlr_task_generators_2dnormals","text":"","code":"TaskGenerator2DNormals$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_2dnormals.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"2D Normals Classification Task Generator — mlr_task_generators_2dnormals","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_2dnormals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"2D Normals Classification Task Generator — mlr_task_generators_2dnormals","text":"","code":"generator = tgen(\"2dnormals\") plot(generator, n = 200)   task = generator$generate(200) str(task$data()) #> Classes ‘data.table’ and 'data.frame':\t200 obs. of  3 variables: #>  $ y : Factor w/ 2 levels \"A\",\"B\": 1 2 1 1 2 1 2 1 2 2 ... #>  $ x1: num  -0.848 -0.0949 0.9647 1.8593 -0.1538 ... #>  $ x2: num  0.742 0.72 1.217 1.592 -0.959 ... #>  - attr(*, \".internal.selfref\")=<externalptr>"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_cassini.html","id":null,"dir":"Reference","previous_headings":"","what":"Cassini Classification Task Generator — mlr_task_generators_cassini","title":"Cassini Classification Task Generator — mlr_task_generators_cassini","text":"TaskGenerator cassini task mlbench::mlbench.cassini().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_cassini.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Cassini Classification Task Generator — mlr_task_generators_cassini","text":"TaskGenerator can instantiated via dictionary mlr_task_generators associated sugar function tgen():","code":"mlr_task_generators$get(\"cassini\") tgen(\"cassini\")"},{"path":[]},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_cassini.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Cassini Classification Task Generator — mlr_task_generators_cassini","text":"mlr3::TaskGenerator -> TaskGeneratorCassini","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_cassini.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Cassini Classification Task Generator — mlr_task_generators_cassini","text":"mlr3::TaskGenerator$format() mlr3::TaskGenerator$generate() mlr3::TaskGenerator$print()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_cassini.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Cassini Classification Task Generator — mlr_task_generators_cassini","text":"TaskGeneratorCassini$new() TaskGeneratorCassini$plot() TaskGeneratorCassini$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_cassini.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Cassini Classification Task Generator — mlr_task_generators_cassini","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_cassini.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cassini Classification Task Generator — mlr_task_generators_cassini","text":"","code":"TaskGeneratorCassini$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_cassini.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"Cassini Classification Task Generator — mlr_task_generators_cassini","text":"Creates simple plot generated data.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_cassini.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Cassini Classification Task Generator — mlr_task_generators_cassini","text":"","code":"TaskGeneratorCassini$plot(n = 200L, pch = 19L, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_cassini.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cassini Classification Task Generator — mlr_task_generators_cassini","text":"n (integer(1)) Number samples draw plot. Default 200. pch (integer(1)) Point char. Passed plot(). ... () Additional arguments passed plot().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_cassini.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Cassini Classification Task Generator — mlr_task_generators_cassini","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_cassini.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Cassini Classification Task Generator — mlr_task_generators_cassini","text":"","code":"TaskGeneratorCassini$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_cassini.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cassini Classification Task Generator — mlr_task_generators_cassini","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_cassini.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cassini Classification Task Generator — mlr_task_generators_cassini","text":"","code":"generator = tgen(\"cassini\") plot(generator, n = 200)   task = generator$generate(200) str(task$data()) #> Classes ‘data.table’ and 'data.frame':\t200 obs. of  3 variables: #>  $ y : Factor w/ 3 levels \"A\",\"B\",\"C\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ x1: num  0.266 0.997 -1.258 -0.525 -0.22 ... #>  $ x2: num  -1.76 -1.17 -1.4 -1.5 -1.82 ... #>  - attr(*, \".internal.selfref\")=<externalptr>"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Circle Classification Task Generator — mlr_task_generators_circle","title":"Circle Classification Task Generator — mlr_task_generators_circle","text":"TaskGenerator circle binary classification task mlbench::mlbench.circle(). Creates large circle containing smaller circle.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_circle.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Circle Classification Task Generator — mlr_task_generators_circle","text":"TaskGenerator can instantiated via dictionary mlr_task_generators associated sugar function tgen():","code":"mlr_task_generators$get(\"circle\") tgen(\"circle\")"},{"path":[]},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_circle.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Circle Classification Task Generator — mlr_task_generators_circle","text":"mlr3::TaskGenerator -> TaskGeneratorCircle","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_circle.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Circle Classification Task Generator — mlr_task_generators_circle","text":"mlr3::TaskGenerator$format() mlr3::TaskGenerator$generate() mlr3::TaskGenerator$print()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_circle.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Circle Classification Task Generator — mlr_task_generators_circle","text":"TaskGeneratorCircle$new() TaskGeneratorCircle$plot() TaskGeneratorCircle$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_circle.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Circle Classification Task Generator — mlr_task_generators_circle","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_circle.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Circle Classification Task Generator — mlr_task_generators_circle","text":"","code":"TaskGeneratorCircle$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_circle.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"Circle Classification Task Generator — mlr_task_generators_circle","text":"Creates simple plot generated data.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_circle.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Circle Classification Task Generator — mlr_task_generators_circle","text":"","code":"TaskGeneratorCircle$plot(n = 200L, pch = 19L, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Circle Classification Task Generator — mlr_task_generators_circle","text":"n (integer(1)) Number samples draw plot. Default 200. pch (integer(1)) Point char. Passed plot(). ... () Additional arguments passed plot().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_circle.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Circle Classification Task Generator — mlr_task_generators_circle","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_circle.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Circle Classification Task Generator — mlr_task_generators_circle","text":"","code":"TaskGeneratorCircle$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_circle.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Circle Classification Task Generator — mlr_task_generators_circle","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_circle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Circle Classification Task Generator — mlr_task_generators_circle","text":"","code":"generator = tgen(\"circle\") plot(generator, n = 200)   task = generator$generate(200) str(task$data()) #> Classes ‘data.table’ and 'data.frame':\t200 obs. of  3 variables: #>  $ y : Factor w/ 2 levels \"A\",\"B\": 2 1 1 1 1 1 1 1 1 1 ... #>  $ x1: num  0.92 0.385 0.694 0.52 -0.047 ... #>  $ x2: num  0.853 0.252 -0.199 0.519 0.348 ... #>  - attr(*, \".internal.selfref\")=<externalptr>"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_friedman1.html","id":null,"dir":"Reference","previous_headings":"","what":"Friedman1 Regression Task Generator — mlr_task_generators_friedman1","title":"Friedman1 Regression Task Generator — mlr_task_generators_friedman1","text":"TaskGenerator friedman1 task mlbench::mlbench.friedman1().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_friedman1.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Friedman1 Regression Task Generator — mlr_task_generators_friedman1","text":"TaskGenerator can instantiated via dictionary mlr_task_generators associated sugar function tgen():","code":"mlr_task_generators$get(\"friedman1\") tgen(\"friedman1\")"},{"path":[]},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_friedman1.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Friedman1 Regression Task Generator — mlr_task_generators_friedman1","text":"mlr3::TaskGenerator -> TaskGeneratorFriedman1","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_friedman1.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Friedman1 Regression Task Generator — mlr_task_generators_friedman1","text":"mlr3::TaskGenerator$format() mlr3::TaskGenerator$generate() mlr3::TaskGenerator$print()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_friedman1.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Friedman1 Regression Task Generator — mlr_task_generators_friedman1","text":"TaskGeneratorFriedman1$new() TaskGeneratorFriedman1$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_friedman1.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Friedman1 Regression Task Generator — mlr_task_generators_friedman1","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_friedman1.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Friedman1 Regression Task Generator — mlr_task_generators_friedman1","text":"","code":"TaskGeneratorFriedman1$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_friedman1.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Friedman1 Regression Task Generator — mlr_task_generators_friedman1","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_friedman1.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Friedman1 Regression Task Generator — mlr_task_generators_friedman1","text":"","code":"TaskGeneratorFriedman1$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_friedman1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Friedman1 Regression Task Generator — mlr_task_generators_friedman1","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_friedman1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Friedman1 Regression Task Generator — mlr_task_generators_friedman1","text":"","code":"generator = tgen(\"friedman1\") task = generator$generate(200) str(task$data()) #> Classes ‘data.table’ and 'data.frame':\t200 obs. of  11 variables: #>  $ y           : num  5.32 16.53 21.87 5.97 14.48 ... #>  $ important1  : num  0.6182 0.7875 0.6566 0.0142 0.5908 ... #>  $ important2  : num  0.118 0.631 0.5 0.312 0.398 ... #>  $ important3  : num  0.671 0.242 0.293 0.32 0.479 ... #>  $ important4  : num  0.16 0.367 0.821 0.426 0.537 ... #>  $ important5  : num  0.121 0.388 0.852 0.208 0.454 ... #>  $ unimportant1: num  0.507 0.653 0.556 0.444 0.865 ... #>  $ unimportant2: num  0.585 0.804 0.723 0.061 0.111 ... #>  $ unimportant3: num  0.335 0.299 0.883 0.715 0.186 ... #>  $ unimportant4: num  0.104 0.446 0.75 0.272 0.321 ... #>  $ unimportant5: num  0.583 0.88 0.624 0.197 0.222 ... #>  - attr(*, \".internal.selfref\")=<externalptr>"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_moons.html","id":null,"dir":"Reference","previous_headings":"","what":"Moons Classification Task Generator — mlr_task_generators_moons","title":"Moons Classification Task Generator — mlr_task_generators_moons","text":"TaskGenerator creating two interleaving half circles (\"moons\") binary classification problem.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_moons.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Moons Classification Task Generator — mlr_task_generators_moons","text":"TaskGenerator can instantiated via dictionary mlr_task_generators associated sugar function tgen():","code":"mlr_task_generators$get(\"moons\") tgen(\"moons\")"},{"path":[]},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_moons.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Moons Classification Task Generator — mlr_task_generators_moons","text":"mlr3::TaskGenerator -> TaskGeneratorMoons","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_moons.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Moons Classification Task Generator — mlr_task_generators_moons","text":"mlr3::TaskGenerator$format() mlr3::TaskGenerator$generate() mlr3::TaskGenerator$print()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_moons.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Moons Classification Task Generator — mlr_task_generators_moons","text":"TaskGeneratorMoons$new() TaskGeneratorMoons$plot() TaskGeneratorMoons$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_moons.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Moons Classification Task Generator — mlr_task_generators_moons","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_moons.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Moons Classification Task Generator — mlr_task_generators_moons","text":"","code":"TaskGeneratorMoons$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_moons.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"Moons Classification Task Generator — mlr_task_generators_moons","text":"Creates simple plot generated data.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_moons.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Moons Classification Task Generator — mlr_task_generators_moons","text":"","code":"TaskGeneratorMoons$plot(n = 200L, pch = 19L, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_moons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Moons Classification Task Generator — mlr_task_generators_moons","text":"n (integer(1)) Number samples draw plot. Default 200. pch (integer(1)) Point char. Passed plot(). ... () Additional arguments passed plot().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_moons.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Moons Classification Task Generator — mlr_task_generators_moons","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_moons.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Moons Classification Task Generator — mlr_task_generators_moons","text":"","code":"TaskGeneratorMoons$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_moons.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Moons Classification Task Generator — mlr_task_generators_moons","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_moons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Moons Classification Task Generator — mlr_task_generators_moons","text":"","code":"generator = tgen(\"moons\") plot(generator, n = 200)   task = generator$generate(200) str(task$data()) #> Classes ‘data.table’ and 'data.frame':\t200 obs. of  3 variables: #>  $ y : Factor w/ 2 levels \"A\",\"B\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ x1: num  -4.465 0.915 0.351 -0.276 -2.786 ... #>  $ x2: num  5.42 6.08 4.44 6.04 6.86 ... #>  - attr(*, \".internal.selfref\")=<externalptr>"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_peak.html","id":null,"dir":"Reference","previous_headings":"","what":"Peak Regression Task Generator — mlr_task_generators_peak","title":"Peak Regression Task Generator — mlr_task_generators_peak","text":"TaskGenerator peak task mlbench::mlbench.peak().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_peak.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Peak Regression Task Generator — mlr_task_generators_peak","text":"TaskGenerator can instantiated via dictionary mlr_task_generators associated sugar function tgen():","code":"mlr_task_generators$get(\"peak\") tgen(\"peak\")"},{"path":[]},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_peak.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Peak Regression Task Generator — mlr_task_generators_peak","text":"mlr3::TaskGenerator -> TaskGeneratorPeak","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_peak.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Peak Regression Task Generator — mlr_task_generators_peak","text":"mlr3::TaskGenerator$format() mlr3::TaskGenerator$generate() mlr3::TaskGenerator$print()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_peak.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Peak Regression Task Generator — mlr_task_generators_peak","text":"TaskGeneratorPeak$new() TaskGeneratorPeak$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_peak.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Peak Regression Task Generator — mlr_task_generators_peak","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_peak.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Peak Regression Task Generator — mlr_task_generators_peak","text":"","code":"TaskGeneratorPeak$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_peak.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Peak Regression Task Generator — mlr_task_generators_peak","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_peak.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Peak Regression Task Generator — mlr_task_generators_peak","text":"","code":"TaskGeneratorPeak$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_peak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Peak Regression Task Generator — mlr_task_generators_peak","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_peak.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Peak Regression Task Generator — mlr_task_generators_peak","text":"","code":"generator = tgen(\"peak\", d = 5) task = generator$generate(200) str(task$data()) #> Classes ‘data.table’ and 'data.frame':\t200 obs. of  6 variables: #>  $ y : num  4.89 5.75 6.96 24.04 4.72 ... #>  $ x1: num  -1.3536 0.2737 0.2287 -0.0232 -1.3182 ... #>  $ x2: num  -0.8278 1.1552 -0.4408 0.0973 1.2019 ... #>  $ x3: num  0.336 -0.717 -0.949 -0.235 0.311 ... #>  $ x4: num  0.39346 0.7602 1.10251 0.00276 0.09836 ... #>  $ x5: num  -0.693 0.662 0.441 -0.115 0.214 ... #>  - attr(*, \".internal.selfref\")=<externalptr>"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_simplex.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplex Classification Task Generator — mlr_task_generators_simplex","title":"Simplex Classification Task Generator — mlr_task_generators_simplex","text":"TaskGenerator simplex task mlbench::mlbench.simplex(). Note generator implemented mlbench returns fewer samples requested.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_simplex.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Simplex Classification Task Generator — mlr_task_generators_simplex","text":"TaskGenerator can instantiated via dictionary mlr_task_generators associated sugar function tgen():","code":"mlr_task_generators$get(\"simplex\") tgen(\"simplex\")"},{"path":[]},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_simplex.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Simplex Classification Task Generator — mlr_task_generators_simplex","text":"mlr3::TaskGenerator -> TaskGeneratorSimplex","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_simplex.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Simplex Classification Task Generator — mlr_task_generators_simplex","text":"mlr3::TaskGenerator$format() mlr3::TaskGenerator$generate() mlr3::TaskGenerator$print()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_simplex.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Simplex Classification Task Generator — mlr_task_generators_simplex","text":"TaskGeneratorSimplex$new() TaskGeneratorSimplex$plot() TaskGeneratorSimplex$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_simplex.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Simplex Classification Task Generator — mlr_task_generators_simplex","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_simplex.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplex Classification Task Generator — mlr_task_generators_simplex","text":"","code":"TaskGeneratorSimplex$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_simplex.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"Simplex Classification Task Generator — mlr_task_generators_simplex","text":"Creates simple plot generated data.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_simplex.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplex Classification Task Generator — mlr_task_generators_simplex","text":"","code":"TaskGeneratorSimplex$plot(n = 200L, pch = 19L, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_simplex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplex Classification Task Generator — mlr_task_generators_simplex","text":"n (integer(1)) Number samples draw plot. Default 200. pch (integer(1)) Point char. Passed plot(). ... () Additional arguments passed plot().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_simplex.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Simplex Classification Task Generator — mlr_task_generators_simplex","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_simplex.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplex Classification Task Generator — mlr_task_generators_simplex","text":"","code":"TaskGeneratorSimplex$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_simplex.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplex Classification Task Generator — mlr_task_generators_simplex","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_simplex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplex Classification Task Generator — mlr_task_generators_simplex","text":"","code":"generator = tgen(\"simplex\") plot(generator, n = 200)   task = generator$generate(200) str(task$data()) #> Classes ‘data.table’ and 'data.frame':\t100 obs. of  4 variables: #>  $ y : Factor w/ 4 levels \"A\",\"B\",\"C\",\"D\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ x1: num  -0.269 -0.543 -0.483 -0.556 -0.523 ... #>  $ x2: num  -0.264 -0.377 -0.244 -0.409 -0.376 ... #>  $ x3: num  -0.1089 -0.0755 -0.2449 -0.2374 -0.2366 ... #>  - attr(*, \".internal.selfref\")=<externalptr>"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_smiley.html","id":null,"dir":"Reference","previous_headings":"","what":"Smiley Classification Task Generator — mlr_task_generators_smiley","title":"Smiley Classification Task Generator — mlr_task_generators_smiley","text":"TaskGenerator smiley task mlbench::mlbench.smiley().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_smiley.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Smiley Classification Task Generator — mlr_task_generators_smiley","text":"TaskGenerator can instantiated via dictionary mlr_task_generators associated sugar function tgen():","code":"mlr_task_generators$get(\"smiley\") tgen(\"smiley\")"},{"path":[]},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_smiley.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Smiley Classification Task Generator — mlr_task_generators_smiley","text":"mlr3::TaskGenerator -> TaskGeneratorSmiley","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_smiley.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Smiley Classification Task Generator — mlr_task_generators_smiley","text":"mlr3::TaskGenerator$format() mlr3::TaskGenerator$generate() mlr3::TaskGenerator$print()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_smiley.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Smiley Classification Task Generator — mlr_task_generators_smiley","text":"TaskGeneratorSmiley$new() TaskGeneratorSmiley$plot() TaskGeneratorSmiley$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_smiley.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Smiley Classification Task Generator — mlr_task_generators_smiley","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_smiley.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smiley Classification Task Generator — mlr_task_generators_smiley","text":"","code":"TaskGeneratorSmiley$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_smiley.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"Smiley Classification Task Generator — mlr_task_generators_smiley","text":"Creates simple plot generated data.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_smiley.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Smiley Classification Task Generator — mlr_task_generators_smiley","text":"","code":"TaskGeneratorSmiley$plot(n = 200L, pch = 19L, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_smiley.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smiley Classification Task Generator — mlr_task_generators_smiley","text":"n (integer(1)) Number samples draw plot. Default 200. pch (integer(1)) Point char. Passed plot(). ... () Additional arguments passed plot().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_smiley.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Smiley Classification Task Generator — mlr_task_generators_smiley","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_smiley.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Smiley Classification Task Generator — mlr_task_generators_smiley","text":"","code":"TaskGeneratorSmiley$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_smiley.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smiley Classification Task Generator — mlr_task_generators_smiley","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_smiley.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Smiley Classification Task Generator — mlr_task_generators_smiley","text":"","code":"generator = tgen(\"smiley\") plot(generator, n = 200)   task = generator$generate(200) str(task$data()) #> Classes ‘data.table’ and 'data.frame':\t200 obs. of  3 variables: #>  $ y : Factor w/ 4 levels \"A\",\"B\",\"C\",\"D\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ x1: num  -0.811 -0.786 -0.891 -0.764 -0.759 ... #>  $ x2: num  1.074 0.873 0.984 0.963 1.12 ... #>  - attr(*, \".internal.selfref\")=<externalptr>"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_spirals.html","id":null,"dir":"Reference","previous_headings":"","what":"Spiral Classification Task Generator — mlr_task_generators_spirals","title":"Spiral Classification Task Generator — mlr_task_generators_spirals","text":"TaskGenerator spirals task mlbench::mlbench.spirals().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_spirals.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Spiral Classification Task Generator — mlr_task_generators_spirals","text":"TaskGenerator can instantiated via dictionary mlr_task_generators associated sugar function tgen():","code":"mlr_task_generators$get(\"spirals\") tgen(\"spirals\")"},{"path":[]},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_spirals.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Spiral Classification Task Generator — mlr_task_generators_spirals","text":"mlr3::TaskGenerator -> TaskGeneratorSpirals","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_spirals.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Spiral Classification Task Generator — mlr_task_generators_spirals","text":"mlr3::TaskGenerator$format() mlr3::TaskGenerator$generate() mlr3::TaskGenerator$print()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_spirals.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Spiral Classification Task Generator — mlr_task_generators_spirals","text":"TaskGeneratorSpirals$new() TaskGeneratorSpirals$plot() TaskGeneratorSpirals$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_spirals.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Spiral Classification Task Generator — mlr_task_generators_spirals","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_spirals.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spiral Classification Task Generator — mlr_task_generators_spirals","text":"","code":"TaskGeneratorSpirals$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_spirals.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"Spiral Classification Task Generator — mlr_task_generators_spirals","text":"Creates simple plot generated data.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_spirals.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Spiral Classification Task Generator — mlr_task_generators_spirals","text":"","code":"TaskGeneratorSpirals$plot(n = 200L, pch = 19L, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_spirals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spiral Classification Task Generator — mlr_task_generators_spirals","text":"n (integer(1)) Number samples draw plot. Default 200. pch (integer(1)) Point char. Passed plot(). ... () Additional arguments passed plot().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_spirals.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Spiral Classification Task Generator — mlr_task_generators_spirals","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_spirals.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Spiral Classification Task Generator — mlr_task_generators_spirals","text":"","code":"TaskGeneratorSpirals$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_spirals.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spiral Classification Task Generator — mlr_task_generators_spirals","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_spirals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spiral Classification Task Generator — mlr_task_generators_spirals","text":"","code":"generator = tgen(\"spirals\") plot(generator, n = 200)   task = generator$generate(200) str(task$data()) #> Classes ‘data.table’ and 'data.frame':\t200 obs. of  3 variables: #>  $ y : Factor w/ 2 levels \"A\",\"B\": 1 2 2 1 1 2 1 1 2 1 ... #>  $ x1: num  0.333 -0.324 -0.16 0.339 0.344 ... #>  $ x2: num  0 -0.2351 0.8382 0.0213 0.0434 ... #>  - attr(*, \".internal.selfref\")=<externalptr>"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_xor.html","id":null,"dir":"Reference","previous_headings":"","what":"XOR Classification Task Generator — mlr_task_generators_xor","title":"XOR Classification Task Generator — mlr_task_generators_xor","text":"TaskGenerator xor task mlbench::mlbench.xor().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_xor.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"XOR Classification Task Generator — mlr_task_generators_xor","text":"TaskGenerator can instantiated via dictionary mlr_task_generators associated sugar function tgen():","code":"mlr_task_generators$get(\"xor\") tgen(\"xor\")"},{"path":[]},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_xor.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"XOR Classification Task Generator — mlr_task_generators_xor","text":"mlr3::TaskGenerator -> TaskGeneratorXor","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_xor.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"XOR Classification Task Generator — mlr_task_generators_xor","text":"mlr3::TaskGenerator$format() mlr3::TaskGenerator$generate() mlr3::TaskGenerator$print()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_xor.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"XOR Classification Task Generator — mlr_task_generators_xor","text":"TaskGeneratorXor$new() TaskGeneratorXor$plot() TaskGeneratorXor$clone()","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_xor.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"XOR Classification Task Generator — mlr_task_generators_xor","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_xor.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"XOR Classification Task Generator — mlr_task_generators_xor","text":"","code":"TaskGeneratorXor$new()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_xor.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"XOR Classification Task Generator — mlr_task_generators_xor","text":"Creates simple plot generated data.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_xor.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"XOR Classification Task Generator — mlr_task_generators_xor","text":"","code":"TaskGeneratorXor$plot(n = 200L, pch = 19L, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_xor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"XOR Classification Task Generator — mlr_task_generators_xor","text":"n (integer(1)) Number samples draw plot. Default 200. pch (integer(1)) Point char. Passed plot(). ... () Additional arguments passed plot().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_xor.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"XOR Classification Task Generator — mlr_task_generators_xor","text":"objects class cloneable method.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_xor.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"XOR Classification Task Generator — mlr_task_generators_xor","text":"","code":"TaskGeneratorXor$clone(deep = FALSE)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_xor.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"XOR Classification Task Generator — mlr_task_generators_xor","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_task_generators_xor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"XOR Classification Task Generator — mlr_task_generators_xor","text":"","code":"generator = tgen(\"xor\") plot(generator, n = 200)   task = generator$generate(200) str(task$data()) #> Classes ‘data.table’ and 'data.frame':\t200 obs. of  3 variables: #>  $ y : Factor w/ 2 levels \"A\",\"B\": 2 2 2 1 2 2 2 2 1 2 ... #>  $ x1: num  -0.5069 -0.7673 0.5126 -0.0956 -0.312 ... #>  $ x2: num  -0.741 -0.885 0.681 0.386 -0.623 ... #>  - attr(*, \".internal.selfref\")=<externalptr>"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks.html","id":null,"dir":"Reference","previous_headings":"","what":"Dictionary of Tasks — mlr_tasks","title":"Dictionary of Tasks — mlr_tasks","text":"simple mlr3misc::Dictionary storing objects class Task. task associated help page, see mlr_tasks_[id]. dictionary can get populated additional tasks add-packages, e.g. mlr3data, mlr3proba mlr3cluster. mlr3oml allows interact OpenML. convenient way retrieve construct tasks, see tsk()/tsks().","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dictionary of Tasks — mlr_tasks","text":"R6::R6Class object inheriting mlr3misc::Dictionary.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Dictionary of Tasks — mlr_tasks","text":"See mlr3misc::Dictionary.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks.html","id":"s-methods","dir":"Reference","previous_headings":"","what":"S3 methods","title":"Dictionary of Tasks — mlr_tasks","text":".data.table(dict, ..., objects = FALSE)mlr3misc::Dictionary -> data.table::data.table() Returns data.table::data.table() columns \"key\", \"label\", \"task_type\", \"nrow\", \"ncol\", \"properties\", number features type \"lgl\", \"int\", \"dbl\", \"chr\", \"fct\" \"ord\", respectively. objects set TRUE, constructed objects returned list column named object.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dictionary of Tasks — mlr_tasks","text":"","code":"as.data.table(mlr_tasks) #> Key: <key> #>                    key                   label task_type  nrow  ncol properties #>                 <char>                  <char>    <char> <int> <int>     <list> #>  1:      breast_cancer Wisconsin Breast Cancer   classif   683    10   twoclass #>  2: california_housing  California House Value      regr 20640    10            #>  3:      german_credit           German Credit   classif  1000    21   twoclass #>  4:               iris            Iris Flowers   classif   150     5 multiclass #>  5:             mtcars            Motor Trends      regr    32    11            #>  6:           penguins         Palmer Penguins   classif   344     8 multiclass #>  7:               pima    Pima Indian Diabetes   classif   768     9   twoclass #>  8:              sonar  Sonar: Mines vs. Rocks   classif   208    61   twoclass #>  9:               spam       HP Spam Detection   classif  4601    58   twoclass #> 10:               wine            Wine Regions   classif   178    14 multiclass #> 11:                zoo             Zoo Animals   classif   101    17 multiclass #>       lgl   int   dbl   chr   fct   ord   pxc   dte #>     <int> <int> <int> <int> <int> <int> <int> <int> #>  1:     0     0     0     0     0     9     0     0 #>  2:     0     0     8     0     1     0     0     0 #>  3:     0     3     0     0    14     3     0     0 #>  4:     0     0     4     0     0     0     0     0 #>  5:     0     0    10     0     0     0     0     0 #>  6:     0     3     2     0     2     0     0     0 #>  7:     0     0     8     0     0     0     0     0 #>  8:     0     0    60     0     0     0     0     0 #>  9:     0     0    57     0     0     0     0     0 #> 10:     0     2    11     0     0     0     0     0 #> 11:    15     1     0     0     0     0     0     0 task = mlr_tasks$get(\"penguins\") # same as tsk(\"penguins\") head(task$data()) #>    species bill_depth bill_length body_mass flipper_length    island    sex #>     <fctr>      <num>       <num>     <int>          <int>    <fctr> <fctr> #> 1:  Adelie       18.7        39.1      3750            181 Torgersen   male #> 2:  Adelie       17.4        39.5      3800            186 Torgersen female #> 3:  Adelie       18.0        40.3      3250            195 Torgersen female #> 4:  Adelie         NA          NA        NA             NA Torgersen   <NA> #> 5:  Adelie       19.3        36.7      3450            193 Torgersen female #> 6:  Adelie       20.6        39.3      3650            190 Torgersen   male #>     year #>    <int> #> 1:  2007 #> 2:  2007 #> 3:  2007 #> 4:  2007 #> 5:  2007 #> 6:  2007  # Add a new task, based on a subset of penguins: data = palmerpenguins::penguins data$species = factor(ifelse(data$species == \"Adelie\", \"1\", \"0\")) task = TaskClassif$new(\"penguins.binary\", data, target = \"species\", positive = \"1\")  # add to dictionary mlr_tasks$add(\"penguins.binary\", task)  # list available tasks mlr_tasks$keys() #>  [1] \"breast_cancer\"      \"california_housing\" \"german_credit\"      #>  [4] \"iris\"               \"mtcars\"             \"penguins\"           #>  [7] \"penguins.binary\"    \"pima\"               \"sonar\"              #> [10] \"spam\"               \"wine\"               \"zoo\"                 # retrieve from dictionary mlr_tasks$get(\"penguins.binary\") #>  #> ── <TaskClassif> (344x8) ─────────────────────────────────────────────────────── #> • Target: species #> • Target classes: 1 (positive class, 44%), 0 (56%) #> • Properties: twoclass #> • Features (7): #>   • int (3): body_mass_g, flipper_length_mm, year #>   • dbl (2): bill_depth_mm, bill_length_mm #>   • fct (2): island, sex  # remove task again mlr_tasks$remove(\"penguins.binary\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_breast_cancer.html","id":null,"dir":"Reference","previous_headings":"","what":"Wisconsin Breast Cancer Classification Task — mlr_tasks_breast_cancer","title":"Wisconsin Breast Cancer Classification Task — mlr_tasks_breast_cancer","text":"classification task mlbench::BreastCancer data set. Column \"Id\" removed. Column names converted snake_case. Positive class set \"malignant\". 16 incomplete cases removed data set. factor features converted ordered factors.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_breast_cancer.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Wisconsin Breast Cancer Classification Task — mlr_tasks_breast_cancer","text":"R6::R6Class inheriting TaskClassif.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_breast_cancer.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Wisconsin Breast Cancer Classification Task — mlr_tasks_breast_cancer","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"breast_cancer\") tsk(\"breast_cancer\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_breast_cancer.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Wisconsin Breast Cancer Classification Task — mlr_tasks_breast_cancer","text":"Task type: “classif” Dimensions: 683x10 Properties: “twoclass” Missings: FALSE Target: “class” Features: “bare_nuclei”, “bl_cromatin”, “cell_shape”, “cell_size”, “cl_thickness”, “epith_c_size”, “marg_adhesion”, “mitoses”, “normal_nucleoli”","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_german_credit.html","id":null,"dir":"Reference","previous_headings":"","what":"German Credit Classification Task — mlr_tasks_german_credit","title":"German Credit Classification Task — mlr_tasks_german_credit","text":"classification task German credit data set. aim predict creditworthiness, labeled \"good\" \"bad\". Positive class set label \"good\". See example creation MeasureClassifCosts described misclassification costs.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_german_credit.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"German Credit Classification Task — mlr_tasks_german_credit","text":"R6::R6Class inheriting TaskClassif.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_german_credit.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"German Credit Classification Task — mlr_tasks_german_credit","text":"Data set originally published UCI. preprocessed version taken package rchallenge factors instead dummy variables, corrected proposed Ulrike Grömping. Donor: Professor Dr. Hans Hofmann Institut für Statistik und Ökonometrie Universität Hamburg FB Wirtschaftswissenschaften Von-Melle-Park 5 2000 Hamburg 13","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_german_credit.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"German Credit Classification Task — mlr_tasks_german_credit","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"german_credit\") tsk(\"german_credit\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_german_credit.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"German Credit Classification Task — mlr_tasks_german_credit","text":"Task type: “classif” Dimensions: 1000x21 Properties: “twoclass” Missings: FALSE Target: “credit_risk” Features: “age”, “amount”, “credit_history”, “duration”, “employment_duration”, “foreign_worker”, “housing”, “installment_rate”, “job”, “number_credits”, “other_debtors”, “other_installment_plans”, “people_liable”, “personal_status_sex”, “present_residence”, “property”, “purpose”, “savings”, “status”, “telephone”","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_german_credit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"German Credit Classification Task — mlr_tasks_german_credit","text":"Grömping U (2019). “South German Credit Data: Correcting Widely Used Data Set.” Reports Mathematics, Physics Chemistry 4, Department II, Beuth University Applied Sciences Berlin.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_german_credit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"German Credit Classification Task — mlr_tasks_german_credit","text":"","code":"task = tsk(\"german_credit\") costs = matrix(c(0, 1, 5, 0), nrow = 2) dimnames(costs) = list(predicted = task$class_names, truth = task$class_names) measure = msr(\"classif.costs\", id = \"german_credit_costs\", costs = costs) print(measure) #>  #> ── <MeasureClassifCosts> (german_credit_costs): Cost-sensitive Classification ── #> • Packages: mlr3 #> • Range: [0, Inf] #> • Minimize: TRUE #> • Average: macro #> • Parameters: normalize=TRUE #> • Properties: weights #> • Predict type: response #> • Predict sets: test #> • Aggregator: mean()"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_iris.html","id":null,"dir":"Reference","previous_headings":"","what":"Iris Classification Task — mlr_tasks_iris","title":"Iris Classification Task — mlr_tasks_iris","text":"classification task popular datasets::iris data set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_iris.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Iris Classification Task — mlr_tasks_iris","text":"R6::R6Class inheriting TaskClassif.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_iris.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Iris Classification Task — mlr_tasks_iris","text":"https://en.wikipedia.org/wiki/Iris_flower_data_set Anderson E (1936). “Species Problem Iris.” Annals Missouri Botanical Garden, 23(3), 457. doi:10.2307/2394164 .","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_iris.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Iris Classification Task — mlr_tasks_iris","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"iris\") tsk(\"iris\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_iris.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Iris Classification Task — mlr_tasks_iris","text":"Task type: “classif” Dimensions: 150x5 Properties: “multiclass” Missings: FALSE Target: “Species” Features: “Petal.Length”, “Petal.Width”, “Sepal.Length”, “Sepal.Width”","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_mtcars.html","id":null,"dir":"Reference","previous_headings":"","what":"Motor Trend Regression Task — mlr_tasks_mtcars","title":"Motor Trend Regression Task — mlr_tasks_mtcars","text":"regression task datasets::mtcars data set. Target variable mpg (Miles/(US) gallon). Rownames stored variable \"..rownames column role \"model\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_mtcars.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Motor Trend Regression Task — mlr_tasks_mtcars","text":"R6::R6Class inheriting TaskRegr.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_mtcars.html","id":"construction","dir":"Reference","previous_headings":"","what":"Construction","title":"Motor Trend Regression Task — mlr_tasks_mtcars","text":"","code":"mlr_tasks$get(\"mtcars\") tsk(\"mtcars\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_mtcars.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Motor Trend Regression Task — mlr_tasks_mtcars","text":"Task type: “regr” Dimensions: 32x11 Properties: - Missings: FALSE Target: “mpg” Features: “”, “carb”, “cyl”, “disp”, “drat”, “gear”, “hp”, “qsec”, “vs”, “wt”","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_penguins.html","id":null,"dir":"Reference","previous_headings":"","what":"Palmer Penguins Data Set — mlr_tasks_penguins","title":"Palmer Penguins Data Set — mlr_tasks_penguins","text":"Classification data predict species penguins palmerpenguins package, see palmerpenguins::penguins. better alternative iris data set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_penguins.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Palmer Penguins Data Set — mlr_tasks_penguins","text":"R6::R6Class inheriting TaskClassif.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_penguins.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Palmer Penguins Data Set — mlr_tasks_penguins","text":"palmerpenguins","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_penguins.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Palmer Penguins Data Set — mlr_tasks_penguins","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"penguins\") tsk(\"penguins\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_penguins.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Palmer Penguins Data Set — mlr_tasks_penguins","text":"Task type: “classif” Dimensions: 344x8 Properties: “multiclass” Missings: TRUE Target: “species” Features: “bill_depth”, “bill_length”, “body_mass”, “flipper_length”, “island”, “sex”, “year”","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_penguins.html","id":"pre-processing","dir":"Reference","previous_headings":"","what":"Pre-processing","title":"Palmer Penguins Data Set — mlr_tasks_penguins","text":"unit measurement removed column names. Lengths given millimeters (mm), weight gram (g).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_penguins.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Palmer Penguins Data Set — mlr_tasks_penguins","text":"Gorman KB, Williams TD, Fraser WR (2014). “Ecological Sexual Dimorphism Environmental Variability within Community Antarctic Penguins (Genus Pygoscelis).” PLoS ONE, 9(3), e90081. doi:10.1371/journal.pone.0090081 . https://github.com/allisonhorst/palmerpenguins","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_pima.html","id":null,"dir":"Reference","previous_headings":"","what":"Pima Indian Diabetes Classification Task — mlr_tasks_pima","title":"Pima Indian Diabetes Classification Task — mlr_tasks_pima","text":"classification task mlbench::PimaIndiansDiabetes2 data set. Positive class set \"pos\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_pima.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pima Indian Diabetes Classification Task — mlr_tasks_pima","text":"R6::R6Class inheriting TaskClassif.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_pima.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Pima Indian Diabetes Classification Task — mlr_tasks_pima","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"pima\") tsk(\"pima\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_pima.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Pima Indian Diabetes Classification Task — mlr_tasks_pima","text":"Task type: “classif” Dimensions: 768x9 Properties: “twoclass” Missings: TRUE Target: “diabetes” Features: “age”, “glucose”, “insulin”, “mass”, “pedigree”, “pregnant”, “pressure”, “triceps”","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_sonar.html","id":null,"dir":"Reference","previous_headings":"","what":"Sonar Classification Task — mlr_tasks_sonar","title":"Sonar Classification Task — mlr_tasks_sonar","text":"classification task mlbench::Sonar data set. Positive class set \"M\" (Mine).","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_sonar.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sonar Classification Task — mlr_tasks_sonar","text":"R6::R6Class inheriting TaskClassif.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_sonar.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Sonar Classification Task — mlr_tasks_sonar","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"sonar\") tsk(\"sonar\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_sonar.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Sonar Classification Task — mlr_tasks_sonar","text":"Task type: “classif” Dimensions: 208x61 Properties: “twoclass” Missings: FALSE Target: “Class” Features: “V1”, “V10”, “V11”, “V12”, “V13”, “V14”, “V15”, “V16”, “V17”, “V18”, “V19”, “V2”, “V20”, “V21”, “V22”, “V23”, “V24”, “V25”, “V26”, “V27”, “V28”, “V29”, “V3”, “V30”, “V31”, “V32”, “V33”, “V34”, “V35”, “V36”, “V37”, “V38”, “V39”, “V4”, “V40”, “V41”, “V42”, “V43”, “V44”, “V45”, “V46”, “V47”, “V48”, “V49”, “V5”, “V50”, “V51”, “V52”, “V53”, “V54”, “V55”, “V56”, “V57”, “V58”, “V59”, “V6”, “V60”, “V7”, “V8”, “V9”","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_spam.html","id":null,"dir":"Reference","previous_headings":"","what":"Spam Classification Task — mlr_tasks_spam","title":"Spam Classification Task — mlr_tasks_spam","text":"Spam data set UCI machine learning repository (http://archive.ics.uci.edu/dataset/94/spambase). Data set collected Hewlett-Packard Labs classify emails spam non-spam. 57 variables indicate frequency certain words characters e-mail. positive class set \"spam\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_spam.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spam Classification Task — mlr_tasks_spam","text":"R6::R6Class inheriting TaskClassif.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_spam.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spam Classification Task — mlr_tasks_spam","text":"Creators: Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt. Hewlett-Packard Labs, 1501 Page Mill Rd., Palo Alto, CA 94304 Donor: George Forman (gforman nospam hpl.hp.com) 650-857-7835 Preprocessing: Columns renamed. Preprocessed data taken kernlab package.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_spam.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Spam Classification Task — mlr_tasks_spam","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"spam\") tsk(\"spam\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_spam.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Spam Classification Task — mlr_tasks_spam","text":"Task type: “classif” Dimensions: 4601x58 Properties: “twoclass” Missings: FALSE Target: “type” Features: “address”, “addresses”, “”, “business”, “capitalAve”, “capitalLong”, “capitalTotal”, “charDollar”, “charExclamation”, “charHash”, “charRoundbracket”, “charSemicolon”, “charSquarebracket”, “conference”, “credit”, “cs”, “data”, “direct”, “edu”, “email”, “font”, “free”, “george”, “hp”, “hpl”, “internet”, “lab”, “labs”, “mail”, “make”, “meeting”, “money”, “num000”, “num1999”, “num3d”, “num415”, “num650”, “num85”, “num857”, “order”, “original”, “”, “”, “parts”, “people”, “pm”, “project”, “re”, “receive”, “remove”, “report”, “table”, “technology”, “telnet”, “”, “”, “”","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_spam.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spam Classification Task — mlr_tasks_spam","text":"Dua, Dheeru, Graff, Casey (2017). “UCI Machine Learning Repository.” http://archive.ics.uci.edu/datasets.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_wine.html","id":null,"dir":"Reference","previous_headings":"","what":"Wine Classification Task — mlr_tasks_wine","title":"Wine Classification Task — mlr_tasks_wine","text":"Wine data set UCI machine learning repository (http://archive.ics.uci.edu/dataset/109/wine). Results chemical analysis three types wines grown region Italy derived three different cultivars.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_wine.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Wine Classification Task — mlr_tasks_wine","text":"R6::R6Class inheriting TaskClassif.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_wine.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Wine Classification Task — mlr_tasks_wine","text":"Original owners: Forina, M. et al, PARVUS - Extendible Package Data Exploration, Classification Correlation. Institute Pharmaceutical Food Analysis Technologies, Via Brigata Salerno, 16147 Genoa, Italy. Donor: Stefan Aeberhard, email: stefan@coral.cs.jcu.edu.au","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_wine.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Wine Classification Task — mlr_tasks_wine","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"wine\") tsk(\"wine\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_wine.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Wine Classification Task — mlr_tasks_wine","text":"Task type: “classif” Dimensions: 178x14 Properties: “multiclass” Missings: FALSE Target: “type” Features: “alcalinity”, “alcohol”, “ash”, “color”, “dilution”, “flavanoids”, “hue”, “magnesium”, “malic”, “nonflavanoids”, “phenols”, “proanthocyanins”, “proline”","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_wine.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Wine Classification Task — mlr_tasks_wine","text":"Dua, Dheeru, Graff, Casey (2017). “UCI Machine Learning Repository.” http://archive.ics.uci.edu/datasets.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_zoo.html","id":null,"dir":"Reference","previous_headings":"","what":"Zoo Classification Task — mlr_tasks_zoo","title":"Zoo Classification Task — mlr_tasks_zoo","text":"classification task mlbench::Zoo data set. Rownames stored variable \"..rownames\" column role \"name\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_zoo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Zoo Classification Task — mlr_tasks_zoo","text":"R6::R6Class inheriting TaskClassif.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_zoo.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Zoo Classification Task — mlr_tasks_zoo","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"zoo\") tsk(\"zoo\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_tasks_zoo.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Zoo Classification Task — mlr_tasks_zoo","text":"Task type: “classif” Dimensions: 101x17 Properties: “multiclass” Missings: FALSE Target: “type” Features: “airborne”, “aquatic”, “backbone”, “breathes”, “catsize”, “domestic”, “eggs”, “feathers”, “fins”, “hair”, “legs”, “milk”, “predator”, “tail”, “toothed”, “venomous”","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_test_helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Documentation of mlr3 test helpers — mlr_test_helpers","title":"Documentation of mlr3 test helpers — mlr_test_helpers","text":"mlr3 package contains various helper functions test validity objects learners. functions contained mlr3 namespaces instead located inst/testthat directory source package testthat directory installed package. files can sourced following line code:   extension packages mlr3proba similar files can sourced accordingly. manual page documents important helper functions relevant users implement custom learners.","code":"lapply(list.files(system.file(\"testthat\", package = \"mlr3\"), pattern = \"^helper.*\\\\.[rR]\", full.names = TRUE), source)"},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_test_helpers.html","id":"run-autotest-","dir":"Reference","previous_headings":"","what":"run_autotest()","title":"Documentation of mlr3 test helpers — mlr_test_helpers","text":"function runs Learner's automatic test suite. autotests, multiple tasks generated depending properties learner. run_autotest() function trains learner task predicts supported predict types. (see argument predict_types). debug, simply run result = run_autotest(learner) proceed investigating task, learner prediction returned result. example usages can look autotests various mlr3 source repositories mlr3learners. information can found inst/testthat/autotest.R file. Parameters: learner (Learner) learner check. N (integer(1)) number rows generated tasks. exclude (character()) task learner trained id. reason, one tests disabled, argument takes regular expression disables tasks whose id matches regular expression. predict_types (character()) predict types learner check. Defaults predict typpes learner. check_replicable (logical(1)) Whether check running learner twice seed result identical predictions. Default TRUE. configure_learner (function(learner, task)) running learner task, function allows change parameter values depending input task.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_test_helpers.html","id":"run-paramtest-","dir":"Reference","previous_headings":"","what":"run_paramtest()","title":"Documentation of mlr3 test helpers — mlr_test_helpers","text":"Description: Checks parameters mlr3 Learners parameters defined upstream functions respective learner. goal detect parameters dropped added upstream implementation. learners parameters stored within learner function called training. Sometimes learners come \"control\" function, e.g. glmnet.control() package glmnet. learners need checked well since make full ParamSet respective learner. work nicely defined ParamSet, certain parameters need excluded present either \"control\" object actual top-level function call. exclusions go argument exclude comment reason exclusion. See examples information. example usages can look parameter tests various mlr3 source repositories mlr3learners. Parameters: learner (Learner) learner whose parameter set checked. fun (function() list functions()s) function(s) containing parameters must implemented learner. exclude (character()) Argument names specified argument exempt checking. can used parameters available fun function(s) implemented learner, learner implements additional parameters available fun function(s). tag (character(1)) parameters tagged tag checked. NULL (default), parameters checked.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/mlr_test_helpers.html","id":"expect-learner-","dir":"Reference","previous_headings":"","what":"expect_learner()","title":"Documentation of mlr3 test helpers — mlr_test_helpers","text":"Checks various properties learners satisfy. Used testing learner implementations, especially methods fields implement document. Parameters lrn :: (Learner) learner whose properties verified. tsk :: (Task) Optional argument (default NULL). provided, additional checks run check compatibility learner task. check_man :: (logical(1)) Whether check learner man page.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/partition.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually Partition into Training, Test and Validation Set — partition","title":"Manually Partition into Training, Test and Validation Set — partition","text":"Creates split row ids Task training test set, optionally validation set.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/partition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually Partition into Training, Test and Validation Set — partition","text":"","code":"partition(task, ratio = 0.67)"},{"path":"https://mlr3.mlr-org.com/dev/reference/partition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually Partition into Training, Test and Validation Set — partition","text":"task (Task) Task operate . ratio (numeric()) Ratio observations put training set. 2 element vector provided, first element ratio training set, second element ratio test set. validation set contain remaining observations.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/partition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manually Partition into Training, Test and Validation Set — partition","text":"","code":"# regression task partitioned into training and test set task = tsk(\"california_housing\") split = partition(task, ratio = 0.5) data = data.frame(   y = c(task$truth(split$train), task$truth(split$test)),   split = rep(c(\"train\", \"predict\"), lengths(split[c(\"train\", \"test\")])) ) boxplot(y ~ split, data = data)   # classification task partitioned into training, test and validation set task = tsk(\"pima\") split = partition(task, c(0.66, 0.14))"},{"path":"https://mlr3.mlr-org.com/dev/reference/predict.Learner.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict Method for Learners — predict.Learner","title":"Predict Method for Learners — predict.Learner","text":"Extends generic stats::predict() method Learner. Note function intended glue code used third party packages. recommend work Learner directly, .e. calling learner$predict() learner$predict_newdata() directly. Performs following steps: Sets additional hyperparameters passed function. Creates Prediction object calling learner$predict_newdata(). Returns (subset ) Prediction.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/predict.Learner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict Method for Learners — predict.Learner","text":"","code":"# S3 method for class 'Learner' predict(object, newdata, predict_type = NULL, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/predict.Learner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict Method for Learners — predict.Learner","text":"object (Learner) Learner. newdata (data.frame()) New data predict . predict_type (character(1)) predict type return. Set <Prediction> retrieve complete Prediction object. set NULL (default), first predict type respective class Learner stored mlr_reflections used. ... () Hyperparameters pass Learner.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/predict.Learner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict Method for Learners — predict.Learner","text":"","code":"task = tsk(\"spam\")  learner = lrn(\"classif.rpart\", predict_type = \"prob\") learner$train(task) predict(learner, task$data(1:3), predict_type = \"response\") #> [1] spam spam spam #> Levels: spam nonspam predict(learner, task$data(1:3), predict_type = \"prob\") #>           spam    nonspam #> [1,] 0.8513514 0.14864865 #> [2,] 0.9339623 0.06603774 #> [3,] 0.9339623 0.06603774 predict(learner, task$data(1:3), predict_type = \"<Prediction>\") #>  #> ── <PredictionClassif> for 3 observations: ───────────────────────────────────── #>  row_ids truth response prob.spam prob.nonspam #>        1  spam     spam 0.8513514   0.14864865 #>        2  spam     spam 0.9339623   0.06603774 #>        3  spam     spam 0.9339623   0.06603774"},{"path":"https://mlr3.mlr-org.com/dev/reference/print.roc_measures.html","id":null,"dir":"Reference","previous_headings":"","what":"Print ROC Measures — print.roc_measures","title":"Print ROC Measures — print.roc_measures","text":"Print confusion matrix set roc performance measures.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/print.roc_measures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print ROC Measures — print.roc_measures","text":"","code":"# S3 method for class 'roc_measures' print(x, abbreviations = TRUE, digits = 2, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/print.roc_measures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print ROC Measures — print.roc_measures","text":"x (roc_measures) object returned score_roc_measures. abbreviations (logical(1)) TRUE, print list abbreviations measures. digits (integer(1)) Number digits round measures . ... () Additional parameters, currently unused.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. data.table .data.table, data.table mlr3misc clbk, clbks, mlr_callbacks","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/resample.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample a Learner on a Task — resample","title":"Resample a Learner on a Task — resample","text":"Runs resampling (possibly parallel): Repeatedly apply Learner learner training set Task task train model, use trained model predict observations test set. Training test sets defined Resampling resampling.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/resample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample a Learner on a Task — resample","text":"","code":"resample(   task,   learner,   resampling,   store_models = FALSE,   store_backends = TRUE,   encapsulate = NA_character_,   allow_hotstart = FALSE,   clone = c(\"task\", \"learner\", \"resampling\"),   unmarshal = TRUE,   callbacks = NULL )"},{"path":"https://mlr3.mlr-org.com/dev/reference/resample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample a Learner on a Task — resample","text":"task (Task). learner (Learner). resampling (Resampling). store_models (logical(1)) Store fitted model resulting object= Set TRUE want analyse models want extract information like variable importance. store_backends (logical(1)) Keep DataBackend Task ResampleResult? Set TRUE performance measures require Task, analyse results conveniently. Set FALSE reduce file size memory footprint serialization. current default TRUE, eventually changed future release. encapsulate (character(1)) NA, enables encapsulation setting field Learner$encapsulate one supported values: \"none\" (disable encapsulation), \"try\" (captures errors output printed console logged), \"evaluate\" (execute via evaluate) \"callr\" (start external session via callr). NA, encapsulation changed, .e. settings individual learner active. Additionally, encapsulation set \"evaluate\" \"callr\", fallback learner set featureless learner learner already fallback configured. allow_hotstart (logical(1)) Determines learner(s) hot started trained models $hotstart_stack. See also HotstartStack. clone (character()) Select input objects cloned proceeding providing set possible values \"task\", \"learner\" \"resampling\" Task, Learner Resampling, respectively. Per default, input objects cloned. unmarshal Learner Whether unmarshal learners marshaled execution. TRUE models stored unmarshaled form. FALSE, learners (need marshaling) stored marshaled form. callbacks (List mlr3misc::Callback) Callbacks executed resampling process. See CallbackResample ContextResample details.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/resample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resample a Learner on a Task — resample","text":"ResampleResult.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/resample.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Resample a Learner on a Task — resample","text":"fitted models discarded predictions computed order reduce memory consumption. need access models later analysis, set store_models TRUE.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/resample.html","id":"stochasticity","dir":"Reference","previous_headings":"","what":"Stochasticity","title":"Resample a Learner on a Task — resample","text":"Note uninstantiated Resamplings instantiated task, making procedure stochastic even case deterministic learner.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/resample.html","id":"predict-sets","dir":"Reference","previous_headings":"","what":"Predict Sets","title":"Resample a Learner on a Task — resample","text":"want compare performance learner training performance test set, configure Learner predict multiple sets setting field predict_sets c(\"train\", \"test\") (default \"test\"). set yields separate Prediction object resampling. next step, configure measures operate respective Prediction object:   (list ) created measures can finally passed $aggregate() $score().","code":"m1 = msr(\"classif.ce\", id = \"ce.train\", predict_sets = \"train\") m2 = msr(\"classif.ce\", id = \"ce.test\", predict_sets = \"test\")"},{"path":"https://mlr3.mlr-org.com/dev/reference/resample.html","id":"parallelization","dir":"Reference","previous_headings":"","what":"Parallelization","title":"Resample a Learner on a Task — resample","text":"function can parallelized future package. One job one resampling iteration, jobs send apply function future.apply single batch. select parallel backend, use future::plan(). parallelization can found book: https://mlr3book.mlr-org.com/chapters/chapter10/advanced_technical_aspects_of_mlr3.html","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/resample.html","id":"progress-bars","dir":"Reference","previous_headings":"","what":"Progress Bars","title":"Resample a Learner on a Task — resample","text":"function supports progress bars via package progressr. Simply wrap function call progressr::with_progress() enable . Alternatively, call progressr::handlers() global = TRUE enable progress bars globally. recommend progress package backend can enabled progressr::handlers(\"progress\").","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/resample.html","id":"logging","dir":"Reference","previous_headings":"","what":"Logging","title":"Resample a Learner on a Task — resample","text":"mlr3 uses lgr package logging. lgr supports multiple log levels can queried getOption(\"lgr.log_levels\"). suppress output reduce verbosity, can lower log default level \"info\" \"warn\":   get additional log output debugging, increase log level \"debug\" \"trace\":   log file data base, see documentation lgr::lgr-package.","code":"lgr::get_logger(\"mlr3\")$set_threshold(\"warn\") lgr::get_logger(\"mlr3\")$set_threshold(\"debug\")"},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/reference/resample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resample a Learner on a Task — resample","text":"","code":"task = tsk(\"penguins\") learner = lrn(\"classif.rpart\") resampling = rsmp(\"cv\")  # Explicitly instantiate the resampling for this task for reproduciblity set.seed(123) resampling$instantiate(task)  rr = resample(task, learner, resampling) print(rr) #>  #> ── <ResampleResult> with 10 resampling iterations ────────────────────────────── #>   task_id    learner_id resampling_id iteration     prediction_test warnings #>  penguins classif.rpart            cv         1 <PredictionClassif>        0 #>  penguins classif.rpart            cv         2 <PredictionClassif>        0 #>  penguins classif.rpart            cv         3 <PredictionClassif>        0 #>  penguins classif.rpart            cv         4 <PredictionClassif>        0 #>  penguins classif.rpart            cv         5 <PredictionClassif>        0 #>  penguins classif.rpart            cv         6 <PredictionClassif>        0 #>  penguins classif.rpart            cv         7 <PredictionClassif>        0 #>  penguins classif.rpart            cv         8 <PredictionClassif>        0 #>  penguins classif.rpart            cv         9 <PredictionClassif>        0 #>  penguins classif.rpart            cv        10 <PredictionClassif>        0 #>  errors #>       0 #>       0 #>       0 #>       0 #>       0 #>       0 #>       0 #>       0 #>       0 #>       0  # Retrieve performance rr$score(msr(\"classif.ce\")) #>      task_id    learner_id resampling_id iteration classif.ce #>       <char>        <char>        <char>     <int>      <num> #>  1: penguins classif.rpart            cv         1 0.00000000 #>  2: penguins classif.rpart            cv         2 0.00000000 #>  3: penguins classif.rpart            cv         3 0.02857143 #>  4: penguins classif.rpart            cv         4 0.00000000 #>  5: penguins classif.rpart            cv         5 0.17647059 #>  6: penguins classif.rpart            cv         6 0.05882353 #>  7: penguins classif.rpart            cv         7 0.05882353 #>  8: penguins classif.rpart            cv         8 0.02941176 #>  9: penguins classif.rpart            cv         9 0.11764706 #> 10: penguins classif.rpart            cv        10 0.05882353 #> Hidden columns: task, learner, resampling, prediction_test rr$aggregate(msr(\"classif.ce\")) #> classif.ce  #> 0.05285714   # merged prediction objects of all resampling iterations pred = rr$prediction() pred$confusion #>            truth #> response    Adelie Chinstrap Gentoo #>   Adelie       145         6      0 #>   Chinstrap      7        59      2 #>   Gentoo         0         3    122  # Repeat resampling with featureless learner rr_featureless = resample(task, lrn(\"classif.featureless\"), resampling)  # Convert results to BenchmarkResult, then combine them bmr1 = as_benchmark_result(rr) bmr2 = as_benchmark_result(rr_featureless) print(bmr1$combine(bmr2)) #>  #> ── <BenchmarkResult> of 20 rows with 2 resampling run ────────────────────────── #>  nr  task_id          learner_id resampling_id iters warnings errors #>   1 penguins       classif.rpart            cv    10        0      0 #>   2 penguins classif.featureless            cv    10        0      0"},{"path":"https://mlr3.mlr-org.com/dev/reference/score_roc_measures.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate ROC Measures — score_roc_measures","title":"Calculate ROC Measures — score_roc_measures","text":"Calculate set roc performance measures based confusion matrix. tpr True positive rate (Sensitivity, Recall) fpr False positive rate (Fall-) fnr False negative rate (Miss rate) tnr True negative rate (Specificity) ppv Positive predictive value (Precision) fomr False omission rate lrp Positive likelihood ratio (LR+) fdr False discovery rate npv Negative predictive value acc Accuracy lrm Negative likelihood ratio (LR-) dor Diagnostic odds ratio","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/score_roc_measures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate ROC Measures — score_roc_measures","text":"","code":"score_roc_measures(pred)"},{"path":"https://mlr3.mlr-org.com/dev/reference/score_roc_measures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate ROC Measures — score_roc_measures","text":"pred (PredictionClassif) prediction object.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/score_roc_measures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate ROC Measures — score_roc_measures","text":"list() list containing two elements confusion_matrix 2 times 2 confusion matrix absolute frequencies measures, list mentioned measures.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/score_roc_measures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate ROC Measures — score_roc_measures","text":"","code":"learner = lrn(\"classif.rpart\", predict_type = \"prob\") splits = partition(task = tsk(\"pima\"), ratio = 0.7) task = tsk(\"pima\") learner$train(task) pred = learner$predict(task) score_roc_measures(pred) #>  #> ── ROC Measures ── #>  #>      predicted #> true  pos       neg                                  #>   pos 207       73         tpr: 0.77      fnr: 0.23  #>   neg 61        427        fpr: 0.15      tnr: 0.85  #>       ppv: 0.74 fomr: 0.12 lr_plus: 5.29  acc: 0.83  #>       fdr: 0.26 npv: 0.88  lr_minus: 0.27 dor: 19.85 #>  #> ── Abbreviations:  #> • tpr - True positive rate (Sensitivity, Recall) #> • fpr - False positive rate (Fall-out) #> • fnr - False negative rate (Miss rate) #> • tnr - True negative rate (Specificity) #> • ppv - Positive predictive value (Precision) #> • fomr - False omission rate #> • lrp - Positive likelihood ratio (LR+) #> • fdr - False discovery rate #> • npv - Negative predictive value #> • acc - Accuracy #> • lrm - Negative likelihood ratio (LR-) #> • dor - Diagnostic odds ratio"},{"path":"https://mlr3.mlr-org.com/dev/reference/set_threads.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the Number of Threads — set_threads","title":"Set the Number of Threads — set_threads","text":"Control parallelism via threading calling external packages mlr3. example, random forest implementation package ranger (connected via mlr3learners) supports threading via OpenMP. number threads use can set via hyperparameter num.threads, defaults 1. calling set_threads(x, 4) x ranger learner, hyperparameter changed 4 cores used. object x support threading, x returned -. applied list, recurses list elements. Note threading incompatible parallelization techniques forking via future::plan future::multicore. reason learners connected mlr3 threading disabled defaults.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/set_threads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the Number of Threads — set_threads","text":"","code":"set_threads(x, n = availableCores(), ...)  # Default S3 method set_threads(x, n = availableCores(), ...)  # S3 method for class 'R6' set_threads(x, n = availableCores(), ...)  # S3 method for class 'list' set_threads(x, n = availableCores(), ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/set_threads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the Number of Threads — set_threads","text":"x () Object set threads , e.g. Learner. object modified -place. n (integer(1)) Number threads use. Defaults parallelly::availableCores(). ... () Additional arguments.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/set_threads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the Number of Threads — set_threads","text":"object input x (changed -place), possibly updated parameter values.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/task_check_col_roles.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Column Roles — task_check_col_roles","title":"Check Column Roles — task_check_col_roles","text":"Internal function check column roles.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/task_check_col_roles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Column Roles — task_check_col_roles","text":"","code":"task_check_col_roles(task, new_roles, ...)  # S3 method for class 'Task' task_check_col_roles(task, new_roles, ...)  # S3 method for class 'TaskClassif' task_check_col_roles(task, new_roles, ...)  # S3 method for class 'TaskRegr' task_check_col_roles(task, new_roles, ...)  # S3 method for class 'TaskSupervised' task_check_col_roles(task, new_roles, ...)  # S3 method for class 'TaskUnsupervised' task_check_col_roles(task, new_roles, ...)"},{"path":"https://mlr3.mlr-org.com/dev/reference/task_check_col_roles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Column Roles — task_check_col_roles","text":"task (Task) Task. new_roles (list()) Column roles.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/uhash.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain specific uhashes from a BenchmarkResult — uhashes","title":"Obtain specific uhashes from a BenchmarkResult — uhashes","text":"BenchmarkResult, ResampleResult uniquely identified hash (uhash). Operations select specific ResampleResults BenchmarkResult operate using hashes. function allows obtain uhashes specific learners, tasks, resamplings. want control, can also directly obtain uhash table BenchmarkResult via field $uhash_table.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/uhash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain specific uhashes from a BenchmarkResult — uhashes","text":"","code":"uhashes(bmr, learner_ids = NULL, task_ids = NULL, resampling_ids = NULL)  uhash(bmr, learner_id = NULL, task_id = NULL, resampling_id = NULL)"},{"path":"https://mlr3.mlr-org.com/dev/reference/uhash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain specific uhashes from a BenchmarkResult — uhashes","text":"bmr (BenchmarkResult) Benchmark result. learner_ids (character() | NULL) Learner IDs. task_ids (character() | NULL) Task IDs. resampling_ids (character() | NULL) Resampling IDs. learner_id (character(1) | NULL) Learner ID. task_id (character(1) | NULL) Task ID. resampling_id (character(1) | NULL) Resampling ID.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/uhash.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain specific uhashes from a BenchmarkResult — uhashes","text":"","code":"design = benchmark_grid(   tsks(c(\"sonar\", \"iris\")),   lrns(c(\"classif.debug\", \"classif.featureless\", \"classif.rpart\")),   rsmp(\"holdout\") ) bmr = benchmark(design) bmr #>  #> ── <BenchmarkResult> of 6 rows with 6 resampling run ─────────────────────────── #>  nr task_id          learner_id resampling_id iters warnings errors #>   1   sonar       classif.debug       holdout     1        0      0 #>   2   sonar classif.featureless       holdout     1        0      0 #>   3   sonar       classif.rpart       holdout     1        0      0 #>   4    iris       classif.debug       holdout     1        0      0 #>   5    iris classif.featureless       holdout     1        0      0 #>   6    iris       classif.rpart       holdout     1        0      0 bmr$uhashes #> [1] \"3fa88d0b-9a32-49e3-bc19-5507bdbaa823\" #> [2] \"d41fa0ba-fc93-477b-ae42-d4f278694830\" #> [3] \"be984518-bea8-42ca-9c6b-a6c1b2c44be7\" #> [4] \"4ed4b7fd-cee8-473e-8b3c-658e9a9de81f\" #> [5] \"d7443421-3a6d-4c0e-8f2b-82e9c63ee440\" #> [6] \"b519e659-79cb-4375-9909-315e17aa7e5f\" uhash(bmr, learner_id = \"classif.debug\", task_id = \"sonar\", resampling_id = \"holdout\") #> [1] \"3fa88d0b-9a32-49e3-bc19-5507bdbaa823\" uhashes(bmr, learner_ids = c(\"classif.debug\", \"classif.featureless\")) #> [1] \"3fa88d0b-9a32-49e3-bc19-5507bdbaa823\" #> [2] \"d41fa0ba-fc93-477b-ae42-d4f278694830\" #> [3] \"4ed4b7fd-cee8-473e-8b3c-658e9a9de81f\" #> [4] \"d7443421-3a6d-4c0e-8f2b-82e9c63ee440\""},{"path":"https://mlr3.mlr-org.com/dev/reference/warn_deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Give a Warning about a Deprecated Function, Argument, or Active Binding — warn_deprecated","title":"Give a Warning about a Deprecated Function, Argument, or Active Binding — warn_deprecated","text":"Generates warning deprecated function, argument, active binding used accessed. warning given per session, deprecation warnings can suppressed setting option mlr3.warn_deprecated = FALSE. warning format \"deprecated removed future.\" Use 'deprecated_binding()' helper function create active binding generates warning accessed.","code":""},{"path":"https://mlr3.mlr-org.com/dev/reference/warn_deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Give a Warning about a Deprecated Function, Argument, or Active Binding — warn_deprecated","text":"","code":"warn_deprecated(what)"},{"path":"https://mlr3.mlr-org.com/dev/reference/warn_deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Give a Warning about a Deprecated Function, Argument, or Active Binding — warn_deprecated","text":"(character(1)) description deprecated entity. somewhat descriptive, e.g. \"Class$method()\" \"Argument 'foo' Class$method()\". used determine warning already given, unique deprecated entity.","code":""},{"path":[]},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-110","dir":"Changelog","previous_headings":"","what":"mlr3 1.1.0","title":"mlr3 1.1.0","text":"CRAN release: 2025-07-30 feat: Add new measure MeasureRegrRQR quantile regression. feat: Add $predict_newdata_fast() method Learner speed prediction. fix: configure_learner passed run_experiment() autotest learners.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-101","dir":"Changelog","previous_headings":"","what":"mlr3 1.0.1","title":"mlr3 1.0.1","text":"CRAN release: 2025-07-03 fix: printer Learner failed validate field set. fix: Avoid printing empty line feature less tasks. perf: Use data.table::setattr() less copying.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-100","dir":"Changelog","previous_headings":"","what":"mlr3 1.0.0","title":"mlr3 1.0.0","text":"CRAN release: 2025-06-18 BREAKING CHANGE: mlr3 ecosystem base logger now named mlr3. mlr3/core logger child mlr3 logger used logging messages mlr3 package. extension packages loggers children mlr3 logger e.g. mlr3/mlr3pipelines mlr3/bbotk tuning. BREAKING CHANGE: weights property functionality split weights_learner weights_measure: weights_learner: Weights used training Learner. weights_measure: Weights used scoring predictions via measures. can disabled via new field use_weights Learner Measure objects. feat: Add $confusion_weighted field PredictionClassif. feat: Add $weights field Prediction. contains weights_measure weights Task used prediction. feat: Add \"macro_weighted\" option Measure$average field. feat: MeasureRegrRSQ MeasureClassifCost gain \"weights\" property. feat: LearnerClassifFeatureless, LearnerRegrFeatureless, LearnerClassifDebug, LearnerRegrDebug gain \"weights\" property. feat: Learner printer now prints information encapsulation weights use. feat: Add score_roc_measures() score prediction various roc measures. feat: better error message thrown, often happens incorrectly configuring validate field GraphLearner feat: Added method $set_threshold() BenchmarkResult ResamplingResult, allows set threshold response prediction classification learners, given output probability prediction (#1270). feat: Added field $uhash_table BenchmarkResult functions uhash() uhashes() easily compute uhashes given learner, task, resampling ids (#1270). feat: can now change default predict type classification learners \"prob\" setting option mlr3.prob_as_default TRUE (#1273). feat: benchmark_grid() now throw warning mix different predict types design (#1273). feat: Converting BenchmarkResult data.table now includes task_id, learner_id, resampling_id columns (#1275). fix: Add missing parameters \"regr.pinball\" \"sim.phi\" measures. feat: Add new measure \"regr.rqr\" quantile regression.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0230","dir":"Changelog","previous_headings":"","what":"mlr3 0.23.0","title":"mlr3 0.23.0","text":"CRAN release: 2025-03-12 feat: Add new col_role offset Task offset Learner property. warning produced learner doesn’t support offsets trained task offset column. fix: $predict_newdata() method Learner now automatically conducts type conversions (#685). BREAKING_CHANGE: Predicting Task wrong column information now error warning. Column names UTF-8 characters now allowed default. option mlr3.allow_utf8_names removed. BREAKING CHANGE: Learner$predict_types read-now. docs: Clear behavior Learner$predict_type training. feat: Add callbacks resample() benchmark(). fix: Internal tuning validation now works model requires marshaling (#1256)","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0221","dir":"Changelog","previous_headings":"","what":"mlr3 0.22.1","title":"mlr3 0.22.1","text":"CRAN release: 2024-11-27 fix: Extend assert_measure() checks trained models assert_scorable().","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0220","dir":"Changelog","previous_headings":"","what":"mlr3 0.22.0","title":"mlr3 0.22.0","text":"CRAN release: 2024-11-24 fix: Quantiles must ascend probabilities. refactor: Replace tsk(\"boston_housing\") tsk(\"california_housing\"). feat: Require unique learner ids benchmark_grid(). BREAKING CHANGE: Remove $loglik() method learners. fix: Ignore future.globals.maxSize future::plan(\"sequential\") used. feat: Add $characteristics field Task store additional information.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0211","dir":"Changelog","previous_headings":"","what":"mlr3 0.21.1","title":"mlr3 0.21.1","text":"CRAN release: 2024-10-18 feat: Throw warning prediction measure type match. fix: mlr_reflections broken extension package loaded workers. Extension packages must now register mlr_reflections$loaded_packages field.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0210","dir":"Changelog","previous_headings":"","what":"mlr3 0.21.0","title":"mlr3 0.21.0","text":"CRAN release: 2024-09-24 BREAKING CHANGE: Deprecated data_format data_formats Learner, Task, DataBackend classes. feat: partition() function creates training, test validation sets now. perf: Optimize runtime fixing factor levels. perf: Optimize runtime setting row roles. perf: Optimize runtime marshalling. perf: Optimize runtime Task$col_info. fix: column info now checked compatibility Learner$predict (#943). BREAKING CHANGE: predict time learner now stores cumulative duration predict sets (#992). feat: $internal_valid_task can now set integer vector. feat: Measures can now empty $predict_sets (#1094). relevant measures extract information model learner (internal validation scores AIC / BIC) BREAKING CHANGE: Deprecated $divide() method fix: Task$cbind() now works non-standard primary keys data.frames (#961). fix: Triggering fallback learner now log-level \"info\" instead \"debug\" (#972). feat: Added new measure regr.pinball mlr3measures. feat: Added new measure mu_auc mlr3measures. feat: Add option calculate mean true values train set msr(\"regr.rsq\"). feat: Default fallback learner set encapsulation activated. feat: Learners classif.debug regr.debug new methods $importance() $selected_features() testing, also downstream packages. feat: Create default fallback learner default_fallback(). feat: Check column roles using $set_col_roles() $col_roles. fix: Add predict set learner hash. BREAKING CHANGE: Encapsulation fallback learner now set $encapsulate(method, fallback) method. $fallback field read-now encapsulate status can retrieved $encapsulation field.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0202","dir":"Changelog","previous_headings":"","what":"mlr3 0.20.2","title":"mlr3 0.20.2","text":"CRAN release: 2024-07-29 refactor: Move RhpcBLASctl suggest. feat: Added resampling property \"primary_iters\" feat: Added possibility access observation-wise losses via function $obs_loss. possible Prediction, ResampleResult BenchmarkResult. feat: Measures now also return vector numerics.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0201","dir":"Changelog","previous_headings":"","what":"mlr3 0.20.1","title":"mlr3 0.20.1","text":"CRAN release: 2024-07-22 feat: Add multiclass Matthews correlation coefficient msr(\"classif.mcc\").","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0200","dir":"Changelog","previous_headings":"","what":"mlr3 0.20.0","title":"mlr3 0.20.0","text":"CRAN release: 2024-06-28 Added support learner-internal validation tuning.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0190","dir":"Changelog","previous_headings":"","what":"mlr3 0.19.0","title":"mlr3 0.19.0","text":"CRAN release: 2024-04-24 Added support \"marshal\" property, allows learners process models can serialized. happens automatically resample() benchmark(). Encapsulation methods use RNG state now. Fix missing values default_values.Learner() function. Encapsulated error messages now printed lgr package.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0180","dir":"Changelog","previous_headings":"","what":"mlr3 0.18.0","title":"mlr3 0.18.0","text":"CRAN release: 2024-03-05 Prepare compatibility new paradox version. Dictionary conversion mlr_learners respects prototype arguments recently added mlr3misc. Skip unnecessary clone learner’s state resample().","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0172","dir":"Changelog","previous_headings":"","what":"mlr3 0.17.2","title":"mlr3 0.17.2","text":"CRAN release: 2024-01-09 Skip new data.table tests mac.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0171","dir":"Changelog","previous_headings":"","what":"mlr3 0.17.1","title":"mlr3 0.17.1","text":"CRAN release: 2023-12-21 Remove data_prototype resampling learner$state reduce memory consumption. Reduce number threads used data.table BLAS 1 running resample() benchmark() parallel. Optimize runtime resample() benchmark() reducing number hashing operations.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0170","dir":"Changelog","previous_headings":"","what":"mlr3 0.17.0","title":"mlr3 0.17.0","text":"CRAN release: 2023-11-17 Learners added HotstartStack anymore model missing. Learners bellow hotstart_threshold added HotstartStack anymore. learner$state$train_time hotstarted learners now time last training. Added debug messages hotstart stack. Fixed bug HotstartStack work column roles set task. design benchmark() can now include parameter settings. Speed resampling removing unnecessary calls packageVersion(). Fix boston housing data set. Export generic function col_info allow adding new methods backends. Task printer includes row roles now. Add \"mlr3.exec_chunk_bins\" option split resampling iterations number bins.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0161","dir":"Changelog","previous_headings":"","what":"mlr3 0.16.1","title":"mlr3 0.16.1","text":"CRAN release: 2023-06-17 Function data.table() now re-exported. Fixed test randomly failed. Improved documentation. Add encapsulation mode \"try\", works similar \"none\" captures errors","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0160","dir":"Changelog","previous_headings":"","what":"mlr3 0.16.0","title":"mlr3 0.16.0","text":"CRAN release: 2023-05-05 Added argument paired benchmark_grid() function, can used create benchmark design, resamplings instantiated tasks. Added S3 method ResultData as_resample_result() converter. Added S3 method list as_resample_result() converter. featureless classification learner now returns proper probabilities (#918).","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0150","dir":"Changelog","previous_headings":"","what":"mlr3 0.15.0","title":"mlr3 0.15.0","text":"CRAN release: 2023-03-17 Many returned tables now assigned class print method make output readable. Fixed typos","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0141","dir":"Changelog","previous_headings":"","what":"mlr3 0.14.1","title":"mlr3 0.14.1","text":"CRAN release: 2022-11-02 Removed dependency package distr6. Fixed reassembling GraphLearner. Fixed bug measured elapsed time 0: https://stackoverflow.com/questions/73797845/mlr3-benchmarking--elapsed-time-measure Fixed as_prediction_classif() data.frame() input (#872). Improved error message predict type fallback learner match predict type learner (mlr-org/mlr3extralearners#241). test set now available Learner train early stopping.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0140","dir":"Changelog","previous_headings":"","what":"mlr3 0.14.0","title":"mlr3 0.14.0","text":"CRAN release: 2022-08-11 Added multiclass measures: mauc_aunu, mauc_aunp, mauc_au1u, mauc_au1p. Measure classif.costs require Task anymore. New converter: as_task_unsupervised() Refactored task types mlr_reflections.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0134","dir":"Changelog","previous_headings":"","what":"mlr3 0.13.4","title":"mlr3 0.13.4","text":"CRAN release: 2022-07-21 Added new options parallelization (\"mlr3.exec_random\" \"mlr3.exec_chunk_size\"). options passed respective map functions package future.apply. Fixed runtime measures depending specific predict types (#832). Added head() tail() methods Task. Improved printing multiple objects.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0133","dir":"Changelog","previous_headings":"","what":"mlr3 0.13.3","title":"mlr3 0.13.3","text":"CRAN release: 2022-03-01 objects now new (optional) field label, .e. Task, TaskGenerator, Learner, Resampling, Measure. .data.table() methods objects class Dictonary extended additional columns. as_task_classif.formula() as_task_regr.formula() now remove additional atrributes attached data caused learners break. Packages now loaded prior calling $train() $predict() methods Learner. ensures package loading errors properly propagated affected encapsulation (#771).","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0132","dir":"Changelog","previous_headings":"","what":"mlr3 0.13.2","title":"mlr3 0.13.2","text":"CRAN release: 2022-02-14 Setting fallback learner learner encapsulation default settings now automatically sets encapsulation \"evaluate\" (#763). as_task_classif() as_task_regr() now support construction tasks using formula interface, e.g. as_task_regr(mpg ~ ., data = mtcars) (#761). Added default_values() function extract parameter default values Learner objects. row role \"validation\" renamed \"holdout\". next release, mlr3 start switching now common terms \"train\"/\"validation\" instead \"train\"/\"test\" sets created resampling.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0131","dir":"Changelog","previous_headings":"","what":"mlr3 0.13.1","title":"mlr3 0.13.1","text":"CRAN release: 2022-01-19 Improved performance many operations ResampleResult BenchmarkResult. resample() benchmark() got new argument clone control objects clone performing computations. Tasks checked infinite values conversion data.frame Task as_task_classif() as_task_regr(). warning signaled column contains infinite values.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0130","dir":"Changelog","previous_headings":"","what":"mlr3 0.13.0","title":"mlr3 0.13.0","text":"CRAN release: 2021-11-16 Learners capable resuming/continuing (e.g., learner (classif|regr|surv).xgboost hyperparameter nrounds updated) can now optionally store stack trained learners used hotstart training. Note feature still somewhat experimental. See HotstartStack #719. New measures score similarity selected feature sets: sim.jaccard (Jaccard Index) sim.phi (Phi coefficient) (#690). predict_newdata() now also supports DataBackend input. New function install_pkgs() install required packages. generic works objects packages field well ResampleResult BenchmarkResult (#728). New learner regr.debug debugging. New Task method $set_levels() control data factor columns returned, independent used DataBackend. Measures now return NA prerequisite met (#699). allows conveniently score experiments multiple measures different requirements. Feature names may longer contain special character %.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0120","dir":"Changelog","previous_headings":"","what":"mlr3 0.12.0","title":"mlr3 0.12.0","text":"CRAN release: 2021-08-05 New method assign labels columns tasks: Task$label(). used visualizations future. New method add stratification variables: Task$add_strata(). New helper function partition() split task training test set. New standardized getter loglik() class Learner. New measures \"aic\" \"bic\" compute Akaike Information Criterion Bayesian Information Criterion, respectively. New Resampling method: ResamplingCustomCV. Creates custom resampling split based levels user-provided factor variable. New argument encapsulate resample() benchmark() conveniently enable encapsulation also set fallback learner featureless learner. simply convenience, configuring learner individually still possible allows fine-grained control (#634, #642). New field parallel_predict Learner enable parallel predictions via future backend. currently enabled calling $predict() $predict_newdata methods disabled resample() benchmark() means parallelize. Deprecated public (already documented internal) field $data ResampleResult BenchmarkResult simplify API avoid confusion. converter .data.table() can used instead access internal data. Measures now formal hyperparameters. popular example required F1 score, now implemented customizable beta. Changed default argument ordered Task$data() TRUE FALSE. Fixed getter ResamplingRepeatedCV$folds() (#643). Fixed hashing measures. Removed experimental column role uri. role split multiple roles mlr3keras package. Update paramtest error extra parameters","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0110","dir":"Changelog","previous_headings":"","what":"mlr3 0.11.0","title":"mlr3 0.11.0","text":"CRAN release: 2021-03-05 Added .data.table.Resampling method. Renamed column \"row_id\" \"row_ids\" .data.table() methods PredictionClassif PredictionRegr (#547). Added converters as_prediction_classif() as_prediction_regr() reverse operation .data.table.PredictionClassif() .data.table.PredictionRegr(). Specifying weight column learner$predict_newdata() mandatory anymore (#563). Task$data() defaults return active rows columns, instead asserting return rows columns. result, $data() method can now also used query inactive rows cols DataBackend. New (experimental) column role uri intended point external resources, e.g. images file system. New helper set_threads() control number threads calls external packages. objects migrated threading disabled defaults avoid conflicting parallelization techniques (#605). New option mlr3.debug: avoid calls future resample() benchmark() improve readability tracebacks. New experimental option mlr3.allow_utf8_names: allow non-ascii characters column names tasks.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-0100","dir":"Changelog","previous_headings":"","what":"mlr3 0.10.0","title":"mlr3 0.10.0","text":"CRAN release: 2021-01-21 Result containers ResampleResult BenchmarkResult now optionally remove DataBackend Tasks order reduce file size memory footprint serialization. remove backends containers, set store_backends FALSE resample() benchmark(), respectively. Note behavior eventually default future releases. Prediction objects generated Learner$predict_newdata() now row ids starting 1 instead auto incremented row ids training task. .data.table.DictionaryTasks now returns additional column properties. Added flag conditions ResampleResult$score() BenchmarkResult$score() allow work failing learners conveniently.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-090","dir":"Changelog","previous_headings":"","what":"mlr3 0.9.0","title":"mlr3 0.9.0","text":"CRAN release: 2020-12-06 New methods Task: $set_col_roles $set_row_roles replacement deprecated less flexible $set_col_role $set_row_role. Learners can now timeout (#556). Removed S3 method friedman.test.BenchmarkResult() favor new mlr3benchmark package.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-080","dir":"Changelog","previous_headings":"","what":"mlr3 0.8.0","title":"mlr3 0.8.0","text":"CRAN release: 2020-10-21 MeasureOOBError now set property minimize TRUE. New learner property \"featureless\" tag learners can operate featureless tasks. Fixed [ResampleResult] ignoring argument predict_sets returned [Prediction] objects. Compatibility new version lgr.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-070","dir":"Changelog","previous_headings":"","what":"mlr3 0.7.0","title":"mlr3 0.7.0","text":"CRAN release: 2020-10-07 Updated properties featureless learners apply feature types (work POSIXct columns). Fixed measures calculated NaN BenchmarkResult resamplings single iteration (#551). Fixed bug broken heuristic disabled nested parallelization via package future (mlr3tuning#270). ResampleResult BenchmarkResult now share common interface store experiment results. Manual construction still possible helper function as_result_data() Fixed deep cloning ResamplingCV ResamplingRepeatedCV. New measure classif.prauc (area precision-recall curve). Removed dependency orphaned package bibtex.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-060","dir":"Changelog","previous_headings":"","what":"mlr3 0.6.0","title":"mlr3 0.6.0","text":"CRAN release: 2020-09-13 Compact -memory representation R6 objects save space saving objects via saveRDS() serialize(). Objects containers like ResampleResult BenchmarkResult now de-duplicated optimized serialization. Fixed data set breast_cancer: factor features now correctly stored ordered factors. Added new utility function convert_task().","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-050","dir":"Changelog","previous_headings":"","what":"mlr3 0.5.0","title":"mlr3 0.5.0","text":"CRAN release: 2020-08-07 Added classification task breast_cancer Added ResamplingLOO leave-one-resampling. Regression now supports predict type \"distr\" using distr6 package. Fixed ResamplingBootstrap combination grouping (#514). Fixed plot method TaskGeneratorMoons. Added hyperparameter keep_model learners \"classif.rpart\" \"regr.rpart\".","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-040","dir":"Changelog","previous_headings":"","what":"mlr3 0.4.0","title":"mlr3 0.4.0","text":"CRAN release: 2020-07-22 Added new task generators (\"cassini\", \"circle\", \"simplex\", \"spirals\", \"moons\"). Columns tasks generated task generators renamed consistent. Added plot() method task generators. Corrected data task german_credit (#514).","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-030","dir":"Changelog","previous_headings":"","what":"mlr3 0.3.0","title":"mlr3 0.3.0","text":"CRAN release: 2020-06-02 Package future.apply now imported (instead suggested). necessary ensure reproducibility: way exactly result calculated, independent parallel backend. Fixed bug prediction new data task blocking information raised exception (#496). New binding: Task$order.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-020","dir":"Changelog","previous_headings":"","what":"mlr3 0.2.0","title":"mlr3 0.2.0","text":"CRAN release: 2020-04-17 handy cheat sheets can now downloaded project homepage. Added new measures classif.bbrier (binary Brier score) classif.mbrier (multi-class Brier score). Added new Resampling: ResamplingInsample. Added base class unsupervised tasks: TaskUnsupervised.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-018","dir":"Changelog","previous_headings":"","what":"mlr3 0.1.8","title":"mlr3 0.1.8","text":"CRAN release: 2020-03-09 Added S3 methods combine ResampleResults BenchmarkResults c(). Fixed bug automatic generation row ids lead duplicated ids via Task$predict_newdata()/Task$rbind() (#423).","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-017","dir":"Changelog","previous_headings":"","what":"mlr3 0.1.7","title":"mlr3 0.1.7","text":"CRAN release: 2020-02-23 Switched new roxygen2 documentation format R6 classes. resample() benchmark() now support progress bars via package progressr. Row ids now must numeric. previously allowed character row ids, lead confusion unnecessary code bloat. Row identifiers (e.g., used plots) can still part task, row role \"name\". Row names can now queried Task$row_names. DataBackendMatrix now supports store optional (numeric) dense part. Added new method $filter() filter ResampleResults subset iterations. Removed deprecated character() -> object converters. Empty test sets now handled separately learners (#421). empty prediction object returned learners. internal train predict function Learner now implemented private method: instead public methods train_internal predict_internal, private methods .train .predict now encouraged. now encouraged move internal methods public private: Learner$train_internal now private method $.train. Learner$predict_internal now private method $.predict. Measure$score_internal now private method $.score. public methods deprecated future release. Removed arguments constructor measures classif.debug classif.costs. can set directly msr().","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-016","dir":"Changelog","previous_headings":"","what":"mlr3 0.1.6","title":"mlr3 0.1.6","text":"CRAN release: 2019-12-19 published article mlr3 Journal Open Source Software: https://joss.theoj.org/papers/10.21105/joss.01903. See citation(\"mlr3\") citation info. New method Learner$reset(). New method BenchmarkResult$filter(). Learners returned BenchmarkResult$learners reset encourage safer alternative BenchmarkResult$score() access trained models. Fix ordering levels PredictionClassif$set_threshold() (triggered assertion).","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-015","dir":"Changelog","previous_headings":"","what":"mlr3 0.1.5","title":"mlr3 0.1.5","text":"CRAN release: 2019-12-10 Switched package Metrics package mlr3measures. Measures can now calculate scores using micro macro averaging (#400). Measures can now configured return customizable performance score (instead NA) case score calculated. Character columns now treated differently factor columns. long term, character() columns supposed store text. Fixed bug triggered integer grouping variables Task (#396). benchmark_grid() now accepts instantiated resamplings certain conditions.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-014","dir":"Changelog","previous_headings":"","what":"mlr3 0.1.4","title":"mlr3 0.1.4","text":"CRAN release: 2019-10-28 Task$set_col_roles() Task$set_row_roles() now deprecated. Instead recommended now work lists Task$col_roles Task$row_roles directly. Learner$predict_newdata() now works without argument task learner fitted Learner$train() (#375). Names column roles unified (\"weights\", \"label\", \"stratify\" \"groups\" renamed). Replaced MeasureClassifF1 MeasureClassifFScore fixed bug F1 performance calculation (#353). Thanks @001ben reporting. Stratification now controlled via task column role (parameter class Resampling ). Added S3 predict() method class Learner increase interoperability packages. Many objects now come $help() opens respective manual page.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-013","dir":"Changelog","previous_headings":"","what":"mlr3 0.1.3","title":"mlr3 0.1.3","text":"CRAN release: 2019-09-18 now possible predict score results training set training test set. Learners can instructed predict multiple sets setting predict_sets (default: \"test\"). Measures operate sets specified field predict_sets (default: \"test\"). ResampleResult$prediction ResampleResult$predictions() now methods instead fields, allow extract predictions different predict sets. ResampleResult$performance() renamed ResampleResult$score() consistency. BenchmarkResult$performance() renamed BenchmarkResult$score() consistency. Changed API (internal) constructors accepting paradox::ParamSet(). Instead passing initial values separately, initial values must now set directly ParamSet.","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-012","dir":"Changelog","previous_headings":"","what":"mlr3 0.1.2","title":"mlr3 0.1.2","text":"CRAN release: 2019-08-25 Deprecated support automatically creating objects strings. Instead, mlr3 provides following helper functions intended ease creation objects stored dictionaries: tsk(), tgen(), lrn(), rsmp(), msr(). BenchmarkResult now ensures stored ResampleResults persistent order. Thus, ResampleResults can now addressed position instead hash. New field BenchmarkResult$n_resample_results. New field BenchmarkResult$hashes. New method Task$rename(). New S3 generic as_benchmark_result(). Renamed Generator TaskGenerator. Removed control object mlr_control(). Removed ResampleResult$combine(). Removed BenchmarkResult$best().","code":""},{"path":"https://mlr3.mlr-org.com/dev/news/index.html","id":"mlr3-011","dir":"Changelog","previous_headings":"","what":"mlr3 0.1.1","title":"mlr3 0.1.1","text":"CRAN release: 2019-07-25 Initial upload CRAN.","code":""}]
